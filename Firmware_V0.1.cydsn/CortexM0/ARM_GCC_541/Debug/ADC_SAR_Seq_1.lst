ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_SAR_Seq_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_SAR_Seq_1_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_SAR_Seq_1_Init, %function
  25              	ADC_SAR_Seq_1_Init:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.40
   4:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  19:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 2


  31:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000000u, 0x00000000u, 0x00000000u
  34:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****  0x00000000u };
  35:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  37:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  38:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  39:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  40:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  41:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  42:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  43:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  44:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  45:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  46:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  47:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  48:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  49:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  50:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  51:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  52:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  53:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  54:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  55:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  56:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  57:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  58:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  59:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  60:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  61:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  62:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  63:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  64:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  65:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  66:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  67:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  68:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  70:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  71:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  73:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  74:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  76:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  77:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  78:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  79:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  80:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  81:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  82:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  83:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  84:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  85:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  86:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  87:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 3


  88:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  89:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  90:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  91:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  92:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  93:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  94:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  95:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  96:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  28              		.loc 1 96 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  97:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  98:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  99:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
 100:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 101:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 102:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 103:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 104:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 105:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 106:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 107:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 108:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 109:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 110:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 111:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 112:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 113:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 114:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 115:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 116:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 117:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 118:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 119:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 120:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 121:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 122:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 123:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 124:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 125:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 126:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 127:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 128:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 129:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 130:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 131:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
 132:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 133:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 134:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 135:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 136:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u)
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 4


 137:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 138:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PIN
 139:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u */
 140:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u)
 141:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 142:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PIN
 143:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u */
 144:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u)
 145:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 146:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PIN
 147:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u */
 148:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u)
 149:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 150:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PIN
 151:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u */
 152:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u)
 153:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 154:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PIN
 155:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u */
 156:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u)
 157:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 158:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PIN
 159:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u */
 160:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u)
 161:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 162:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PIN
 163:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u */
 164:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u)
 165:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 166:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PIN
 167:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u */
 168:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 169:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 170:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 171:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 172:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 173:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  36              		.loc 1 173 0
  37 0002 0321     		movs	r1, #3
  38 0004 1120     		movs	r0, #17
  39 0006 FFF7FEFF 		bl	CyIntSetPriority
  40              	.LVL0:
 174:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  41              		.loc 1 174 0
  42 000a 4349     		ldr	r1, .L12
  43 000c 1120     		movs	r0, #17
  44 000e FFF7FEFF 		bl	CyIntSetVector
  45              	.LVL1:
 175:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 176:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 177:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
  46              		.loc 1 178 0
  47 0012 1F22     		movs	r2, #31
  48 0014 414B     		ldr	r3, .L12+4
  49 0016 1A60     		str	r2, [r3]
 179:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 5


 180:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 181:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
  50              		.loc 1 181 0
  51 0018 414B     		ldr	r3, .L12+8
  52 001a 1B68     		ldr	r3, [r3]
 179:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  53              		.loc 1 179 0
  54 001c 002B     		cmp	r3, #0
  55 001e 01DA     		bge	.L10
  56 0020 4049     		ldr	r1, .L12+12
  57 0022 00E0     		b	.L2
  58              	.L10:
  59 0024 4049     		ldr	r1, .L12+16
  60              	.L2:
 179:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  61              		.loc 1 179 0 is_stmt 0 discriminator 4
  62 0026 414A     		ldr	r2, .L12+20
  63 0028 1368     		ldr	r3, [r2]
  64 002a 0B43     		orrs	r3, r1
  65 002c 1360     		str	r3, [r2]
 182:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 183:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 183 0 is_stmt 1 discriminator 4
  67 002e 404A     		ldr	r2, .L12+24
  68 0030 404B     		ldr	r3, .L12+28
  69 0032 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 184 0 discriminator 4
  71 0034 404A     		ldr	r2, .L12+32
  72 0036 414B     		ldr	r3, .L12+36
  73 0038 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
  74              		.loc 1 185 0 discriminator 4
  75 003a 0023     		movs	r3, #0
  76 003c 404A     		ldr	r2, .L12+40
  77 003e 1360     		str	r3, [r2]
 186:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
  78              		.loc 1 186 0 discriminator 4
  79 0040 404A     		ldr	r2, .L12+44
  80 0042 4149     		ldr	r1, .L12+48
  81 0044 0A60     		str	r2, [r1]
 187:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
  82              		.loc 1 187 0 discriminator 4
  83 0046 4149     		ldr	r1, .L12+52
  84 0048 0A60     		str	r2, [r1]
 188:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 189:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 190:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 191:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
  85              		.loc 1 191 0 discriminator 4
  86 004a 414A     		ldr	r2, .L12+56
  87 004c 1168     		ldr	r1, [r2]
  88 004e 8020     		movs	r0, #128
  89 0050 4002     		lsls	r0, r0, #9
  90 0052 0143     		orrs	r1, r0
  91 0054 1160     		str	r1, [r2]
 192:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 6


 193:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 194:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
  92              		.loc 1 194 0 discriminator 4
  93 0056 3F49     		ldr	r1, .L12+60
  94 0058 0A68     		ldr	r2, [r1]
  95 005a 0243     		orrs	r2, r0
  96 005c 0A60     		str	r2, [r1]
 195:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 196:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 197:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 198:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
  97              		.loc 1 198 0 discriminator 4
  98 005e 3E4A     		ldr	r2, .L12+64
  99 0060 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
 100              		.loc 1 199 0 discriminator 4
 101 0062 3E4A     		ldr	r2, .L12+68
 102 0064 1360     		str	r3, [r2]
 200:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
 103              		.loc 1 200 0 discriminator 4
 104 0066 0122     		movs	r2, #1
 105 0068 3D4B     		ldr	r3, .L12+72
 106 006a 1A60     		str	r2, [r3]
 201:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 202:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 203:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
 204:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 205:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 206:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 207:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
 107              		.loc 1 207 0 discriminator 4
 108 006c 3D4A     		ldr	r2, .L12+76
 109 006e 1168     		ldr	r1, [r2]
 110              	.LVL2:
 111 0070 3D4B     		ldr	r3, .L12+80
 112 0072 0B40     		ands	r3, r1
 208:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 209:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 210:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 211:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 212:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 213:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 214:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 215:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 216:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
 217:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 218:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 219:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 220:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 221:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 222:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 113              		.loc 1 222 0 discriminator 4
 114 0074 8021     		movs	r1, #128
 115              	.LVL3:
 116 0076 8905     		lsls	r1, r1, #22
 117 0078 0B43     		orrs	r3, r1
 118              	.LVL4:
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 7


 223:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 224:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 225:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 226:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 227:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 119              		.loc 1 227 0 discriminator 4
 120 007a 1360     		str	r3, [r2]
 121              	.LVL5:
 228:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 229:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
 230:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 231:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 233:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 122              		.loc 1 233 0 discriminator 4
 123 007c 0022     		movs	r2, #0
 124 007e 48E0     		b	.L3
 125              	.LVL6:
 126              	.L9:
 234:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 235:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 127              		.loc 1 235 0
 128 0080 3A48     		ldr	r0, .L12+84
 129 0082 9100     		lsls	r1, r2, #2
 130 0084 0C58     		ldr	r4, [r1, r0]
 131 0086 DC23     		movs	r3, #220
 132 0088 9B01     		lsls	r3, r3, #6
 133 008a 2340     		ands	r3, r4
 134              	.LVL7:
 236:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 237:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 135              		.loc 1 237 0
 136 008c 8018     		adds	r0, r0, r2
 137 008e 007D     		ldrb	r0, [r0, #20]
 138 0090 0343     		orrs	r3, r0
 139              	.LVL8:
 238:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 239:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 240:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 241:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 242:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 243:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 244:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 245:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 246:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 247:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 248:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 249:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 250:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 251:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 252:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 253:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 254:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 140              		.loc 1 254 0
 141 0092 3748     		ldr	r0, .L12+88
 142 0094 8446     		mov	ip, r0
 143 0096 6144     		add	r1, r1, ip
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 8


 144 0098 0B60     		str	r3, [r1]
 255:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 256:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 145              		.loc 1 256 0
 146 009a E307     		lsls	r3, r4, #31
 147 009c 07D5     		bpl	.L4
 148              	.LVL9:
 257:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 258:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 149              		.loc 1 258 0
 150 009e 2E48     		ldr	r0, .L12+64
 151 00a0 0168     		ldr	r1, [r0]
 152              	.LVL10:
 153 00a2 0123     		movs	r3, #1
 154 00a4 9340     		lsls	r3, r3, r2
 155 00a6 1B04     		lsls	r3, r3, #16
 156 00a8 1B0C     		lsrs	r3, r3, #16
 157 00aa 0B43     		orrs	r3, r1
 158 00ac 0360     		str	r3, [r0]
 159              	.LVL11:
 160              	.L4:
 259:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 260:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 261:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 161              		.loc 1 261 0
 162 00ae 9300     		lsls	r3, r2, #2
 163 00b0 2E49     		ldr	r1, .L12+84
 164              	.LVL12:
 165 00b2 5B58     		ldr	r3, [r3, r1]
 166 00b4 9B07     		lsls	r3, r3, #30
 167 00b6 07D5     		bpl	.L5
 262:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 263:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 168              		.loc 1 263 0
 169 00b8 2848     		ldr	r0, .L12+68
 170 00ba 0168     		ldr	r1, [r0]
 171              	.LVL13:
 172 00bc 0123     		movs	r3, #1
 173 00be 9340     		lsls	r3, r3, r2
 174 00c0 1B04     		lsls	r3, r3, #16
 175 00c2 1B0C     		lsrs	r3, r3, #16
 176 00c4 0B43     		orrs	r3, r1
 177 00c6 0360     		str	r3, [r0]
 178              	.L5:
 264:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 265:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 266:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 267:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 268:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 269:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
 270:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 271:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 272:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 273:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 274:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 275:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 276:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 9


 277:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 278:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 279:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 280:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 281:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 282:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 283:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 179              		.loc 1 283 0
 180 00c8 9300     		lsls	r3, r2, #2
 181 00ca 2849     		ldr	r1, .L12+84
 182              	.LVL14:
 183 00cc 5958     		ldr	r1, [r3, r1]
 184              	.LVL15:
 185 00ce 8B05     		lsls	r3, r1, #22
 186 00d0 02D5     		bpl	.L11
 284:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 285:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 187              		.loc 1 285 0
 188 00d2 8020     		movs	r0, #128
 189 00d4 4000     		lsls	r0, r0, #1
 190 00d6 01E0     		b	.L6
 191              	.L11:
 286:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 287:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 288:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 289:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 192              		.loc 1 289 0
 193 00d8 8020     		movs	r0, #128
 194 00da 4001     		lsls	r0, r0, #5
 195              	.L6:
 196              	.LVL16:
 290:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 291:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 292:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 197              		.loc 1 292 0
 198 00dc CB05     		lsls	r3, r1, #23
 199 00de 04D4     		bmi	.L7
 293:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 294:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 295:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 296:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 297:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 298:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 299:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 200              		.loc 1 299 0
 201 00e0 5300     		lsls	r3, r2, #1
 202 00e2 0024     		movs	r4, #0
 203              	.LVL17:
 204 00e4 2349     		ldr	r1, .L12+92
 205 00e6 5C52     		strh	r4, [r3, r1]
 206 00e8 03E0     		b	.L8
 207              	.LVL18:
 208              	.L7:
 300:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 301:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 302:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 303:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 10


 304:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 305:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 306:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 307:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 308:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 209              		.loc 1 308 0
 210 00ea 5300     		lsls	r3, r2, #1
 211 00ec 0024     		movs	r4, #0
 212              	.LVL19:
 213 00ee 2149     		ldr	r1, .L12+92
 214 00f0 5C52     		strh	r4, [r3, r1]
 215              	.L8:
 309:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 310:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 312:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 216              		.loc 1 312 0 discriminator 2
 217 00f2 214B     		ldr	r3, .L12+96
 218 00f4 4343     		muls	r3, r0
 219 00f6 8021     		movs	r1, #128
 220 00f8 C900     		lsls	r1, r1, #3
 221 00fa 8C46     		mov	ip, r1
 222 00fc 6344     		add	r3, r3, ip
 313:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 223              		.loc 1 313 0 discriminator 2
 224 00fe D917     		asrs	r1, r3, #31
 225 0100 4905     		lsls	r1, r1, #21
 226 0102 490D     		lsrs	r1, r1, #21
 227 0104 CB18     		adds	r3, r1, r3
 228 0106 DB12     		asrs	r3, r3, #11
 312:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 229              		.loc 1 312 0 discriminator 2
 230 0108 1BB2     		sxth	r3, r3
 231 010a 9000     		lsls	r0, r2, #2
 232              	.LVL20:
 233 010c 1B49     		ldr	r1, .L12+100
 234 010e 4350     		str	r3, [r0, r1]
 233:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 235              		.loc 1 233 0 discriminator 2
 236 0110 0132     		adds	r2, r2, #1
 237              	.LVL21:
 238              	.L3:
 233:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 239              		.loc 1 233 0 is_stmt 0 discriminator 1
 240 0112 042A     		cmp	r2, #4
 241 0114 B4D9     		bls	.L9
 314:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 315:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 242              		.loc 1 315 0 is_stmt 1
 243              		@ sp needed
 244 0116 10BD     		pop	{r4, pc}
 245              	.L13:
 246              		.align	2
 247              	.L12:
 248 0118 00000000 		.word	ADC_SAR_Seq_1_ISR
 249 011c 20003A40 		.word	1077542944
 250 0120 80033A40 		.word	1077543808
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 11


 251 0124 C0201013 		.word	319824064
 252 0128 C0200013 		.word	318775488
 253 012c 00003A40 		.word	1077542912
 254 0130 8C000080 		.word	-2147483508
 255 0134 04003A40 		.word	1077542916
 256 0138 0000FF07 		.word	134152192
 257 013c 18003A40 		.word	1077542936
 258 0140 1C003A40 		.word	1077542940
 259 0144 04000400 		.word	262148
 260 0148 10003A40 		.word	1077542928
 261 014c 14003A40 		.word	1077542932
 262 0150 00033A40 		.word	1077543680
 263 0154 40033A40 		.word	1077543744
 264 0158 28023A40 		.word	1077543464
 265 015c 38023A40 		.word	1077543480
 266 0160 18023A40 		.word	1077543448
 267 0164 30003A40 		.word	1077542960
 268 0168 FEFFFFDF 		.word	-536870914
 269 016c 00000000 		.word	.LANCHOR0
 270 0170 80003A40 		.word	1077543040
 271 0174 00000000 		.word	ADC_SAR_Seq_1_offset
 272 0178 10270000 		.word	10000
 273 017c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 274              		.cfi_endproc
 275              	.LFE2:
 276              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 277              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 278              		.align	2
 279              		.global	ADC_SAR_Seq_1_Enable
 280              		.code	16
 281              		.thumb_func
 282              		.type	ADC_SAR_Seq_1_Enable, %function
 283              	ADC_SAR_Seq_1_Enable:
 284              	.LFB3:
 316:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 317:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 318:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 319:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 320:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 321:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 322:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 323:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 324:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 325:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 326:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 327:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 328:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 329:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 330:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 331:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 332:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 285              		.loc 1 332 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289 0000 10B5     		push	{r4, lr}
 290              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 12


 291              		.cfi_offset 4, -8
 292              		.cfi_offset 14, -4
 333:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 293              		.loc 1 333 0
 294 0002 094B     		ldr	r3, .L17
 295 0004 1B68     		ldr	r3, [r3]
 296 0006 002B     		cmp	r3, #0
 297 0008 0CDB     		blt	.L14
 298              	.L16:
 334:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 335:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 336:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 337:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
 299              		.loc 1 337 0 discriminator 1
 300 000a 084B     		ldr	r3, .L17+4
 301 000c 1B68     		ldr	r3, [r3]
 302 000e 002B     		cmp	r3, #0
 303 0010 FBDB     		blt	.L16
 338:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 339:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle to avoid deadlock */
 340:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 341:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 342:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 343:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 304              		.loc 1 343 0
 305 0012 054A     		ldr	r2, .L17
 306 0014 1368     		ldr	r3, [r2]
 307 0016 8021     		movs	r1, #128
 308 0018 0906     		lsls	r1, r1, #24
 309 001a 0B43     		orrs	r3, r1
 310 001c 1360     		str	r3, [r2]
 344:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 345:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 346:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
 311              		.loc 1 346 0
 312 001e 0A20     		movs	r0, #10
 313 0020 FFF7FEFF 		bl	CyDelayUs
 314              	.LVL22:
 315              	.L14:
 347:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 348:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 316              		.loc 1 348 0
 317              		@ sp needed
 318 0024 10BD     		pop	{r4, pc}
 319              	.L18:
 320 0026 C046     		.align	2
 321              	.L17:
 322 0028 00003A40 		.word	1077542912
 323 002c 08023A40 		.word	1077543432
 324              		.cfi_endproc
 325              	.LFE3:
 326              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 327              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
 328              		.align	2
 329              		.global	ADC_SAR_Seq_1_Start
 330              		.code	16
 331              		.thumb_func
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 13


 332              		.type	ADC_SAR_Seq_1_Start, %function
 333              	ADC_SAR_Seq_1_Start:
 334              	.LFB1:
  65:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
 335              		.loc 1 65 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339 0000 10B5     		push	{r4, lr}
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 4, -8
 342              		.cfi_offset 14, -4
  67:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 343              		.loc 1 67 0
 344 0002 064B     		ldr	r3, .L21
 345 0004 1B78     		ldrb	r3, [r3]
 346 0006 002B     		cmp	r3, #0
 347 0008 04D1     		bne	.L20
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
 348              		.loc 1 69 0
 349 000a FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
 350              	.LVL23:
  70:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 351              		.loc 1 70 0
 352 000e 0122     		movs	r2, #1
 353 0010 024B     		ldr	r3, .L21
 354 0012 1A70     		strb	r2, [r3]
 355              	.L20:
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 356              		.loc 1 72 0
 357 0014 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
 358              	.LVL24:
  73:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 359              		.loc 1 73 0
 360              		@ sp needed
 361 0018 10BD     		pop	{r4, pc}
 362              	.L22:
 363 001a C046     		.align	2
 364              	.L21:
 365 001c 00000000 		.word	.LANCHOR1
 366              		.cfi_endproc
 367              	.LFE1:
 368              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
 369              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 370              		.align	2
 371              		.global	ADC_SAR_Seq_1_Stop
 372              		.code	16
 373              		.thumb_func
 374              		.type	ADC_SAR_Seq_1_Stop, %function
 375              	ADC_SAR_Seq_1_Stop:
 376              	.LFB4:
 349:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 350:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 351:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 352:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 353:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 354:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 14


 355:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 356:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 357:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 358:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 359:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 360:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 361:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 362:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 363:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 364:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 365:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 366:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 367:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 377              		.loc 1 367 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 368:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 382              		.loc 1 368 0
 383 0000 024A     		ldr	r2, .L24
 384 0002 1368     		ldr	r3, [r2]
 385 0004 5B00     		lsls	r3, r3, #1
 386 0006 5B08     		lsrs	r3, r3, #1
 387 0008 1360     		str	r3, [r2]
 369:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 388              		.loc 1 369 0
 389              		@ sp needed
 390 000a 7047     		bx	lr
 391              	.L25:
 392              		.align	2
 393              	.L24:
 394 000c 00003A40 		.word	1077542912
 395              		.cfi_endproc
 396              	.LFE4:
 397              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 398              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 399              		.align	2
 400              		.global	ADC_SAR_Seq_1_StartConvert
 401              		.code	16
 402              		.thumb_func
 403              		.type	ADC_SAR_Seq_1_StartConvert, %function
 404              	ADC_SAR_Seq_1_StartConvert:
 405              	.LFB5:
 370:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 371:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 372:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 373:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 374:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 375:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 376:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 377:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 378:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 379:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
 380:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 381:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 382:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 15


 383:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
 384:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 385:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 386:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 387:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 388:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 389:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 390:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 391:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 392:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 393:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 406              		.loc 1 393 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410              		@ link register save eliminated.
 394:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 395:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 411              		.loc 1 395 0
 412 0000 034A     		ldr	r2, .L27
 413 0002 1368     		ldr	r3, [r2]
 414 0004 8021     		movs	r1, #128
 415 0006 4902     		lsls	r1, r1, #9
 416 0008 0B43     		orrs	r3, r1
 417 000a 1360     		str	r3, [r2]
 396:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 397:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 398:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 399:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 400:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 418              		.loc 1 400 0
 419              		@ sp needed
 420 000c 7047     		bx	lr
 421              	.L28:
 422 000e C046     		.align	2
 423              	.L27:
 424 0010 04003A40 		.word	1077542916
 425              		.cfi_endproc
 426              	.LFE5:
 427              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 428              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 429              		.align	2
 430              		.global	ADC_SAR_Seq_1_StopConvert
 431              		.code	16
 432              		.thumb_func
 433              		.type	ADC_SAR_Seq_1_StopConvert, %function
 434              	ADC_SAR_Seq_1_StopConvert:
 435              	.LFB6:
 401:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 402:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 403:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 404:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 405:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 406:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 407:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 408:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 409:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 16


 410:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 411:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 412:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 413:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 414:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 415:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 416:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 417:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 418:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 436              		.loc 1 418 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 419:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 420:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 441              		.loc 1 420 0
 442 0000 024A     		ldr	r2, .L30
 443 0002 1168     		ldr	r1, [r2]
 444 0004 024B     		ldr	r3, .L30+4
 445 0006 0B40     		ands	r3, r1
 446 0008 1360     		str	r3, [r2]
 421:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 422:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 447              		.loc 1 422 0
 448              		@ sp needed
 449 000a 7047     		bx	lr
 450              	.L31:
 451              		.align	2
 452              	.L30:
 453 000c 04003A40 		.word	1077542916
 454 0010 FFFFFEFF 		.word	-65537
 455              		.cfi_endproc
 456              	.LFE6:
 457              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 458              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 459              		.align	2
 460              		.global	ADC_SAR_Seq_1_IsEndConversion
 461              		.code	16
 462              		.thumb_func
 463              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 464              	ADC_SAR_Seq_1_IsEndConversion:
 465              	.LFB7:
 423:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 425:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 426:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 427:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 428:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 429:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 430:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 431:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 432:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 433:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 434:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 435:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 436:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 17


 437:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 438:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 439:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 440:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 441:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 442:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 443:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 444:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 445:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 446:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 447:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 448:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 449:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 450:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 451:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 452:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 466              		.loc 1 452 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471              	.LVL25:
 472 0000 0200     		movs	r2, r0
 473              	.LVL26:
 453:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 454:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 455:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 474              		.loc 1 455 0
 475 0002 8307     		lsls	r3, r0, #30
 476 0004 0CD0     		beq	.L36
 477              	.LVL27:
 478              	.L35:
 456:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 457:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 458:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 459:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 479              		.loc 1 459 0 discriminator 2
 480 0006 074B     		ldr	r3, .L37
 481 0008 1B68     		ldr	r3, [r3]
 482 000a 0120     		movs	r0, #1
 483 000c 1840     		ands	r0, r3
 484              	.LVL28:
 460:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 485              		.loc 1 460 0 discriminator 2
 486 000e 01D1     		bne	.L34
 487              		.loc 1 460 0 is_stmt 0 discriminator 1
 488 0010 9307     		lsls	r3, r2, #30
 489 0012 F8D4     		bmi	.L35
 490              	.L34:
 461:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 462:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 491              		.loc 1 462 0 is_stmt 1
 492 0014 0028     		cmp	r0, #0
 493 0016 04D0     		beq	.L33
 463:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 464:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 465:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 18


 494              		.loc 1 465 0
 495 0018 0122     		movs	r2, #1
 496              	.LVL29:
 497 001a 024B     		ldr	r3, .L37
 498 001c 1A60     		str	r2, [r3]
 499 001e 00E0     		b	.L33
 500              	.LVL30:
 501              	.L36:
 453:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 502              		.loc 1 453 0
 503 0020 0020     		movs	r0, #0
 504              	.LVL31:
 505              	.L33:
 466:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 467:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 468:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 469:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 470:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 471:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 472:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 473:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 474:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 475:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
 476:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 477:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 478:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 479:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 480:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 481:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 482:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 483:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 484:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 485:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 486:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 487:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 506              		.loc 1 487 0
 507              		@ sp needed
 508 0022 7047     		bx	lr
 509              	.L38:
 510              		.align	2
 511              	.L37:
 512 0024 10023A40 		.word	1077543440
 513              		.cfi_endproc
 514              	.LFE7:
 515              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 516              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 517              		.align	2
 518              		.global	ADC_SAR_Seq_1_GetResult16
 519              		.code	16
 520              		.thumb_func
 521              		.type	ADC_SAR_Seq_1_GetResult16, %function
 522              	ADC_SAR_Seq_1_GetResult16:
 523              	.LFB8:
 488:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 490:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 491:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 19


 492:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 493:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 494:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 495:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 496:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 497:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 498:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 499:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 500:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 501:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 502:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 503:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 504:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 505:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 506:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 524              		.loc 1 506 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              	.LVL32:
 529 0000 10B5     		push	{r4, lr}
 530              		.cfi_def_cfa_offset 8
 531              		.cfi_offset 4, -8
 532              		.cfi_offset 14, -4
 533 0002 0400     		movs	r4, r0
 507:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 508:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 509:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 510:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 534              		.loc 1 510 0
 535 0004 0428     		cmp	r0, #4
 536 0006 02D9     		bls	.L40
 537              		.loc 1 510 0 is_stmt 0 discriminator 1
 538 0008 0020     		movs	r0, #0
 539              	.LVL33:
 540 000a FFF7FEFF 		bl	CyHalt
 541              	.LVL34:
 542              	.L40:
 511:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 512:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 543              		.loc 1 512 0 is_stmt 1
 544 000e 042C     		cmp	r4, #4
 545 0010 07D8     		bhi	.L42
 513:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 514:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 546              		.loc 1 514 0
 547 0012 A400     		lsls	r4, r4, #2
 548              	.LVL35:
 549 0014 044B     		ldr	r3, .L43
 550 0016 9C46     		mov	ip, r3
 551 0018 6444     		add	r4, r4, ip
 552 001a 2068     		ldr	r0, [r4]
 553 001c 0004     		lsls	r0, r0, #16
 554 001e 000C     		lsrs	r0, r0, #16
 555              	.LVL36:
 556 0020 00E0     		b	.L41
 557              	.LVL37:
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 20


 558              	.L42:
 515:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 516:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 517:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 518:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 519:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 520:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 521:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 522:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
 559              		.loc 1 522 0
 560 0022 0020     		movs	r0, #0
 561              	.LVL38:
 562              	.L41:
 523:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 524:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 525:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 526:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 563              		.loc 1 526 0
 564 0024 00B2     		sxth	r0, r0
 565              	.LVL39:
 527:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 566              		.loc 1 527 0
 567              		@ sp needed
 568 0026 10BD     		pop	{r4, pc}
 569              	.L44:
 570              		.align	2
 571              	.L43:
 572 0028 80013A40 		.word	1077543296
 573              		.cfi_endproc
 574              	.LFE8:
 575              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 576              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 577              		.align	2
 578              		.global	ADC_SAR_Seq_1_SetChanMask
 579              		.code	16
 580              		.thumb_func
 581              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 582              	ADC_SAR_Seq_1_SetChanMask:
 583              	.LFB9:
 528:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 529:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 530:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 531:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 532:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 533:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 534:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 535:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 536:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 537:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 538:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 539:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 540:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 541:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 542:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 543:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 544:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 545:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 21


 546:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 547:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 548:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 549:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 550:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 551:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 584              		.loc 1 551 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              	.LVL40:
 552:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 590              		.loc 1 552 0
 591 0000 1F23     		movs	r3, #31
 592 0002 1840     		ands	r0, r3
 593              	.LVL41:
 594 0004 014B     		ldr	r3, .L46
 595 0006 1860     		str	r0, [r3]
 553:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 596              		.loc 1 553 0
 597              		@ sp needed
 598 0008 7047     		bx	lr
 599              	.L47:
 600 000a C046     		.align	2
 601              	.L46:
 602 000c 20003A40 		.word	1077542944
 603              		.cfi_endproc
 604              	.LFE9:
 605              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 606              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 607              		.align	2
 608              		.global	ADC_SAR_Seq_1_SetLowLimit
 609              		.code	16
 610              		.thumb_func
 611              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 612              	ADC_SAR_Seq_1_SetLowLimit:
 613              	.LFB10:
 554:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 555:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 556:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 557:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 558:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 559:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 560:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 561:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 562:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 563:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 564:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 565:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 566:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 567:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 568:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 569:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 570:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 571:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 572:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 22


 573:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 574:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 575:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 576:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 577:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 578:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 579:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 580:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 582:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 583:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 584:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 585:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 586:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 587:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 588:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 589:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 590:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 591:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 592:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 593:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 594:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 595:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 614              		.loc 1 595 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 619              	.LVL42:
 596:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 620              		.loc 1 596 0
 621 0000 054A     		ldr	r2, .L49
 622 0002 1368     		ldr	r3, [r2]
 623 0004 1B0C     		lsrs	r3, r3, #16
 624 0006 1B04     		lsls	r3, r3, #16
 625 0008 1360     		str	r3, [r2]
 597:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 626              		.loc 1 597 0
 627 000a 1368     		ldr	r3, [r2]
 628 000c 0004     		lsls	r0, r0, #16
 629              	.LVL43:
 630 000e 000C     		lsrs	r0, r0, #16
 631 0010 1843     		orrs	r0, r3
 632 0012 1060     		str	r0, [r2]
 598:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 633              		.loc 1 598 0
 634              		@ sp needed
 635 0014 7047     		bx	lr
 636              	.L50:
 637 0016 C046     		.align	2
 638              	.L49:
 639 0018 18003A40 		.word	1077542936
 640              		.cfi_endproc
 641              	.LFE10:
 642              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 643              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 644              		.align	2
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 23


 645              		.global	ADC_SAR_Seq_1_SetHighLimit
 646              		.code	16
 647              		.thumb_func
 648              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 649              	ADC_SAR_Seq_1_SetHighLimit:
 650              	.LFB11:
 599:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 600:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 601:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 602:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 603:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 604:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 605:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 606:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 607:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 608:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 609:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 610:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 611:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 612:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 613:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 614:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 616:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 651              		.loc 1 616 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655              		@ link register save eliminated.
 656              	.LVL44:
 617:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 657              		.loc 1 617 0
 658 0000 044A     		ldr	r2, .L52
 659 0002 1368     		ldr	r3, [r2]
 660 0004 1B04     		lsls	r3, r3, #16
 661 0006 1B0C     		lsrs	r3, r3, #16
 662 0008 1360     		str	r3, [r2]
 618:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 663              		.loc 1 618 0
 664 000a 1368     		ldr	r3, [r2]
 665 000c 0004     		lsls	r0, r0, #16
 666              	.LVL45:
 667 000e 1843     		orrs	r0, r3
 668 0010 1060     		str	r0, [r2]
 619:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 669              		.loc 1 619 0
 670              		@ sp needed
 671 0012 7047     		bx	lr
 672              	.L53:
 673              		.align	2
 674              	.L52:
 675 0014 18003A40 		.word	1077542936
 676              		.cfi_endproc
 677              	.LFE11:
 678              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 679              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 680              		.align	2
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 24


 681              		.global	ADC_SAR_Seq_1_SetLimitMask
 682              		.code	16
 683              		.thumb_func
 684              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 685              	ADC_SAR_Seq_1_SetLimitMask:
 686              	.LFB12:
 620:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 621:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 622:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 623:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 624:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 625:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 626:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 627:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 628:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 629:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 630:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 631:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 632:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 633:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 634:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 635:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 636:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 637:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 638:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 639:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 640:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 687              		.loc 1 640 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              		@ link register save eliminated.
 692              	.LVL46:
 641:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 693              		.loc 1 641 0
 694 0000 1F23     		movs	r3, #31
 695 0002 1840     		ands	r0, r3
 696              	.LVL47:
 697 0004 014B     		ldr	r3, .L55
 698 0006 1860     		str	r0, [r3]
 642:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 699              		.loc 1 642 0
 700              		@ sp needed
 701 0008 7047     		bx	lr
 702              	.L56:
 703 000a C046     		.align	2
 704              	.L55:
 705 000c 38023A40 		.word	1077543480
 706              		.cfi_endproc
 707              	.LFE12:
 708              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 709              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 710              		.align	2
 711              		.global	ADC_SAR_Seq_1_SetSatMask
 712              		.code	16
 713              		.thumb_func
 714              		.type	ADC_SAR_Seq_1_SetSatMask, %function
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 25


 715              	ADC_SAR_Seq_1_SetSatMask:
 716              	.LFB13:
 643:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 644:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 645:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 647:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 648:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 649:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 650:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 651:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 652:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 653:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 654:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 655:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 656:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 657:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 658:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 659:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 660:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 661:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 662:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 663:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 717              		.loc 1 663 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              		@ link register save eliminated.
 722              	.LVL48:
 664:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 723              		.loc 1 664 0
 724 0000 1F23     		movs	r3, #31
 725 0002 1840     		ands	r0, r3
 726              	.LVL49:
 727 0004 014B     		ldr	r3, .L58
 728 0006 1860     		str	r0, [r3]
 665:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 729              		.loc 1 665 0
 730              		@ sp needed
 731 0008 7047     		bx	lr
 732              	.L59:
 733 000a C046     		.align	2
 734              	.L58:
 735 000c 28023A40 		.word	1077543464
 736              		.cfi_endproc
 737              	.LFE13:
 738              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 739              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 740              		.align	2
 741              		.global	ADC_SAR_Seq_1_SetOffset
 742              		.code	16
 743              		.thumb_func
 744              		.type	ADC_SAR_Seq_1_SetOffset, %function
 745              	ADC_SAR_Seq_1_SetOffset:
 746              	.LFB14:
 666:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 26


 668:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 669:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 670:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 671:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 672:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 673:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 674:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 675:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 676:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 677:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 678:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 679:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 680:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 681:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 682:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 683:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 684:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 685:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 686:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 687:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 688:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 689:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 690:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
 691:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 747              		.loc 1 691 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751              	.LVL50:
 752 0000 70B5     		push	{r4, r5, r6, lr}
 753              		.cfi_def_cfa_offset 16
 754              		.cfi_offset 4, -16
 755              		.cfi_offset 5, -12
 756              		.cfi_offset 6, -8
 757              		.cfi_offset 14, -4
 758 0002 0400     		movs	r4, r0
 759 0004 0D00     		movs	r5, r1
 692:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 693:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 760              		.loc 1 693 0
 761 0006 0428     		cmp	r0, #4
 762 0008 02D9     		bls	.L61
 763              		.loc 1 693 0 is_stmt 0 discriminator 1
 764 000a 0020     		movs	r0, #0
 765              	.LVL51:
 766 000c FFF7FEFF 		bl	CyHalt
 767              	.LVL52:
 768              	.L61:
 694:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 695:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 769              		.loc 1 695 0 is_stmt 1
 770 0010 6400     		lsls	r4, r4, #1
 771              	.LVL53:
 772 0012 014B     		ldr	r3, .L62
 773 0014 E552     		strh	r5, [r4, r3]
 696:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 774              		.loc 1 696 0
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 27


 775              		@ sp needed
 776 0016 70BD     		pop	{r4, r5, r6, pc}
 777              	.L63:
 778              		.align	2
 779              	.L62:
 780 0018 00000000 		.word	ADC_SAR_Seq_1_offset
 781              		.cfi_endproc
 782              	.LFE14:
 783              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 784              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 785              		.align	2
 786              		.global	ADC_SAR_Seq_1_SetGain
 787              		.code	16
 788              		.thumb_func
 789              		.type	ADC_SAR_Seq_1_SetGain, %function
 790              	ADC_SAR_Seq_1_SetGain:
 791              	.LFB15:
 697:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 699:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 701:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 702:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 703:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 704:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 705:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
 706:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 707:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 708:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 709:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 710:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 711:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 712:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 713:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 714:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 715:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 716:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 717:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 718:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 719:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 720:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 721:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 722:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 723:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 724:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 725:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 792              		.loc 1 725 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 0
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796              	.LVL54:
 797 0000 70B5     		push	{r4, r5, r6, lr}
 798              		.cfi_def_cfa_offset 16
 799              		.cfi_offset 4, -16
 800              		.cfi_offset 5, -12
 801              		.cfi_offset 6, -8
 802              		.cfi_offset 14, -4
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 28


 803 0002 0400     		movs	r4, r0
 804 0004 0D00     		movs	r5, r1
 726:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 727:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 805              		.loc 1 727 0
 806 0006 0428     		cmp	r0, #4
 807 0008 02D9     		bls	.L65
 808              		.loc 1 727 0 is_stmt 0 discriminator 1
 809 000a 0020     		movs	r0, #0
 810              	.LVL55:
 811 000c FFF7FEFF 		bl	CyHalt
 812              	.LVL56:
 813              	.L65:
 728:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 729:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 814              		.loc 1 729 0 is_stmt 1
 815 0010 A400     		lsls	r4, r4, #2
 816              	.LVL57:
 817 0012 014B     		ldr	r3, .L66
 818 0014 E550     		str	r5, [r4, r3]
 730:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 819              		.loc 1 730 0
 820              		@ sp needed
 821              	.LVL58:
 822 0016 70BD     		pop	{r4, r5, r6, pc}
 823              	.L67:
 824              		.align	2
 825              	.L66:
 826 0018 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 827              		.cfi_endproc
 828              	.LFE15:
 829              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 830              		.global	__aeabi_idiv
 831              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 832              		.align	2
 833              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 834              		.code	16
 835              		.thumb_func
 836              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 837              	ADC_SAR_Seq_1_CountsTo_mVolts:
 838              	.LFB16:
 731:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 732:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 733:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 734:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 735:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 736:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 737:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 738:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 739:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 740:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 741:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 742:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 743:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 744:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 745:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 746:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 29


 747:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 748:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 749:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 750:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 751:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 752:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 753:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 754:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 755:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 756:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 757:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 758:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 839              		.loc 1 758 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843              	.LVL59:
 844 0000 70B5     		push	{r4, r5, r6, lr}
 845              		.cfi_def_cfa_offset 16
 846              		.cfi_offset 4, -16
 847              		.cfi_offset 5, -12
 848              		.cfi_offset 6, -8
 849              		.cfi_offset 14, -4
 850 0002 0400     		movs	r4, r0
 851 0004 0D00     		movs	r5, r1
 759:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 760:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 761:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 762:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 852              		.loc 1 762 0
 853 0006 0428     		cmp	r0, #4
 854 0008 02D9     		bls	.L69
 855              		.loc 1 762 0 is_stmt 0 discriminator 1
 856 000a 0020     		movs	r0, #0
 857              	.LVL60:
 858 000c FFF7FEFF 		bl	CyHalt
 859              	.LVL61:
 860              	.L69:
 763:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 764:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 765:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 766:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 767:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 768:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 769:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 770:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 771:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 772:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 773:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 861              		.loc 1 773 0 is_stmt 1
 862 0010 6300     		lsls	r3, r4, #1
 863 0012 0F4A     		ldr	r2, .L72
 864 0014 995A     		ldrh	r1, [r3, r2]
 865 0016 09B2     		sxth	r1, r1
 866 0018 691A     		subs	r1, r5, r1
 867 001a 09B2     		sxth	r1, r1
 868              	.LVL62:
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 30


 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 775:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 869              		.loc 1 775 0
 870 001c 0D48     		ldr	r0, .L72+4
 871 001e 4843     		muls	r0, r1
 776:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 872              		.loc 1 776 0
 873 0020 0029     		cmp	r1, #0
 874 0022 06DD     		ble	.L70
 875              		.loc 1 776 0 is_stmt 0 discriminator 1
 876 0024 A300     		lsls	r3, r4, #2
 877 0026 0C4A     		ldr	r2, .L72+8
 878 0028 9A58     		ldr	r2, [r3, r2]
 879 002a D30F     		lsrs	r3, r2, #31
 880 002c 9A18     		adds	r2, r3, r2
 881 002e 5310     		asrs	r3, r2, #1
 882 0030 06E0     		b	.L71
 883              	.L70:
 884              		.loc 1 776 0 discriminator 2
 885 0032 A300     		lsls	r3, r4, #2
 886 0034 084A     		ldr	r2, .L72+8
 887 0036 9A58     		ldr	r2, [r3, r2]
 888 0038 D30F     		lsrs	r3, r2, #31
 889 003a 9A18     		adds	r2, r3, r2
 890 003c 5210     		asrs	r2, r2, #1
 891 003e 5342     		rsbs	r3, r2, #0
 892              	.L71:
 775:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 893              		.loc 1 775 0 is_stmt 1
 894 0040 1818     		adds	r0, r3, r0
 777:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 895              		.loc 1 777 0
 896 0042 A400     		lsls	r4, r4, #2
 897              	.LVL63:
 898 0044 044B     		ldr	r3, .L72+8
 899 0046 E158     		ldr	r1, [r4, r3]
 900              	.LVL64:
 901 0048 FFF7FEFF 		bl	__aeabi_idiv
 902              	.LVL65:
 775:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 903              		.loc 1 775 0
 904 004c 00B2     		sxth	r0, r0
 905              	.LVL66:
 778:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 779:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 780:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 906              		.loc 1 780 0
 907              		@ sp needed
 908 004e 70BD     		pop	{r4, r5, r6, pc}
 909              	.L73:
 910              		.align	2
 911              	.L72:
 912 0050 00000000 		.word	ADC_SAR_Seq_1_offset
 913 0054 10270000 		.word	10000
 914 0058 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 915              		.cfi_endproc
 916              	.LFE16:
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 31


 917              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 918              		.global	__aeabi_lmul
 919              		.global	__aeabi_ldivmod
 920              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 921              		.align	2
 922              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 923              		.code	16
 924              		.thumb_func
 925              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 926              	ADC_SAR_Seq_1_CountsTo_uVolts:
 927              	.LFB17:
 781:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 782:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 783:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 784:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 785:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 786:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 787:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 788:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 789:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 790:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 791:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 792:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 793:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 794:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 795:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 796:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 797:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 798:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 799:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 800:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 801:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 802:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 803:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 804:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 805:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 806:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 807:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 808:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 809:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 810:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 811:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 812:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 928              		.loc 1 812 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932              	.LVL67:
 933 0000 70B5     		push	{r4, r5, r6, lr}
 934              		.cfi_def_cfa_offset 16
 935              		.cfi_offset 4, -16
 936              		.cfi_offset 5, -12
 937              		.cfi_offset 6, -8
 938              		.cfi_offset 14, -4
 939 0002 0500     		movs	r5, r0
 940 0004 0C00     		movs	r4, r1
 813:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 32


 814:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 815:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 816:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 941              		.loc 1 816 0
 942 0006 0428     		cmp	r0, #4
 943 0008 02D9     		bls	.L75
 944              		.loc 1 816 0 is_stmt 0 discriminator 1
 945 000a 0020     		movs	r0, #0
 946              	.LVL68:
 947 000c FFF7FEFF 		bl	CyHalt
 948              	.LVL69:
 949              	.L75:
 817:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 818:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 819:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 820:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 821:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 822:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 823:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 824:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 825:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 826:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 827:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 950              		.loc 1 827 0 is_stmt 1
 951 0010 6A00     		lsls	r2, r5, #1
 952 0012 084B     		ldr	r3, .L76
 953 0014 D05A     		ldrh	r0, [r2, r3]
 954 0016 00B2     		sxth	r0, r0
 955 0018 201A     		subs	r0, r4, r0
 956 001a 00B2     		sxth	r0, r0
 957              	.LVL70:
 828:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 829:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
 958              		.loc 1 829 0
 959 001c C117     		asrs	r1, r0, #31
 960 001e 064A     		ldr	r2, .L76+4
 961 0020 0023     		movs	r3, #0
 962 0022 FFF7FEFF 		bl	__aeabi_lmul
 963              	.LVL71:
 964 0026 AD00     		lsls	r5, r5, #2
 965              	.LVL72:
 966 0028 044B     		ldr	r3, .L76+8
 967 002a EA58     		ldr	r2, [r5, r3]
 968 002c D317     		asrs	r3, r2, #31
 969 002e FFF7FEFF 		bl	__aeabi_ldivmod
 970              	.LVL73:
 830:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 831:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
 832:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 971              		.loc 1 832 0
 972              		@ sp needed
 973 0032 70BD     		pop	{r4, r5, r6, pc}
 974              	.L77:
 975              		.align	2
 976              	.L76:
 977 0034 00000000 		.word	ADC_SAR_Seq_1_offset
 978 0038 80969800 		.word	10000000
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 33


 979 003c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 980              		.cfi_endproc
 981              	.LFE17:
 982              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 983              		.global	__aeabi_i2f
 984              		.global	__aeabi_fmul
 985              		.global	__aeabi_fdiv
 986              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 987              		.align	2
 988              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 989              		.code	16
 990              		.thumb_func
 991              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 992              	ADC_SAR_Seq_1_CountsTo_Volts:
 993              	.LFB18:
 833:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 834:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 835:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 836:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 837:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 838:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 839:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 840:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 841:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 842:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 843:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 844:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 845:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 846:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 847:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 848:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 849:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 850:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 851:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 852:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 853:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 854:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 855:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 856:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 857:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 994              		.loc 1 857 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 0
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 998              	.LVL74:
 999 0000 70B5     		push	{r4, r5, r6, lr}
 1000              		.cfi_def_cfa_offset 16
 1001              		.cfi_offset 4, -16
 1002              		.cfi_offset 5, -12
 1003              		.cfi_offset 6, -8
 1004              		.cfi_offset 14, -4
 1005 0002 0400     		movs	r4, r0
 1006 0004 0D00     		movs	r5, r1
 858:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 859:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 860:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 861:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 34


 1007              		.loc 1 861 0
 1008 0006 0428     		cmp	r0, #4
 1009 0008 02D9     		bls	.L79
 1010              		.loc 1 861 0 is_stmt 0 discriminator 1
 1011 000a 0020     		movs	r0, #0
 1012              	.LVL75:
 1013 000c FFF7FEFF 		bl	CyHalt
 1014              	.LVL76:
 1015              	.L79:
 862:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 863:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 864:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 865:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 866:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 867:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 868:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 869:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 870:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 871:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 872:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 1016              		.loc 1 872 0 is_stmt 1
 1017 0010 6200     		lsls	r2, r4, #1
 1018 0012 0A4B     		ldr	r3, .L80
 1019 0014 D05A     		ldrh	r0, [r2, r3]
 1020 0016 00B2     		sxth	r0, r0
 1021 0018 281A     		subs	r0, r5, r0
 1022 001a 00B2     		sxth	r0, r0
 1023              	.LVL77:
 873:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 874:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 1024              		.loc 1 874 0
 1025 001c FFF7FEFF 		bl	__aeabi_i2f
 1026              	.LVL78:
 1027 0020 0749     		ldr	r1, .L80+4
 1028 0022 FFF7FEFF 		bl	__aeabi_fmul
 1029              	.LVL79:
 1030 0026 051C     		adds	r5, r0, #0
 1031 0028 A400     		lsls	r4, r4, #2
 1032              	.LVL80:
 1033 002a 064B     		ldr	r3, .L80+8
 1034 002c E058     		ldr	r0, [r4, r3]
 1035 002e FFF7FEFF 		bl	__aeabi_i2f
 1036              	.LVL81:
 1037 0032 011C     		adds	r1, r0, #0
 1038 0034 281C     		adds	r0, r5, #0
 1039 0036 FFF7FEFF 		bl	__aeabi_fdiv
 1040              	.LVL82:
 875:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 876:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 877:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 1041              		.loc 1 877 0
 1042              		@ sp needed
 1043 003a 70BD     		pop	{r4, r5, r6, pc}
 1044              	.L81:
 1045              		.align	2
 1046              	.L80:
 1047 003c 00000000 		.word	ADC_SAR_Seq_1_offset
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 35


 1048 0040 00002041 		.word	1092616192
 1049 0044 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 1050              		.cfi_endproc
 1051              	.LFE18:
 1052              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 1053              		.comm	ADC_SAR_Seq_1_countsPer10Volt,20,4
 1054              		.comm	ADC_SAR_Seq_1_offset,10,4
 1055              		.global	ADC_SAR_Seq_1_initVar
 1056              		.section	.rodata
 1057              		.align	2
 1058              		.set	.LANCHOR0,. + 0
 1059              		.type	ADC_SAR_Seq_1_channelsConfig, %object
 1060              		.size	ADC_SAR_Seq_1_channelsConfig, 20
 1061              	ADC_SAR_Seq_1_channelsConfig:
 1062 0000 00000000 		.space	20
 1062      00000000 
 1062      00000000 
 1062      00000000 
 1062      00000000 
 1063              		.type	ADC_SAR_Seq_1_InputsPlacement.4974, %object
 1064              		.size	ADC_SAR_Seq_1_InputsPlacement.4974, 5
 1065              	ADC_SAR_Seq_1_InputsPlacement.4974:
 1066 0014 06       		.byte	6
 1067 0015 05       		.byte	5
 1068 0016 04       		.byte	4
 1069 0017 07       		.byte	7
 1070 0018 22       		.byte	34
 1071              		.bss
 1072              		.set	.LANCHOR1,. + 0
 1073              		.type	ADC_SAR_Seq_1_initVar, %object
 1074              		.size	ADC_SAR_Seq_1_initVar, 1
 1075              	ADC_SAR_Seq_1_initVar:
 1076 0000 00       		.space	1
 1077              		.text
 1078              	.Letext0:
 1079              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1080              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1081              		.section	.debug_info,"",%progbits
 1082              	.Ldebug_info0:
 1083 0000 A1050000 		.4byte	0x5a1
 1084 0004 0400     		.2byte	0x4
 1085 0006 00000000 		.4byte	.Ldebug_abbrev0
 1086 000a 04       		.byte	0x4
 1087 000b 01       		.uleb128 0x1
 1088 000c 72000000 		.4byte	.LASF64
 1089 0010 0C       		.byte	0xc
 1090 0011 9B030000 		.4byte	.LASF65
 1091 0015 5E010000 		.4byte	.LASF66
 1092 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1093 001d 00000000 		.4byte	0
 1094 0021 00000000 		.4byte	.Ldebug_line0
 1095 0025 02       		.uleb128 0x2
 1096 0026 01       		.byte	0x1
 1097 0027 06       		.byte	0x6
 1098 0028 F1010000 		.4byte	.LASF0
 1099 002c 02       		.uleb128 0x2
 1100 002d 01       		.byte	0x1
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 36


 1101 002e 08       		.byte	0x8
 1102 002f 02040000 		.4byte	.LASF1
 1103 0033 02       		.uleb128 0x2
 1104 0034 02       		.byte	0x2
 1105 0035 05       		.byte	0x5
 1106 0036 10040000 		.4byte	.LASF2
 1107 003a 02       		.uleb128 0x2
 1108 003b 02       		.byte	0x2
 1109 003c 07       		.byte	0x7
 1110 003d DA020000 		.4byte	.LASF3
 1111 0041 02       		.uleb128 0x2
 1112 0042 04       		.byte	0x4
 1113 0043 05       		.byte	0x5
 1114 0044 3C020000 		.4byte	.LASF4
 1115 0048 02       		.uleb128 0x2
 1116 0049 04       		.byte	0x4
 1117 004a 07       		.byte	0x7
 1118 004b B8020000 		.4byte	.LASF5
 1119 004f 02       		.uleb128 0x2
 1120 0050 08       		.byte	0x8
 1121 0051 05       		.byte	0x5
 1122 0052 E3010000 		.4byte	.LASF6
 1123 0056 02       		.uleb128 0x2
 1124 0057 08       		.byte	0x8
 1125 0058 07       		.byte	0x7
 1126 0059 14010000 		.4byte	.LASF7
 1127 005d 03       		.uleb128 0x3
 1128 005e 04       		.byte	0x4
 1129 005f 05       		.byte	0x5
 1130 0060 696E7400 		.ascii	"int\000"
 1131 0064 02       		.uleb128 0x2
 1132 0065 04       		.byte	0x4
 1133 0066 07       		.byte	0x7
 1134 0067 A4020000 		.4byte	.LASF8
 1135 006b 04       		.uleb128 0x4
 1136 006c 45020000 		.4byte	.LASF9
 1137 0070 02       		.byte	0x2
 1138 0071 B901     		.2byte	0x1b9
 1139 0073 2C000000 		.4byte	0x2c
 1140 0077 04       		.uleb128 0x4
 1141 0078 15000000 		.4byte	.LASF10
 1142 007c 02       		.byte	0x2
 1143 007d BA01     		.2byte	0x1ba
 1144 007f 3A000000 		.4byte	0x3a
 1145 0083 04       		.uleb128 0x4
 1146 0084 5C020000 		.4byte	.LASF11
 1147 0088 02       		.byte	0x2
 1148 0089 BB01     		.2byte	0x1bb
 1149 008b 48000000 		.4byte	0x48
 1150 008f 04       		.uleb128 0x4
 1151 0090 C9040000 		.4byte	.LASF12
 1152 0094 02       		.byte	0x2
 1153 0095 BD01     		.2byte	0x1bd
 1154 0097 33000000 		.4byte	0x33
 1155 009b 04       		.uleb128 0x4
 1156 009c 18020000 		.4byte	.LASF13
 1157 00a0 02       		.byte	0x2
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 37


 1158 00a1 BE01     		.2byte	0x1be
 1159 00a3 41000000 		.4byte	0x41
 1160 00a7 04       		.uleb128 0x4
 1161 00a8 26030000 		.4byte	.LASF14
 1162 00ac 02       		.byte	0x2
 1163 00ad BF01     		.2byte	0x1bf
 1164 00af B3000000 		.4byte	0xb3
 1165 00b3 02       		.uleb128 0x2
 1166 00b4 04       		.byte	0x4
 1167 00b5 04       		.byte	0x4
 1168 00b6 C2030000 		.4byte	.LASF15
 1169 00ba 02       		.uleb128 0x2
 1170 00bb 08       		.byte	0x8
 1171 00bc 04       		.byte	0x4
 1172 00bd 55020000 		.4byte	.LASF16
 1173 00c1 04       		.uleb128 0x4
 1174 00c2 84030000 		.4byte	.LASF17
 1175 00c6 02       		.byte	0x2
 1176 00c7 C401     		.2byte	0x1c4
 1177 00c9 4F000000 		.4byte	0x4f
 1178 00cd 02       		.uleb128 0x2
 1179 00ce 01       		.byte	0x1
 1180 00cf 08       		.byte	0x8
 1181 00d0 5C040000 		.4byte	.LASF18
 1182 00d4 04       		.uleb128 0x4
 1183 00d5 20030000 		.4byte	.LASF19
 1184 00d9 02       		.byte	0x2
 1185 00da 6502     		.2byte	0x265
 1186 00dc E0000000 		.4byte	0xe0
 1187 00e0 05       		.uleb128 0x5
 1188 00e1 83000000 		.4byte	0x83
 1189 00e5 02       		.uleb128 0x2
 1190 00e6 08       		.byte	0x8
 1191 00e7 04       		.byte	0x4
 1192 00e8 40030000 		.4byte	.LASF20
 1193 00ec 02       		.uleb128 0x2
 1194 00ed 04       		.byte	0x4
 1195 00ee 07       		.byte	0x7
 1196 00ef 2E030000 		.4byte	.LASF21
 1197 00f3 06       		.uleb128 0x6
 1198 00f4 1C000000 		.4byte	.LASF26
 1199 00f8 01       		.byte	0x1
 1200 00f9 5F       		.byte	0x5f
 1201 00fa 00000000 		.4byte	.LFB2
 1202 00fe 80010000 		.4byte	.LFE2-.LFB2
 1203 0102 01       		.uleb128 0x1
 1204 0103 9C       		.byte	0x9c
 1205 0104 6E010000 		.4byte	0x16e
 1206 0108 07       		.uleb128 0x7
 1207 0109 51040000 		.4byte	.LASF22
 1208 010d 01       		.byte	0x1
 1209 010e 61       		.byte	0x61
 1210 010f 83000000 		.4byte	0x83
 1211 0113 00000000 		.4byte	.LLST0
 1212 0117 07       		.uleb128 0x7
 1213 0118 D0020000 		.4byte	.LASF23
 1214 011c 01       		.byte	0x1
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 38


 1215 011d 62       		.byte	0x62
 1216 011e 83000000 		.4byte	0x83
 1217 0122 1F000000 		.4byte	.LLST1
 1218 0126 07       		.uleb128 0x7
 1219 0127 37000000 		.4byte	.LASF24
 1220 012b 01       		.byte	0x1
 1221 012c 63       		.byte	0x63
 1222 012d 9B000000 		.4byte	0x9b
 1223 0131 73010000 		.4byte	.LLST2
 1224 0135 08       		.uleb128 0x8
 1225 0136 40010000 		.4byte	.LASF25
 1226 013a 01       		.byte	0x1
 1227 013b 66       		.byte	0x66
 1228 013c 83010000 		.4byte	0x183
 1229 0140 05       		.uleb128 0x5
 1230 0141 03       		.byte	0x3
 1231 0142 14000000 		.4byte	ADC_SAR_Seq_1_InputsPlacement.4974
 1232 0146 09       		.uleb128 0x9
 1233 0147 0A000000 		.4byte	.LVL0
 1234 014b 78050000 		.4byte	0x578
 1235 014f 5E010000 		.4byte	0x15e
 1236 0153 0A       		.uleb128 0xa
 1237 0154 01       		.uleb128 0x1
 1238 0155 50       		.byte	0x50
 1239 0156 01       		.uleb128 0x1
 1240 0157 41       		.byte	0x41
 1241 0158 0A       		.uleb128 0xa
 1242 0159 01       		.uleb128 0x1
 1243 015a 51       		.byte	0x51
 1244 015b 01       		.uleb128 0x1
 1245 015c 33       		.byte	0x33
 1246 015d 00       		.byte	0
 1247 015e 0B       		.uleb128 0xb
 1248 015f 12000000 		.4byte	.LVL1
 1249 0163 83050000 		.4byte	0x583
 1250 0167 0A       		.uleb128 0xa
 1251 0168 01       		.uleb128 0x1
 1252 0169 50       		.byte	0x50
 1253 016a 01       		.uleb128 0x1
 1254 016b 41       		.byte	0x41
 1255 016c 00       		.byte	0
 1256 016d 00       		.byte	0
 1257 016e 0C       		.uleb128 0xc
 1258 016f 7E010000 		.4byte	0x17e
 1259 0173 7E010000 		.4byte	0x17e
 1260 0177 0D       		.uleb128 0xd
 1261 0178 EC000000 		.4byte	0xec
 1262 017c 04       		.byte	0x4
 1263 017d 00       		.byte	0
 1264 017e 0E       		.uleb128 0xe
 1265 017f 6B000000 		.4byte	0x6b
 1266 0183 0E       		.uleb128 0xe
 1267 0184 6E010000 		.4byte	0x16e
 1268 0188 0F       		.uleb128 0xf
 1269 0189 2B010000 		.4byte	.LASF27
 1270 018d 01       		.byte	0x1
 1271 018e 4B01     		.2byte	0x14b
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 39


 1272 0190 00000000 		.4byte	.LFB3
 1273 0194 30000000 		.4byte	.LFE3-.LFB3
 1274 0198 01       		.uleb128 0x1
 1275 0199 9C       		.byte	0x9c
 1276 019a AE010000 		.4byte	0x1ae
 1277 019e 0B       		.uleb128 0xb
 1278 019f 24000000 		.4byte	.LVL22
 1279 01a3 8E050000 		.4byte	0x58e
 1280 01a7 0A       		.uleb128 0xa
 1281 01a8 01       		.uleb128 0x1
 1282 01a9 50       		.byte	0x50
 1283 01aa 01       		.uleb128 0x1
 1284 01ab 3A       		.byte	0x3a
 1285 01ac 00       		.byte	0
 1286 01ad 00       		.byte	0
 1287 01ae 06       		.uleb128 0x6
 1288 01af 00010000 		.4byte	.LASF28
 1289 01b3 01       		.byte	0x1
 1290 01b4 40       		.byte	0x40
 1291 01b5 00000000 		.4byte	.LFB1
 1292 01b9 20000000 		.4byte	.LFE1-.LFB1
 1293 01bd 01       		.uleb128 0x1
 1294 01be 9C       		.byte	0x9c
 1295 01bf D6010000 		.4byte	0x1d6
 1296 01c3 10       		.uleb128 0x10
 1297 01c4 0E000000 		.4byte	.LVL23
 1298 01c8 F3000000 		.4byte	0xf3
 1299 01cc 10       		.uleb128 0x10
 1300 01cd 18000000 		.4byte	.LVL24
 1301 01d1 88010000 		.4byte	0x188
 1302 01d5 00       		.byte	0
 1303 01d6 11       		.uleb128 0x11
 1304 01d7 DE030000 		.4byte	.LASF29
 1305 01db 01       		.byte	0x1
 1306 01dc 6E01     		.2byte	0x16e
 1307 01de 00000000 		.4byte	.LFB4
 1308 01e2 10000000 		.4byte	.LFE4-.LFB4
 1309 01e6 01       		.uleb128 0x1
 1310 01e7 9C       		.byte	0x9c
 1311 01e8 11       		.uleb128 0x11
 1312 01e9 3E000000 		.4byte	.LASF30
 1313 01ed 01       		.byte	0x1
 1314 01ee 8801     		.2byte	0x188
 1315 01f0 00000000 		.4byte	.LFB5
 1316 01f4 14000000 		.4byte	.LFE5-.LFB5
 1317 01f8 01       		.uleb128 0x1
 1318 01f9 9C       		.byte	0x9c
 1319 01fa 11       		.uleb128 0x11
 1320 01fb 6A030000 		.4byte	.LASF31
 1321 01ff 01       		.byte	0x1
 1322 0200 A101     		.2byte	0x1a1
 1323 0202 00000000 		.4byte	.LFB6
 1324 0206 14000000 		.4byte	.LFE6-.LFB6
 1325 020a 01       		.uleb128 0x1
 1326 020b 9C       		.byte	0x9c
 1327 020c 12       		.uleb128 0x12
 1328 020d 4C030000 		.4byte	.LASF33
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 40


 1329 0211 01       		.byte	0x1
 1330 0212 C301     		.2byte	0x1c3
 1331 0214 83000000 		.4byte	0x83
 1332 0218 00000000 		.4byte	.LFB7
 1333 021c 28000000 		.4byte	.LFE7-.LFB7
 1334 0220 01       		.uleb128 0x1
 1335 0221 9C       		.byte	0x9c
 1336 0222 47020000 		.4byte	0x247
 1337 0226 13       		.uleb128 0x13
 1338 0227 86020000 		.4byte	.LASF35
 1339 022b 01       		.byte	0x1
 1340 022c C301     		.2byte	0x1c3
 1341 022e 83000000 		.4byte	0x83
 1342 0232 86010000 		.4byte	.LLST3
 1343 0236 14       		.uleb128 0x14
 1344 0237 AA040000 		.4byte	.LASF32
 1345 023b 01       		.byte	0x1
 1346 023c C501     		.2byte	0x1c5
 1347 023e 83000000 		.4byte	0x83
 1348 0242 CB010000 		.4byte	.LLST4
 1349 0246 00       		.byte	0
 1350 0247 12       		.uleb128 0x12
 1351 0248 C9010000 		.4byte	.LASF34
 1352 024c 01       		.byte	0x1
 1353 024d F901     		.2byte	0x1f9
 1354 024f 8F000000 		.4byte	0x8f
 1355 0253 00000000 		.4byte	.LFB8
 1356 0257 2C000000 		.4byte	.LFE8-.LFB8
 1357 025b 01       		.uleb128 0x1
 1358 025c 9C       		.byte	0x9c
 1359 025d 91020000 		.4byte	0x291
 1360 0261 13       		.uleb128 0x13
 1361 0262 57040000 		.4byte	.LASF36
 1362 0266 01       		.byte	0x1
 1363 0267 F901     		.2byte	0x1f9
 1364 0269 83000000 		.4byte	0x83
 1365 026d 01020000 		.4byte	.LLST5
 1366 0271 14       		.uleb128 0x14
 1367 0272 EA040000 		.4byte	.LASF37
 1368 0276 01       		.byte	0x1
 1369 0277 FB01     		.2byte	0x1fb
 1370 0279 83000000 		.4byte	0x83
 1371 027d 46020000 		.4byte	.LLST6
 1372 0281 0B       		.uleb128 0xb
 1373 0282 0E000000 		.4byte	.LVL34
 1374 0286 99050000 		.4byte	0x599
 1375 028a 0A       		.uleb128 0xa
 1376 028b 01       		.uleb128 0x1
 1377 028c 50       		.byte	0x50
 1378 028d 01       		.uleb128 0x1
 1379 028e 30       		.byte	0x30
 1380 028f 00       		.byte	0
 1381 0290 00       		.byte	0
 1382 0291 0F       		.uleb128 0xf
 1383 0292 37040000 		.4byte	.LASF38
 1384 0296 01       		.byte	0x1
 1385 0297 2602     		.2byte	0x226
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 41


 1386 0299 00000000 		.4byte	.LFB9
 1387 029d 10000000 		.4byte	.LFE9-.LFB9
 1388 02a1 01       		.uleb128 0x1
 1389 02a2 9C       		.byte	0x9c
 1390 02a3 B8020000 		.4byte	0x2b8
 1391 02a7 13       		.uleb128 0x13
 1392 02a8 63020000 		.4byte	.LASF39
 1393 02ac 01       		.byte	0x1
 1394 02ad 2602     		.2byte	0x226
 1395 02af 83000000 		.4byte	0x83
 1396 02b3 64020000 		.4byte	.LLST7
 1397 02b7 00       		.byte	0
 1398 02b8 0F       		.uleb128 0xf
 1399 02b9 61040000 		.4byte	.LASF40
 1400 02bd 01       		.byte	0x1
 1401 02be 5202     		.2byte	0x252
 1402 02c0 00000000 		.4byte	.LFB10
 1403 02c4 1C000000 		.4byte	.LFE10-.LFB10
 1404 02c8 01       		.uleb128 0x1
 1405 02c9 9C       		.byte	0x9c
 1406 02ca DF020000 		.4byte	0x2df
 1407 02ce 13       		.uleb128 0x13
 1408 02cf 37030000 		.4byte	.LASF41
 1409 02d3 01       		.byte	0x1
 1410 02d4 5202     		.2byte	0x252
 1411 02d6 83000000 		.4byte	0x83
 1412 02da 85020000 		.4byte	.LLST8
 1413 02de 00       		.byte	0
 1414 02df 0F       		.uleb128 0xf
 1415 02e0 FD010000 		.4byte	.LASF42
 1416 02e4 01       		.byte	0x1
 1417 02e5 6702     		.2byte	0x267
 1418 02e7 00000000 		.4byte	.LFB11
 1419 02eb 18000000 		.4byte	.LFE11-.LFB11
 1420 02ef 01       		.uleb128 0x1
 1421 02f0 9C       		.byte	0x9c
 1422 02f1 06030000 		.4byte	0x306
 1423 02f5 13       		.uleb128 0x13
 1424 02f6 F1030000 		.4byte	.LASF43
 1425 02fa 01       		.byte	0x1
 1426 02fb 6702     		.2byte	0x267
 1427 02fd 83000000 		.4byte	0x83
 1428 0301 A6020000 		.4byte	.LLST9
 1429 0305 00       		.byte	0
 1430 0306 0F       		.uleb128 0xf
 1431 0307 CF040000 		.4byte	.LASF44
 1432 030b 01       		.byte	0x1
 1433 030c 7F02     		.2byte	0x27f
 1434 030e 00000000 		.4byte	.LFB12
 1435 0312 10000000 		.4byte	.LFE12-.LFB12
 1436 0316 01       		.uleb128 0x1
 1437 0317 9C       		.byte	0x9c
 1438 0318 2D030000 		.4byte	0x32d
 1439 031c 13       		.uleb128 0x13
 1440 031d 63020000 		.4byte	.LASF39
 1441 0321 01       		.byte	0x1
 1442 0322 7F02     		.2byte	0x27f
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 42


 1443 0324 83000000 		.4byte	0x83
 1444 0328 C7020000 		.4byte	.LLST10
 1445 032c 00       		.byte	0
 1446 032d 0F       		.uleb128 0xf
 1447 032e 59000000 		.4byte	.LASF45
 1448 0332 01       		.byte	0x1
 1449 0333 9602     		.2byte	0x296
 1450 0335 00000000 		.4byte	.LFB13
 1451 0339 10000000 		.4byte	.LFE13-.LFB13
 1452 033d 01       		.uleb128 0x1
 1453 033e 9C       		.byte	0x9c
 1454 033f 54030000 		.4byte	0x354
 1455 0343 13       		.uleb128 0x13
 1456 0344 63020000 		.4byte	.LASF39
 1457 0348 01       		.byte	0x1
 1458 0349 9602     		.2byte	0x296
 1459 034b 83000000 		.4byte	0x83
 1460 034f E8020000 		.4byte	.LLST11
 1461 0353 00       		.byte	0
 1462 0354 0F       		.uleb128 0xf
 1463 0355 B1040000 		.4byte	.LASF46
 1464 0359 01       		.byte	0x1
 1465 035a B202     		.2byte	0x2b2
 1466 035c 00000000 		.4byte	.LFB14
 1467 0360 1C000000 		.4byte	.LFE14-.LFB14
 1468 0364 01       		.uleb128 0x1
 1469 0365 9C       		.byte	0x9c
 1470 0366 9A030000 		.4byte	0x39a
 1471 036a 13       		.uleb128 0x13
 1472 036b 57040000 		.4byte	.LASF36
 1473 036f 01       		.byte	0x1
 1474 0370 B202     		.2byte	0x2b2
 1475 0372 83000000 		.4byte	0x83
 1476 0376 09030000 		.4byte	.LLST12
 1477 037a 13       		.uleb128 0x13
 1478 037b 7B040000 		.4byte	.LASF47
 1479 037f 01       		.byte	0x1
 1480 0380 B202     		.2byte	0x2b2
 1481 0382 8F000000 		.4byte	0x8f
 1482 0386 35030000 		.4byte	.LLST13
 1483 038a 0B       		.uleb128 0xb
 1484 038b 10000000 		.4byte	.LVL52
 1485 038f 99050000 		.4byte	0x599
 1486 0393 0A       		.uleb128 0xa
 1487 0394 01       		.uleb128 0x1
 1488 0395 50       		.byte	0x50
 1489 0396 01       		.uleb128 0x1
 1490 0397 30       		.byte	0x30
 1491 0398 00       		.byte	0
 1492 0399 00       		.byte	0
 1493 039a 0F       		.uleb128 0xf
 1494 039b C8030000 		.4byte	.LASF48
 1495 039f 01       		.byte	0x1
 1496 03a0 D402     		.2byte	0x2d4
 1497 03a2 00000000 		.4byte	.LFB15
 1498 03a6 1C000000 		.4byte	.LFE15-.LFB15
 1499 03aa 01       		.uleb128 0x1
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 43


 1500 03ab 9C       		.byte	0x9c
 1501 03ac E0030000 		.4byte	0x3e0
 1502 03b0 13       		.uleb128 0x13
 1503 03b1 57040000 		.4byte	.LASF36
 1504 03b5 01       		.byte	0x1
 1505 03b6 D402     		.2byte	0x2d4
 1506 03b8 83000000 		.4byte	0x83
 1507 03bc 56030000 		.4byte	.LLST14
 1508 03c0 13       		.uleb128 0x13
 1509 03c1 2F000000 		.4byte	.LASF49
 1510 03c5 01       		.byte	0x1
 1511 03c6 D402     		.2byte	0x2d4
 1512 03c8 9B000000 		.4byte	0x9b
 1513 03cc 82030000 		.4byte	.LLST15
 1514 03d0 0B       		.uleb128 0xb
 1515 03d1 10000000 		.4byte	.LVL56
 1516 03d5 99050000 		.4byte	0x599
 1517 03d9 0A       		.uleb128 0xa
 1518 03da 01       		.uleb128 0x1
 1519 03db 50       		.byte	0x50
 1520 03dc 01       		.uleb128 0x1
 1521 03dd 30       		.byte	0x30
 1522 03de 00       		.byte	0
 1523 03df 00       		.byte	0
 1524 03e0 15       		.uleb128 0x15
 1525 03e1 68020000 		.4byte	.LASF50
 1526 03e5 01       		.byte	0x1
 1527 03e6 F502     		.2byte	0x2f5
 1528 03e8 8F000000 		.4byte	0x8f
 1529 03ec 00000000 		.4byte	.LFB16
 1530 03f0 5C000000 		.4byte	.LFE16-.LFB16
 1531 03f4 01       		.uleb128 0x1
 1532 03f5 9C       		.byte	0x9c
 1533 03f6 38040000 		.4byte	0x438
 1534 03fa 13       		.uleb128 0x13
 1535 03fb 57040000 		.4byte	.LASF36
 1536 03ff 01       		.byte	0x1
 1537 0400 F502     		.2byte	0x2f5
 1538 0402 83000000 		.4byte	0x83
 1539 0406 B2030000 		.4byte	.LLST16
 1540 040a 13       		.uleb128 0x13
 1541 040b 82040000 		.4byte	.LASF51
 1542 040f 01       		.byte	0x1
 1543 0410 F502     		.2byte	0x2f5
 1544 0412 8F000000 		.4byte	0x8f
 1545 0416 DE030000 		.4byte	.LLST17
 1546 041a 16       		.uleb128 0x16
 1547 041b 19030000 		.4byte	.LASF52
 1548 041f 01       		.byte	0x1
 1549 0420 F702     		.2byte	0x2f7
 1550 0422 8F000000 		.4byte	0x8f
 1551 0426 01       		.uleb128 0x1
 1552 0427 50       		.byte	0x50
 1553 0428 0B       		.uleb128 0xb
 1554 0429 10000000 		.4byte	.LVL61
 1555 042d 99050000 		.4byte	0x599
 1556 0431 0A       		.uleb128 0xa
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 44


 1557 0432 01       		.uleb128 0x1
 1558 0433 50       		.byte	0x50
 1559 0434 01       		.uleb128 0x1
 1560 0435 30       		.byte	0x30
 1561 0436 00       		.byte	0
 1562 0437 00       		.byte	0
 1563 0438 15       		.uleb128 0x15
 1564 0439 1E020000 		.4byte	.LASF53
 1565 043d 01       		.byte	0x1
 1566 043e 2B03     		.2byte	0x32b
 1567 0440 9B000000 		.4byte	0x9b
 1568 0444 00000000 		.4byte	.LFB17
 1569 0448 40000000 		.4byte	.LFE17-.LFB17
 1570 044c 01       		.uleb128 0x1
 1571 044d 9C       		.byte	0x9c
 1572 044e 8E040000 		.4byte	0x48e
 1573 0452 13       		.uleb128 0x13
 1574 0453 57040000 		.4byte	.LASF36
 1575 0457 01       		.byte	0x1
 1576 0458 2B03     		.2byte	0x32b
 1577 045a 83000000 		.4byte	0x83
 1578 045e 0A040000 		.4byte	.LLST18
 1579 0462 13       		.uleb128 0x13
 1580 0463 82040000 		.4byte	.LASF51
 1581 0467 01       		.byte	0x1
 1582 0468 2B03     		.2byte	0x32b
 1583 046a 8F000000 		.4byte	0x8f
 1584 046e 36040000 		.4byte	.LLST19
 1585 0472 17       		.uleb128 0x17
 1586 0473 B1020000 		.4byte	.LASF67
 1587 0477 01       		.byte	0x1
 1588 0478 2D03     		.2byte	0x32d
 1589 047a C1000000 		.4byte	0xc1
 1590 047e 0B       		.uleb128 0xb
 1591 047f 10000000 		.4byte	.LVL69
 1592 0483 99050000 		.4byte	0x599
 1593 0487 0A       		.uleb128 0xa
 1594 0488 01       		.uleb128 0x1
 1595 0489 50       		.byte	0x50
 1596 048a 01       		.uleb128 0x1
 1597 048b 30       		.byte	0x30
 1598 048c 00       		.byte	0
 1599 048d 00       		.byte	0
 1600 048e 15       		.uleb128 0x15
 1601 048f 1A040000 		.4byte	.LASF54
 1602 0493 01       		.byte	0x1
 1603 0494 5803     		.2byte	0x358
 1604 0496 A7000000 		.4byte	0xa7
 1605 049a 00000000 		.4byte	.LFB18
 1606 049e 48000000 		.4byte	.LFE18-.LFB18
 1607 04a2 01       		.uleb128 0x1
 1608 04a3 9C       		.byte	0x9c
 1609 04a4 E6040000 		.4byte	0x4e6
 1610 04a8 13       		.uleb128 0x13
 1611 04a9 57040000 		.4byte	.LASF36
 1612 04ad 01       		.byte	0x1
 1613 04ae 5803     		.2byte	0x358
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 45


 1614 04b0 83000000 		.4byte	0x83
 1615 04b4 62040000 		.4byte	.LLST20
 1616 04b8 13       		.uleb128 0x13
 1617 04b9 82040000 		.4byte	.LASF51
 1618 04bd 01       		.byte	0x1
 1619 04be 5803     		.2byte	0x358
 1620 04c0 8F000000 		.4byte	0x8f
 1621 04c4 8E040000 		.4byte	.LLST21
 1622 04c8 16       		.uleb128 0x16
 1623 04c9 CA020000 		.4byte	.LASF55
 1624 04cd 01       		.byte	0x1
 1625 04ce 5A03     		.2byte	0x35a
 1626 04d0 A7000000 		.4byte	0xa7
 1627 04d4 01       		.uleb128 0x1
 1628 04d5 50       		.byte	0x50
 1629 04d6 0B       		.uleb128 0xb
 1630 04d7 10000000 		.4byte	.LVL76
 1631 04db 99050000 		.4byte	0x599
 1632 04df 0A       		.uleb128 0xa
 1633 04e0 01       		.uleb128 0x1
 1634 04e1 50       		.byte	0x50
 1635 04e2 01       		.uleb128 0x1
 1636 04e3 30       		.byte	0x30
 1637 04e4 00       		.byte	0
 1638 04e5 00       		.byte	0
 1639 04e6 0C       		.uleb128 0xc
 1640 04e7 F6040000 		.4byte	0x4f6
 1641 04eb F6040000 		.4byte	0x4f6
 1642 04ef 0D       		.uleb128 0xd
 1643 04f0 EC000000 		.4byte	0xec
 1644 04f4 04       		.byte	0x4
 1645 04f5 00       		.byte	0
 1646 04f6 0E       		.uleb128 0xe
 1647 04f7 83000000 		.4byte	0x83
 1648 04fb 08       		.uleb128 0x8
 1649 04fc FC020000 		.4byte	.LASF56
 1650 0500 01       		.byte	0x1
 1651 0501 21       		.byte	0x21
 1652 0502 0C050000 		.4byte	0x50c
 1653 0506 05       		.uleb128 0x5
 1654 0507 03       		.byte	0x3
 1655 0508 00000000 		.4byte	ADC_SAR_Seq_1_channelsConfig
 1656 050c 0E       		.uleb128 0xe
 1657 050d E6040000 		.4byte	0x4e6
 1658 0511 18       		.uleb128 0x18
 1659 0512 8E020000 		.4byte	.LASF57
 1660 0516 01       		.byte	0x1
 1661 0517 18       		.byte	0x18
 1662 0518 6B000000 		.4byte	0x6b
 1663 051c 05       		.uleb128 0x5
 1664 051d 03       		.byte	0x3
 1665 051e 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1666 0522 0C       		.uleb128 0xc
 1667 0523 32050000 		.4byte	0x532
 1668 0527 32050000 		.4byte	0x532
 1669 052b 0D       		.uleb128 0xd
 1670 052c EC000000 		.4byte	0xec
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 46


 1671 0530 04       		.byte	0x4
 1672 0531 00       		.byte	0
 1673 0532 05       		.uleb128 0x5
 1674 0533 8F000000 		.4byte	0x8f
 1675 0537 18       		.uleb128 0x18
 1676 0538 00000000 		.4byte	.LASF58
 1677 053c 01       		.byte	0x1
 1678 053d 19       		.byte	0x19
 1679 053e 48050000 		.4byte	0x548
 1680 0542 05       		.uleb128 0x5
 1681 0543 03       		.byte	0x3
 1682 0544 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1683 0548 05       		.uleb128 0x5
 1684 0549 22050000 		.4byte	0x522
 1685 054d 0C       		.uleb128 0xc
 1686 054e 5D050000 		.4byte	0x55d
 1687 0552 5D050000 		.4byte	0x55d
 1688 0556 0D       		.uleb128 0xd
 1689 0557 EC000000 		.4byte	0xec
 1690 055b 04       		.byte	0x4
 1691 055c 00       		.byte	0
 1692 055d 05       		.uleb128 0x5
 1693 055e 9B000000 		.4byte	0x9b
 1694 0562 18       		.uleb128 0x18
 1695 0563 8C040000 		.4byte	.LASF59
 1696 0567 01       		.byte	0x1
 1697 0568 1A       		.byte	0x1a
 1698 0569 73050000 		.4byte	0x573
 1699 056d 05       		.uleb128 0x5
 1700 056e 03       		.byte	0x3
 1701 056f 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1702 0573 05       		.uleb128 0x5
 1703 0574 4D050000 		.4byte	0x54d
 1704 0578 19       		.uleb128 0x19
 1705 0579 8A030000 		.4byte	.LASF60
 1706 057d 8A030000 		.4byte	.LASF60
 1707 0581 03       		.byte	0x3
 1708 0582 C0       		.byte	0xc0
 1709 0583 19       		.uleb128 0x19
 1710 0584 ED020000 		.4byte	.LASF61
 1711 0588 ED020000 		.4byte	.LASF61
 1712 058c 03       		.byte	0x3
 1713 058d BD       		.byte	0xbd
 1714 058e 19       		.uleb128 0x19
 1715 058f 4B020000 		.4byte	.LASF62
 1716 0593 4B020000 		.4byte	.LASF62
 1717 0597 03       		.byte	0x3
 1718 0598 DA       		.byte	0xda
 1719 0599 19       		.uleb128 0x19
 1720 059a FB030000 		.4byte	.LASF63
 1721 059e FB030000 		.4byte	.LASF63
 1722 05a2 03       		.byte	0x3
 1723 05a3 E7       		.byte	0xe7
 1724 05a4 00       		.byte	0
 1725              		.section	.debug_abbrev,"",%progbits
 1726              	.Ldebug_abbrev0:
 1727 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 47


 1728 0001 11       		.uleb128 0x11
 1729 0002 01       		.byte	0x1
 1730 0003 25       		.uleb128 0x25
 1731 0004 0E       		.uleb128 0xe
 1732 0005 13       		.uleb128 0x13
 1733 0006 0B       		.uleb128 0xb
 1734 0007 03       		.uleb128 0x3
 1735 0008 0E       		.uleb128 0xe
 1736 0009 1B       		.uleb128 0x1b
 1737 000a 0E       		.uleb128 0xe
 1738 000b 55       		.uleb128 0x55
 1739 000c 17       		.uleb128 0x17
 1740 000d 11       		.uleb128 0x11
 1741 000e 01       		.uleb128 0x1
 1742 000f 10       		.uleb128 0x10
 1743 0010 17       		.uleb128 0x17
 1744 0011 00       		.byte	0
 1745 0012 00       		.byte	0
 1746 0013 02       		.uleb128 0x2
 1747 0014 24       		.uleb128 0x24
 1748 0015 00       		.byte	0
 1749 0016 0B       		.uleb128 0xb
 1750 0017 0B       		.uleb128 0xb
 1751 0018 3E       		.uleb128 0x3e
 1752 0019 0B       		.uleb128 0xb
 1753 001a 03       		.uleb128 0x3
 1754 001b 0E       		.uleb128 0xe
 1755 001c 00       		.byte	0
 1756 001d 00       		.byte	0
 1757 001e 03       		.uleb128 0x3
 1758 001f 24       		.uleb128 0x24
 1759 0020 00       		.byte	0
 1760 0021 0B       		.uleb128 0xb
 1761 0022 0B       		.uleb128 0xb
 1762 0023 3E       		.uleb128 0x3e
 1763 0024 0B       		.uleb128 0xb
 1764 0025 03       		.uleb128 0x3
 1765 0026 08       		.uleb128 0x8
 1766 0027 00       		.byte	0
 1767 0028 00       		.byte	0
 1768 0029 04       		.uleb128 0x4
 1769 002a 16       		.uleb128 0x16
 1770 002b 00       		.byte	0
 1771 002c 03       		.uleb128 0x3
 1772 002d 0E       		.uleb128 0xe
 1773 002e 3A       		.uleb128 0x3a
 1774 002f 0B       		.uleb128 0xb
 1775 0030 3B       		.uleb128 0x3b
 1776 0031 05       		.uleb128 0x5
 1777 0032 49       		.uleb128 0x49
 1778 0033 13       		.uleb128 0x13
 1779 0034 00       		.byte	0
 1780 0035 00       		.byte	0
 1781 0036 05       		.uleb128 0x5
 1782 0037 35       		.uleb128 0x35
 1783 0038 00       		.byte	0
 1784 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 48


 1785 003a 13       		.uleb128 0x13
 1786 003b 00       		.byte	0
 1787 003c 00       		.byte	0
 1788 003d 06       		.uleb128 0x6
 1789 003e 2E       		.uleb128 0x2e
 1790 003f 01       		.byte	0x1
 1791 0040 3F       		.uleb128 0x3f
 1792 0041 19       		.uleb128 0x19
 1793 0042 03       		.uleb128 0x3
 1794 0043 0E       		.uleb128 0xe
 1795 0044 3A       		.uleb128 0x3a
 1796 0045 0B       		.uleb128 0xb
 1797 0046 3B       		.uleb128 0x3b
 1798 0047 0B       		.uleb128 0xb
 1799 0048 27       		.uleb128 0x27
 1800 0049 19       		.uleb128 0x19
 1801 004a 11       		.uleb128 0x11
 1802 004b 01       		.uleb128 0x1
 1803 004c 12       		.uleb128 0x12
 1804 004d 06       		.uleb128 0x6
 1805 004e 40       		.uleb128 0x40
 1806 004f 18       		.uleb128 0x18
 1807 0050 9742     		.uleb128 0x2117
 1808 0052 19       		.uleb128 0x19
 1809 0053 01       		.uleb128 0x1
 1810 0054 13       		.uleb128 0x13
 1811 0055 00       		.byte	0
 1812 0056 00       		.byte	0
 1813 0057 07       		.uleb128 0x7
 1814 0058 34       		.uleb128 0x34
 1815 0059 00       		.byte	0
 1816 005a 03       		.uleb128 0x3
 1817 005b 0E       		.uleb128 0xe
 1818 005c 3A       		.uleb128 0x3a
 1819 005d 0B       		.uleb128 0xb
 1820 005e 3B       		.uleb128 0x3b
 1821 005f 0B       		.uleb128 0xb
 1822 0060 49       		.uleb128 0x49
 1823 0061 13       		.uleb128 0x13
 1824 0062 02       		.uleb128 0x2
 1825 0063 17       		.uleb128 0x17
 1826 0064 00       		.byte	0
 1827 0065 00       		.byte	0
 1828 0066 08       		.uleb128 0x8
 1829 0067 34       		.uleb128 0x34
 1830 0068 00       		.byte	0
 1831 0069 03       		.uleb128 0x3
 1832 006a 0E       		.uleb128 0xe
 1833 006b 3A       		.uleb128 0x3a
 1834 006c 0B       		.uleb128 0xb
 1835 006d 3B       		.uleb128 0x3b
 1836 006e 0B       		.uleb128 0xb
 1837 006f 49       		.uleb128 0x49
 1838 0070 13       		.uleb128 0x13
 1839 0071 02       		.uleb128 0x2
 1840 0072 18       		.uleb128 0x18
 1841 0073 00       		.byte	0
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 49


 1842 0074 00       		.byte	0
 1843 0075 09       		.uleb128 0x9
 1844 0076 898201   		.uleb128 0x4109
 1845 0079 01       		.byte	0x1
 1846 007a 11       		.uleb128 0x11
 1847 007b 01       		.uleb128 0x1
 1848 007c 31       		.uleb128 0x31
 1849 007d 13       		.uleb128 0x13
 1850 007e 01       		.uleb128 0x1
 1851 007f 13       		.uleb128 0x13
 1852 0080 00       		.byte	0
 1853 0081 00       		.byte	0
 1854 0082 0A       		.uleb128 0xa
 1855 0083 8A8201   		.uleb128 0x410a
 1856 0086 00       		.byte	0
 1857 0087 02       		.uleb128 0x2
 1858 0088 18       		.uleb128 0x18
 1859 0089 9142     		.uleb128 0x2111
 1860 008b 18       		.uleb128 0x18
 1861 008c 00       		.byte	0
 1862 008d 00       		.byte	0
 1863 008e 0B       		.uleb128 0xb
 1864 008f 898201   		.uleb128 0x4109
 1865 0092 01       		.byte	0x1
 1866 0093 11       		.uleb128 0x11
 1867 0094 01       		.uleb128 0x1
 1868 0095 31       		.uleb128 0x31
 1869 0096 13       		.uleb128 0x13
 1870 0097 00       		.byte	0
 1871 0098 00       		.byte	0
 1872 0099 0C       		.uleb128 0xc
 1873 009a 01       		.uleb128 0x1
 1874 009b 01       		.byte	0x1
 1875 009c 49       		.uleb128 0x49
 1876 009d 13       		.uleb128 0x13
 1877 009e 01       		.uleb128 0x1
 1878 009f 13       		.uleb128 0x13
 1879 00a0 00       		.byte	0
 1880 00a1 00       		.byte	0
 1881 00a2 0D       		.uleb128 0xd
 1882 00a3 21       		.uleb128 0x21
 1883 00a4 00       		.byte	0
 1884 00a5 49       		.uleb128 0x49
 1885 00a6 13       		.uleb128 0x13
 1886 00a7 2F       		.uleb128 0x2f
 1887 00a8 0B       		.uleb128 0xb
 1888 00a9 00       		.byte	0
 1889 00aa 00       		.byte	0
 1890 00ab 0E       		.uleb128 0xe
 1891 00ac 26       		.uleb128 0x26
 1892 00ad 00       		.byte	0
 1893 00ae 49       		.uleb128 0x49
 1894 00af 13       		.uleb128 0x13
 1895 00b0 00       		.byte	0
 1896 00b1 00       		.byte	0
 1897 00b2 0F       		.uleb128 0xf
 1898 00b3 2E       		.uleb128 0x2e
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 50


 1899 00b4 01       		.byte	0x1
 1900 00b5 3F       		.uleb128 0x3f
 1901 00b6 19       		.uleb128 0x19
 1902 00b7 03       		.uleb128 0x3
 1903 00b8 0E       		.uleb128 0xe
 1904 00b9 3A       		.uleb128 0x3a
 1905 00ba 0B       		.uleb128 0xb
 1906 00bb 3B       		.uleb128 0x3b
 1907 00bc 05       		.uleb128 0x5
 1908 00bd 27       		.uleb128 0x27
 1909 00be 19       		.uleb128 0x19
 1910 00bf 11       		.uleb128 0x11
 1911 00c0 01       		.uleb128 0x1
 1912 00c1 12       		.uleb128 0x12
 1913 00c2 06       		.uleb128 0x6
 1914 00c3 40       		.uleb128 0x40
 1915 00c4 18       		.uleb128 0x18
 1916 00c5 9742     		.uleb128 0x2117
 1917 00c7 19       		.uleb128 0x19
 1918 00c8 01       		.uleb128 0x1
 1919 00c9 13       		.uleb128 0x13
 1920 00ca 00       		.byte	0
 1921 00cb 00       		.byte	0
 1922 00cc 10       		.uleb128 0x10
 1923 00cd 898201   		.uleb128 0x4109
 1924 00d0 00       		.byte	0
 1925 00d1 11       		.uleb128 0x11
 1926 00d2 01       		.uleb128 0x1
 1927 00d3 31       		.uleb128 0x31
 1928 00d4 13       		.uleb128 0x13
 1929 00d5 00       		.byte	0
 1930 00d6 00       		.byte	0
 1931 00d7 11       		.uleb128 0x11
 1932 00d8 2E       		.uleb128 0x2e
 1933 00d9 00       		.byte	0
 1934 00da 3F       		.uleb128 0x3f
 1935 00db 19       		.uleb128 0x19
 1936 00dc 03       		.uleb128 0x3
 1937 00dd 0E       		.uleb128 0xe
 1938 00de 3A       		.uleb128 0x3a
 1939 00df 0B       		.uleb128 0xb
 1940 00e0 3B       		.uleb128 0x3b
 1941 00e1 05       		.uleb128 0x5
 1942 00e2 27       		.uleb128 0x27
 1943 00e3 19       		.uleb128 0x19
 1944 00e4 11       		.uleb128 0x11
 1945 00e5 01       		.uleb128 0x1
 1946 00e6 12       		.uleb128 0x12
 1947 00e7 06       		.uleb128 0x6
 1948 00e8 40       		.uleb128 0x40
 1949 00e9 18       		.uleb128 0x18
 1950 00ea 9742     		.uleb128 0x2117
 1951 00ec 19       		.uleb128 0x19
 1952 00ed 00       		.byte	0
 1953 00ee 00       		.byte	0
 1954 00ef 12       		.uleb128 0x12
 1955 00f0 2E       		.uleb128 0x2e
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 51


 1956 00f1 01       		.byte	0x1
 1957 00f2 3F       		.uleb128 0x3f
 1958 00f3 19       		.uleb128 0x19
 1959 00f4 03       		.uleb128 0x3
 1960 00f5 0E       		.uleb128 0xe
 1961 00f6 3A       		.uleb128 0x3a
 1962 00f7 0B       		.uleb128 0xb
 1963 00f8 3B       		.uleb128 0x3b
 1964 00f9 05       		.uleb128 0x5
 1965 00fa 27       		.uleb128 0x27
 1966 00fb 19       		.uleb128 0x19
 1967 00fc 49       		.uleb128 0x49
 1968 00fd 13       		.uleb128 0x13
 1969 00fe 11       		.uleb128 0x11
 1970 00ff 01       		.uleb128 0x1
 1971 0100 12       		.uleb128 0x12
 1972 0101 06       		.uleb128 0x6
 1973 0102 40       		.uleb128 0x40
 1974 0103 18       		.uleb128 0x18
 1975 0104 9742     		.uleb128 0x2117
 1976 0106 19       		.uleb128 0x19
 1977 0107 01       		.uleb128 0x1
 1978 0108 13       		.uleb128 0x13
 1979 0109 00       		.byte	0
 1980 010a 00       		.byte	0
 1981 010b 13       		.uleb128 0x13
 1982 010c 05       		.uleb128 0x5
 1983 010d 00       		.byte	0
 1984 010e 03       		.uleb128 0x3
 1985 010f 0E       		.uleb128 0xe
 1986 0110 3A       		.uleb128 0x3a
 1987 0111 0B       		.uleb128 0xb
 1988 0112 3B       		.uleb128 0x3b
 1989 0113 05       		.uleb128 0x5
 1990 0114 49       		.uleb128 0x49
 1991 0115 13       		.uleb128 0x13
 1992 0116 02       		.uleb128 0x2
 1993 0117 17       		.uleb128 0x17
 1994 0118 00       		.byte	0
 1995 0119 00       		.byte	0
 1996 011a 14       		.uleb128 0x14
 1997 011b 34       		.uleb128 0x34
 1998 011c 00       		.byte	0
 1999 011d 03       		.uleb128 0x3
 2000 011e 0E       		.uleb128 0xe
 2001 011f 3A       		.uleb128 0x3a
 2002 0120 0B       		.uleb128 0xb
 2003 0121 3B       		.uleb128 0x3b
 2004 0122 05       		.uleb128 0x5
 2005 0123 49       		.uleb128 0x49
 2006 0124 13       		.uleb128 0x13
 2007 0125 02       		.uleb128 0x2
 2008 0126 17       		.uleb128 0x17
 2009 0127 00       		.byte	0
 2010 0128 00       		.byte	0
 2011 0129 15       		.uleb128 0x15
 2012 012a 2E       		.uleb128 0x2e
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 52


 2013 012b 01       		.byte	0x1
 2014 012c 3F       		.uleb128 0x3f
 2015 012d 19       		.uleb128 0x19
 2016 012e 03       		.uleb128 0x3
 2017 012f 0E       		.uleb128 0xe
 2018 0130 3A       		.uleb128 0x3a
 2019 0131 0B       		.uleb128 0xb
 2020 0132 3B       		.uleb128 0x3b
 2021 0133 05       		.uleb128 0x5
 2022 0134 27       		.uleb128 0x27
 2023 0135 19       		.uleb128 0x19
 2024 0136 49       		.uleb128 0x49
 2025 0137 13       		.uleb128 0x13
 2026 0138 11       		.uleb128 0x11
 2027 0139 01       		.uleb128 0x1
 2028 013a 12       		.uleb128 0x12
 2029 013b 06       		.uleb128 0x6
 2030 013c 40       		.uleb128 0x40
 2031 013d 18       		.uleb128 0x18
 2032 013e 9642     		.uleb128 0x2116
 2033 0140 19       		.uleb128 0x19
 2034 0141 01       		.uleb128 0x1
 2035 0142 13       		.uleb128 0x13
 2036 0143 00       		.byte	0
 2037 0144 00       		.byte	0
 2038 0145 16       		.uleb128 0x16
 2039 0146 34       		.uleb128 0x34
 2040 0147 00       		.byte	0
 2041 0148 03       		.uleb128 0x3
 2042 0149 0E       		.uleb128 0xe
 2043 014a 3A       		.uleb128 0x3a
 2044 014b 0B       		.uleb128 0xb
 2045 014c 3B       		.uleb128 0x3b
 2046 014d 05       		.uleb128 0x5
 2047 014e 49       		.uleb128 0x49
 2048 014f 13       		.uleb128 0x13
 2049 0150 02       		.uleb128 0x2
 2050 0151 18       		.uleb128 0x18
 2051 0152 00       		.byte	0
 2052 0153 00       		.byte	0
 2053 0154 17       		.uleb128 0x17
 2054 0155 34       		.uleb128 0x34
 2055 0156 00       		.byte	0
 2056 0157 03       		.uleb128 0x3
 2057 0158 0E       		.uleb128 0xe
 2058 0159 3A       		.uleb128 0x3a
 2059 015a 0B       		.uleb128 0xb
 2060 015b 3B       		.uleb128 0x3b
 2061 015c 05       		.uleb128 0x5
 2062 015d 49       		.uleb128 0x49
 2063 015e 13       		.uleb128 0x13
 2064 015f 00       		.byte	0
 2065 0160 00       		.byte	0
 2066 0161 18       		.uleb128 0x18
 2067 0162 34       		.uleb128 0x34
 2068 0163 00       		.byte	0
 2069 0164 03       		.uleb128 0x3
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 53


 2070 0165 0E       		.uleb128 0xe
 2071 0166 3A       		.uleb128 0x3a
 2072 0167 0B       		.uleb128 0xb
 2073 0168 3B       		.uleb128 0x3b
 2074 0169 0B       		.uleb128 0xb
 2075 016a 49       		.uleb128 0x49
 2076 016b 13       		.uleb128 0x13
 2077 016c 3F       		.uleb128 0x3f
 2078 016d 19       		.uleb128 0x19
 2079 016e 02       		.uleb128 0x2
 2080 016f 18       		.uleb128 0x18
 2081 0170 00       		.byte	0
 2082 0171 00       		.byte	0
 2083 0172 19       		.uleb128 0x19
 2084 0173 2E       		.uleb128 0x2e
 2085 0174 00       		.byte	0
 2086 0175 3F       		.uleb128 0x3f
 2087 0176 19       		.uleb128 0x19
 2088 0177 3C       		.uleb128 0x3c
 2089 0178 19       		.uleb128 0x19
 2090 0179 6E       		.uleb128 0x6e
 2091 017a 0E       		.uleb128 0xe
 2092 017b 03       		.uleb128 0x3
 2093 017c 0E       		.uleb128 0xe
 2094 017d 3A       		.uleb128 0x3a
 2095 017e 0B       		.uleb128 0xb
 2096 017f 3B       		.uleb128 0x3b
 2097 0180 0B       		.uleb128 0xb
 2098 0181 00       		.byte	0
 2099 0182 00       		.byte	0
 2100 0183 00       		.byte	0
 2101              		.section	.debug_loc,"",%progbits
 2102              	.Ldebug_loc0:
 2103              	.LLST0:
 2104 0000 7C000000 		.4byte	.LVL5
 2105 0004 80000000 		.4byte	.LVL6
 2106 0008 0200     		.2byte	0x2
 2107 000a 30       		.byte	0x30
 2108 000b 9F       		.byte	0x9f
 2109 000c 80000000 		.4byte	.LVL6
 2110 0010 80010000 		.4byte	.LFE2
 2111 0014 0100     		.2byte	0x1
 2112 0016 52       		.byte	0x52
 2113 0017 00000000 		.4byte	0
 2114 001b 00000000 		.4byte	0
 2115              	.LLST1:
 2116 001f 70000000 		.4byte	.LVL2
 2117 0023 76000000 		.4byte	.LVL3
 2118 0027 0700     		.2byte	0x7
 2119 0029 71       		.byte	0x71
 2120 002a 00       		.sleb128 0
 2121 002b 40       		.byte	0x40
 2122 002c 49       		.byte	0x49
 2123 002d 24       		.byte	0x24
 2124 002e 21       		.byte	0x21
 2125 002f 9F       		.byte	0x9f
 2126 0030 7A000000 		.4byte	.LVL4
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 54


 2127 0034 80000000 		.4byte	.LVL6
 2128 0038 0100     		.2byte	0x1
 2129 003a 53       		.byte	0x53
 2130 003b 8C000000 		.4byte	.LVL7
 2131 003f 9E000000 		.4byte	.LVL9
 2132 0043 0100     		.2byte	0x1
 2133 0045 53       		.byte	0x53
 2134 0046 9E000000 		.4byte	.LVL9
 2135 004a A2000000 		.4byte	.LVL10
 2136 004e 0200     		.2byte	0x2
 2137 0050 71       		.byte	0x71
 2138 0051 00       		.sleb128 0
 2139 0052 A2000000 		.4byte	.LVL10
 2140 0056 AE000000 		.4byte	.LVL11
 2141 005a 0700     		.2byte	0x7
 2142 005c 72       		.byte	0x72
 2143 005d 00       		.sleb128 0
 2144 005e 32       		.byte	0x32
 2145 005f 24       		.byte	0x24
 2146 0060 7C       		.byte	0x7c
 2147 0061 00       		.sleb128 0
 2148 0062 22       		.byte	0x22
 2149 0063 AE000000 		.4byte	.LVL11
 2150 0067 B2000000 		.4byte	.LVL12
 2151 006b 1500     		.2byte	0x15
 2152 006d 74       		.byte	0x74
 2153 006e 00       		.sleb128 0
 2154 006f 0A       		.byte	0xa
 2155 0070 0037     		.2byte	0x3700
 2156 0072 1A       		.byte	0x1a
 2157 0073 72       		.byte	0x72
 2158 0074 00       		.sleb128 0
 2159 0075 03       		.byte	0x3
 2160 0076 14000000 		.4byte	.LANCHOR0+20
 2161 007a 22       		.byte	0x22
 2162 007b 94       		.byte	0x94
 2163 007c 01       		.byte	0x1
 2164 007d 08       		.byte	0x8
 2165 007e FF       		.byte	0xff
 2166 007f 1A       		.byte	0x1a
 2167 0080 21       		.byte	0x21
 2168 0081 9F       		.byte	0x9f
 2169 0082 B2000000 		.4byte	.LVL12
 2170 0086 BC000000 		.4byte	.LVL13
 2171 008a 1400     		.2byte	0x14
 2172 008c 74       		.byte	0x74
 2173 008d 00       		.sleb128 0
 2174 008e 0A       		.byte	0xa
 2175 008f 0037     		.2byte	0x3700
 2176 0091 1A       		.byte	0x1a
 2177 0092 71       		.byte	0x71
 2178 0093 00       		.sleb128 0
 2179 0094 72       		.byte	0x72
 2180 0095 00       		.sleb128 0
 2181 0096 22       		.byte	0x22
 2182 0097 23       		.byte	0x23
 2183 0098 14       		.uleb128 0x14
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 55


 2184 0099 94       		.byte	0x94
 2185 009a 01       		.byte	0x1
 2186 009b 08       		.byte	0x8
 2187 009c FF       		.byte	0xff
 2188 009d 1A       		.byte	0x1a
 2189 009e 21       		.byte	0x21
 2190 009f 9F       		.byte	0x9f
 2191 00a0 BC000000 		.4byte	.LVL13
 2192 00a4 CC000000 		.4byte	.LVL14
 2193 00a8 1500     		.2byte	0x15
 2194 00aa 74       		.byte	0x74
 2195 00ab 00       		.sleb128 0
 2196 00ac 0A       		.byte	0xa
 2197 00ad 0037     		.2byte	0x3700
 2198 00af 1A       		.byte	0x1a
 2199 00b0 72       		.byte	0x72
 2200 00b1 00       		.sleb128 0
 2201 00b2 03       		.byte	0x3
 2202 00b3 14000000 		.4byte	.LANCHOR0+20
 2203 00b7 22       		.byte	0x22
 2204 00b8 94       		.byte	0x94
 2205 00b9 01       		.byte	0x1
 2206 00ba 08       		.byte	0x8
 2207 00bb FF       		.byte	0xff
 2208 00bc 1A       		.byte	0x1a
 2209 00bd 21       		.byte	0x21
 2210 00be 9F       		.byte	0x9f
 2211 00bf CC000000 		.4byte	.LVL14
 2212 00c3 CE000000 		.4byte	.LVL15
 2213 00c7 1400     		.2byte	0x14
 2214 00c9 74       		.byte	0x74
 2215 00ca 00       		.sleb128 0
 2216 00cb 0A       		.byte	0xa
 2217 00cc 0037     		.2byte	0x3700
 2218 00ce 1A       		.byte	0x1a
 2219 00cf 71       		.byte	0x71
 2220 00d0 00       		.sleb128 0
 2221 00d1 72       		.byte	0x72
 2222 00d2 00       		.sleb128 0
 2223 00d3 22       		.byte	0x22
 2224 00d4 23       		.byte	0x23
 2225 00d5 14       		.uleb128 0x14
 2226 00d6 94       		.byte	0x94
 2227 00d7 01       		.byte	0x1
 2228 00d8 08       		.byte	0x8
 2229 00d9 FF       		.byte	0xff
 2230 00da 1A       		.byte	0x1a
 2231 00db 21       		.byte	0x21
 2232 00dc 9F       		.byte	0x9f
 2233 00dd CE000000 		.4byte	.LVL15
 2234 00e1 E4000000 		.4byte	.LVL17
 2235 00e5 1500     		.2byte	0x15
 2236 00e7 74       		.byte	0x74
 2237 00e8 00       		.sleb128 0
 2238 00e9 0A       		.byte	0xa
 2239 00ea 0037     		.2byte	0x3700
 2240 00ec 1A       		.byte	0x1a
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 56


 2241 00ed 72       		.byte	0x72
 2242 00ee 00       		.sleb128 0
 2243 00ef 03       		.byte	0x3
 2244 00f0 14000000 		.4byte	.LANCHOR0+20
 2245 00f4 22       		.byte	0x22
 2246 00f5 94       		.byte	0x94
 2247 00f6 01       		.byte	0x1
 2248 00f7 08       		.byte	0x8
 2249 00f8 FF       		.byte	0xff
 2250 00f9 1A       		.byte	0x1a
 2251 00fa 21       		.byte	0x21
 2252 00fb 9F       		.byte	0x9f
 2253 00fc E4000000 		.4byte	.LVL17
 2254 0100 EA000000 		.4byte	.LVL18
 2255 0104 1E00     		.2byte	0x1e
 2256 0106 72       		.byte	0x72
 2257 0107 00       		.sleb128 0
 2258 0108 32       		.byte	0x32
 2259 0109 24       		.byte	0x24
 2260 010a 03       		.byte	0x3
 2261 010b 00000000 		.4byte	.LANCHOR0
 2262 010f 22       		.byte	0x22
 2263 0110 06       		.byte	0x6
 2264 0111 0A       		.byte	0xa
 2265 0112 0037     		.2byte	0x3700
 2266 0114 1A       		.byte	0x1a
 2267 0115 72       		.byte	0x72
 2268 0116 00       		.sleb128 0
 2269 0117 03       		.byte	0x3
 2270 0118 14000000 		.4byte	.LANCHOR0+20
 2271 011c 22       		.byte	0x22
 2272 011d 94       		.byte	0x94
 2273 011e 01       		.byte	0x1
 2274 011f 08       		.byte	0x8
 2275 0120 FF       		.byte	0xff
 2276 0121 1A       		.byte	0x1a
 2277 0122 21       		.byte	0x21
 2278 0123 9F       		.byte	0x9f
 2279 0124 EA000000 		.4byte	.LVL18
 2280 0128 EE000000 		.4byte	.LVL19
 2281 012c 1500     		.2byte	0x15
 2282 012e 74       		.byte	0x74
 2283 012f 00       		.sleb128 0
 2284 0130 0A       		.byte	0xa
 2285 0131 0037     		.2byte	0x3700
 2286 0133 1A       		.byte	0x1a
 2287 0134 72       		.byte	0x72
 2288 0135 00       		.sleb128 0
 2289 0136 03       		.byte	0x3
 2290 0137 14000000 		.4byte	.LANCHOR0+20
 2291 013b 22       		.byte	0x22
 2292 013c 94       		.byte	0x94
 2293 013d 01       		.byte	0x1
 2294 013e 08       		.byte	0x8
 2295 013f FF       		.byte	0xff
 2296 0140 1A       		.byte	0x1a
 2297 0141 21       		.byte	0x21
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 57


 2298 0142 9F       		.byte	0x9f
 2299 0143 EE000000 		.4byte	.LVL19
 2300 0147 12010000 		.4byte	.LVL21
 2301 014b 1E00     		.2byte	0x1e
 2302 014d 72       		.byte	0x72
 2303 014e 00       		.sleb128 0
 2304 014f 32       		.byte	0x32
 2305 0150 24       		.byte	0x24
 2306 0151 03       		.byte	0x3
 2307 0152 00000000 		.4byte	.LANCHOR0
 2308 0156 22       		.byte	0x22
 2309 0157 06       		.byte	0x6
 2310 0158 0A       		.byte	0xa
 2311 0159 0037     		.2byte	0x3700
 2312 015b 1A       		.byte	0x1a
 2313 015c 72       		.byte	0x72
 2314 015d 00       		.sleb128 0
 2315 015e 03       		.byte	0x3
 2316 015f 14000000 		.4byte	.LANCHOR0+20
 2317 0163 22       		.byte	0x22
 2318 0164 94       		.byte	0x94
 2319 0165 01       		.byte	0x1
 2320 0166 08       		.byte	0x8
 2321 0167 FF       		.byte	0xff
 2322 0168 1A       		.byte	0x1a
 2323 0169 21       		.byte	0x21
 2324 016a 9F       		.byte	0x9f
 2325 016b 00000000 		.4byte	0
 2326 016f 00000000 		.4byte	0
 2327              	.LLST2:
 2328 0173 DC000000 		.4byte	.LVL16
 2329 0177 0C010000 		.4byte	.LVL20
 2330 017b 0100     		.2byte	0x1
 2331 017d 50       		.byte	0x50
 2332 017e 00000000 		.4byte	0
 2333 0182 00000000 		.4byte	0
 2334              	.LLST3:
 2335 0186 00000000 		.4byte	.LVL25
 2336 018a 06000000 		.4byte	.LVL27
 2337 018e 0100     		.2byte	0x1
 2338 0190 50       		.byte	0x50
 2339 0191 06000000 		.4byte	.LVL27
 2340 0195 1A000000 		.4byte	.LVL29
 2341 0199 0100     		.2byte	0x1
 2342 019b 52       		.byte	0x52
 2343 019c 1A000000 		.4byte	.LVL29
 2344 01a0 20000000 		.4byte	.LVL30
 2345 01a4 0400     		.2byte	0x4
 2346 01a6 F3       		.byte	0xf3
 2347 01a7 01       		.uleb128 0x1
 2348 01a8 50       		.byte	0x50
 2349 01a9 9F       		.byte	0x9f
 2350 01aa 20000000 		.4byte	.LVL30
 2351 01ae 22000000 		.4byte	.LVL31
 2352 01b2 0100     		.2byte	0x1
 2353 01b4 50       		.byte	0x50
 2354 01b5 22000000 		.4byte	.LVL31
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 58


 2355 01b9 28000000 		.4byte	.LFE7
 2356 01bd 0400     		.2byte	0x4
 2357 01bf F3       		.byte	0xf3
 2358 01c0 01       		.uleb128 0x1
 2359 01c1 50       		.byte	0x50
 2360 01c2 9F       		.byte	0x9f
 2361 01c3 00000000 		.4byte	0
 2362 01c7 00000000 		.4byte	0
 2363              	.LLST4:
 2364 01cb 02000000 		.4byte	.LVL26
 2365 01cf 06000000 		.4byte	.LVL27
 2366 01d3 0200     		.2byte	0x2
 2367 01d5 30       		.byte	0x30
 2368 01d6 9F       		.byte	0x9f
 2369 01d7 0E000000 		.4byte	.LVL28
 2370 01db 20000000 		.4byte	.LVL30
 2371 01df 0100     		.2byte	0x1
 2372 01e1 50       		.byte	0x50
 2373 01e2 20000000 		.4byte	.LVL30
 2374 01e6 22000000 		.4byte	.LVL31
 2375 01ea 0200     		.2byte	0x2
 2376 01ec 30       		.byte	0x30
 2377 01ed 9F       		.byte	0x9f
 2378 01ee 22000000 		.4byte	.LVL31
 2379 01f2 28000000 		.4byte	.LFE7
 2380 01f6 0100     		.2byte	0x1
 2381 01f8 50       		.byte	0x50
 2382 01f9 00000000 		.4byte	0
 2383 01fd 00000000 		.4byte	0
 2384              	.LLST5:
 2385 0201 00000000 		.4byte	.LVL32
 2386 0205 0A000000 		.4byte	.LVL33
 2387 0209 0100     		.2byte	0x1
 2388 020b 50       		.byte	0x50
 2389 020c 0A000000 		.4byte	.LVL33
 2390 0210 14000000 		.4byte	.LVL35
 2391 0214 0100     		.2byte	0x1
 2392 0216 54       		.byte	0x54
 2393 0217 14000000 		.4byte	.LVL35
 2394 021b 22000000 		.4byte	.LVL37
 2395 021f 0400     		.2byte	0x4
 2396 0221 F3       		.byte	0xf3
 2397 0222 01       		.uleb128 0x1
 2398 0223 50       		.byte	0x50
 2399 0224 9F       		.byte	0x9f
 2400 0225 22000000 		.4byte	.LVL37
 2401 0229 24000000 		.4byte	.LVL38
 2402 022d 0100     		.2byte	0x1
 2403 022f 54       		.byte	0x54
 2404 0230 24000000 		.4byte	.LVL38
 2405 0234 2C000000 		.4byte	.LFE8
 2406 0238 0400     		.2byte	0x4
 2407 023a F3       		.byte	0xf3
 2408 023b 01       		.uleb128 0x1
 2409 023c 50       		.byte	0x50
 2410 023d 9F       		.byte	0x9f
 2411 023e 00000000 		.4byte	0
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 59


 2412 0242 00000000 		.4byte	0
 2413              	.LLST6:
 2414 0246 20000000 		.4byte	.LVL36
 2415 024a 22000000 		.4byte	.LVL37
 2416 024e 0100     		.2byte	0x1
 2417 0250 50       		.byte	0x50
 2418 0251 24000000 		.4byte	.LVL38
 2419 0255 26000000 		.4byte	.LVL39
 2420 0259 0100     		.2byte	0x1
 2421 025b 50       		.byte	0x50
 2422 025c 00000000 		.4byte	0
 2423 0260 00000000 		.4byte	0
 2424              	.LLST7:
 2425 0264 00000000 		.4byte	.LVL40
 2426 0268 04000000 		.4byte	.LVL41
 2427 026c 0100     		.2byte	0x1
 2428 026e 50       		.byte	0x50
 2429 026f 04000000 		.4byte	.LVL41
 2430 0273 10000000 		.4byte	.LFE9
 2431 0277 0400     		.2byte	0x4
 2432 0279 F3       		.byte	0xf3
 2433 027a 01       		.uleb128 0x1
 2434 027b 50       		.byte	0x50
 2435 027c 9F       		.byte	0x9f
 2436 027d 00000000 		.4byte	0
 2437 0281 00000000 		.4byte	0
 2438              	.LLST8:
 2439 0285 00000000 		.4byte	.LVL42
 2440 0289 0E000000 		.4byte	.LVL43
 2441 028d 0100     		.2byte	0x1
 2442 028f 50       		.byte	0x50
 2443 0290 0E000000 		.4byte	.LVL43
 2444 0294 1C000000 		.4byte	.LFE10
 2445 0298 0400     		.2byte	0x4
 2446 029a F3       		.byte	0xf3
 2447 029b 01       		.uleb128 0x1
 2448 029c 50       		.byte	0x50
 2449 029d 9F       		.byte	0x9f
 2450 029e 00000000 		.4byte	0
 2451 02a2 00000000 		.4byte	0
 2452              	.LLST9:
 2453 02a6 00000000 		.4byte	.LVL44
 2454 02aa 0E000000 		.4byte	.LVL45
 2455 02ae 0100     		.2byte	0x1
 2456 02b0 50       		.byte	0x50
 2457 02b1 0E000000 		.4byte	.LVL45
 2458 02b5 18000000 		.4byte	.LFE11
 2459 02b9 0400     		.2byte	0x4
 2460 02bb F3       		.byte	0xf3
 2461 02bc 01       		.uleb128 0x1
 2462 02bd 50       		.byte	0x50
 2463 02be 9F       		.byte	0x9f
 2464 02bf 00000000 		.4byte	0
 2465 02c3 00000000 		.4byte	0
 2466              	.LLST10:
 2467 02c7 00000000 		.4byte	.LVL46
 2468 02cb 04000000 		.4byte	.LVL47
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 60


 2469 02cf 0100     		.2byte	0x1
 2470 02d1 50       		.byte	0x50
 2471 02d2 04000000 		.4byte	.LVL47
 2472 02d6 10000000 		.4byte	.LFE12
 2473 02da 0400     		.2byte	0x4
 2474 02dc F3       		.byte	0xf3
 2475 02dd 01       		.uleb128 0x1
 2476 02de 50       		.byte	0x50
 2477 02df 9F       		.byte	0x9f
 2478 02e0 00000000 		.4byte	0
 2479 02e4 00000000 		.4byte	0
 2480              	.LLST11:
 2481 02e8 00000000 		.4byte	.LVL48
 2482 02ec 04000000 		.4byte	.LVL49
 2483 02f0 0100     		.2byte	0x1
 2484 02f2 50       		.byte	0x50
 2485 02f3 04000000 		.4byte	.LVL49
 2486 02f7 10000000 		.4byte	.LFE13
 2487 02fb 0400     		.2byte	0x4
 2488 02fd F3       		.byte	0xf3
 2489 02fe 01       		.uleb128 0x1
 2490 02ff 50       		.byte	0x50
 2491 0300 9F       		.byte	0x9f
 2492 0301 00000000 		.4byte	0
 2493 0305 00000000 		.4byte	0
 2494              	.LLST12:
 2495 0309 00000000 		.4byte	.LVL50
 2496 030d 0C000000 		.4byte	.LVL51
 2497 0311 0100     		.2byte	0x1
 2498 0313 50       		.byte	0x50
 2499 0314 0C000000 		.4byte	.LVL51
 2500 0318 12000000 		.4byte	.LVL53
 2501 031c 0100     		.2byte	0x1
 2502 031e 54       		.byte	0x54
 2503 031f 12000000 		.4byte	.LVL53
 2504 0323 1C000000 		.4byte	.LFE14
 2505 0327 0400     		.2byte	0x4
 2506 0329 F3       		.byte	0xf3
 2507 032a 01       		.uleb128 0x1
 2508 032b 50       		.byte	0x50
 2509 032c 9F       		.byte	0x9f
 2510 032d 00000000 		.4byte	0
 2511 0331 00000000 		.4byte	0
 2512              	.LLST13:
 2513 0335 00000000 		.4byte	.LVL50
 2514 0339 0F000000 		.4byte	.LVL52-1
 2515 033d 0100     		.2byte	0x1
 2516 033f 51       		.byte	0x51
 2517 0340 0F000000 		.4byte	.LVL52-1
 2518 0344 1C000000 		.4byte	.LFE14
 2519 0348 0400     		.2byte	0x4
 2520 034a F3       		.byte	0xf3
 2521 034b 01       		.uleb128 0x1
 2522 034c 51       		.byte	0x51
 2523 034d 9F       		.byte	0x9f
 2524 034e 00000000 		.4byte	0
 2525 0352 00000000 		.4byte	0
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 61


 2526              	.LLST14:
 2527 0356 00000000 		.4byte	.LVL54
 2528 035a 0C000000 		.4byte	.LVL55
 2529 035e 0100     		.2byte	0x1
 2530 0360 50       		.byte	0x50
 2531 0361 0C000000 		.4byte	.LVL55
 2532 0365 12000000 		.4byte	.LVL57
 2533 0369 0100     		.2byte	0x1
 2534 036b 54       		.byte	0x54
 2535 036c 12000000 		.4byte	.LVL57
 2536 0370 1C000000 		.4byte	.LFE15
 2537 0374 0400     		.2byte	0x4
 2538 0376 F3       		.byte	0xf3
 2539 0377 01       		.uleb128 0x1
 2540 0378 50       		.byte	0x50
 2541 0379 9F       		.byte	0x9f
 2542 037a 00000000 		.4byte	0
 2543 037e 00000000 		.4byte	0
 2544              	.LLST15:
 2545 0382 00000000 		.4byte	.LVL54
 2546 0386 0F000000 		.4byte	.LVL56-1
 2547 038a 0100     		.2byte	0x1
 2548 038c 51       		.byte	0x51
 2549 038d 0F000000 		.4byte	.LVL56-1
 2550 0391 16000000 		.4byte	.LVL58
 2551 0395 0100     		.2byte	0x1
 2552 0397 55       		.byte	0x55
 2553 0398 16000000 		.4byte	.LVL58
 2554 039c 1C000000 		.4byte	.LFE15
 2555 03a0 0800     		.2byte	0x8
 2556 03a2 F3       		.byte	0xf3
 2557 03a3 01       		.uleb128 0x1
 2558 03a4 50       		.byte	0x50
 2559 03a5 32       		.byte	0x32
 2560 03a6 24       		.byte	0x24
 2561 03a7 73       		.byte	0x73
 2562 03a8 00       		.sleb128 0
 2563 03a9 22       		.byte	0x22
 2564 03aa 00000000 		.4byte	0
 2565 03ae 00000000 		.4byte	0
 2566              	.LLST16:
 2567 03b2 00000000 		.4byte	.LVL59
 2568 03b6 0C000000 		.4byte	.LVL60
 2569 03ba 0100     		.2byte	0x1
 2570 03bc 50       		.byte	0x50
 2571 03bd 0C000000 		.4byte	.LVL60
 2572 03c1 44000000 		.4byte	.LVL63
 2573 03c5 0100     		.2byte	0x1
 2574 03c7 54       		.byte	0x54
 2575 03c8 44000000 		.4byte	.LVL63
 2576 03cc 5C000000 		.4byte	.LFE16
 2577 03d0 0400     		.2byte	0x4
 2578 03d2 F3       		.byte	0xf3
 2579 03d3 01       		.uleb128 0x1
 2580 03d4 50       		.byte	0x50
 2581 03d5 9F       		.byte	0x9f
 2582 03d6 00000000 		.4byte	0
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 62


 2583 03da 00000000 		.4byte	0
 2584              	.LLST17:
 2585 03de 00000000 		.4byte	.LVL59
 2586 03e2 0F000000 		.4byte	.LVL61-1
 2587 03e6 0100     		.2byte	0x1
 2588 03e8 51       		.byte	0x51
 2589 03e9 0F000000 		.4byte	.LVL61-1
 2590 03ed 1C000000 		.4byte	.LVL62
 2591 03f1 0400     		.2byte	0x4
 2592 03f3 F3       		.byte	0xf3
 2593 03f4 01       		.uleb128 0x1
 2594 03f5 51       		.byte	0x51
 2595 03f6 9F       		.byte	0x9f
 2596 03f7 1C000000 		.4byte	.LVL62
 2597 03fb 48000000 		.4byte	.LVL64
 2598 03ff 0100     		.2byte	0x1
 2599 0401 51       		.byte	0x51
 2600 0402 00000000 		.4byte	0
 2601 0406 00000000 		.4byte	0
 2602              	.LLST18:
 2603 040a 00000000 		.4byte	.LVL67
 2604 040e 0C000000 		.4byte	.LVL68
 2605 0412 0100     		.2byte	0x1
 2606 0414 50       		.byte	0x50
 2607 0415 0C000000 		.4byte	.LVL68
 2608 0419 28000000 		.4byte	.LVL72
 2609 041d 0100     		.2byte	0x1
 2610 041f 55       		.byte	0x55
 2611 0420 28000000 		.4byte	.LVL72
 2612 0424 40000000 		.4byte	.LFE17
 2613 0428 0400     		.2byte	0x4
 2614 042a F3       		.byte	0xf3
 2615 042b 01       		.uleb128 0x1
 2616 042c 50       		.byte	0x50
 2617 042d 9F       		.byte	0x9f
 2618 042e 00000000 		.4byte	0
 2619 0432 00000000 		.4byte	0
 2620              	.LLST19:
 2621 0436 00000000 		.4byte	.LVL67
 2622 043a 0F000000 		.4byte	.LVL69-1
 2623 043e 0100     		.2byte	0x1
 2624 0440 51       		.byte	0x51
 2625 0441 0F000000 		.4byte	.LVL69-1
 2626 0445 1C000000 		.4byte	.LVL70
 2627 0449 0400     		.2byte	0x4
 2628 044b F3       		.byte	0xf3
 2629 044c 01       		.uleb128 0x1
 2630 044d 51       		.byte	0x51
 2631 044e 9F       		.byte	0x9f
 2632 044f 1C000000 		.4byte	.LVL70
 2633 0453 25000000 		.4byte	.LVL71-1
 2634 0457 0100     		.2byte	0x1
 2635 0459 50       		.byte	0x50
 2636 045a 00000000 		.4byte	0
 2637 045e 00000000 		.4byte	0
 2638              	.LLST20:
 2639 0462 00000000 		.4byte	.LVL74
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 63


 2640 0466 0C000000 		.4byte	.LVL75
 2641 046a 0100     		.2byte	0x1
 2642 046c 50       		.byte	0x50
 2643 046d 0C000000 		.4byte	.LVL75
 2644 0471 2A000000 		.4byte	.LVL80
 2645 0475 0100     		.2byte	0x1
 2646 0477 54       		.byte	0x54
 2647 0478 2A000000 		.4byte	.LVL80
 2648 047c 48000000 		.4byte	.LFE18
 2649 0480 0400     		.2byte	0x4
 2650 0482 F3       		.byte	0xf3
 2651 0483 01       		.uleb128 0x1
 2652 0484 50       		.byte	0x50
 2653 0485 9F       		.byte	0x9f
 2654 0486 00000000 		.4byte	0
 2655 048a 00000000 		.4byte	0
 2656              	.LLST21:
 2657 048e 00000000 		.4byte	.LVL74
 2658 0492 0F000000 		.4byte	.LVL76-1
 2659 0496 0100     		.2byte	0x1
 2660 0498 51       		.byte	0x51
 2661 0499 0F000000 		.4byte	.LVL76-1
 2662 049d 1C000000 		.4byte	.LVL77
 2663 04a1 0400     		.2byte	0x4
 2664 04a3 F3       		.byte	0xf3
 2665 04a4 01       		.uleb128 0x1
 2666 04a5 51       		.byte	0x51
 2667 04a6 9F       		.byte	0x9f
 2668 04a7 1C000000 		.4byte	.LVL77
 2669 04ab 1F000000 		.4byte	.LVL78-1
 2670 04af 0100     		.2byte	0x1
 2671 04b1 50       		.byte	0x50
 2672 04b2 00000000 		.4byte	0
 2673 04b6 00000000 		.4byte	0
 2674              		.section	.debug_aranges,"",%progbits
 2675 0000 A4000000 		.4byte	0xa4
 2676 0004 0200     		.2byte	0x2
 2677 0006 00000000 		.4byte	.Ldebug_info0
 2678 000a 04       		.byte	0x4
 2679 000b 00       		.byte	0
 2680 000c 0000     		.2byte	0
 2681 000e 0000     		.2byte	0
 2682 0010 00000000 		.4byte	.LFB2
 2683 0014 80010000 		.4byte	.LFE2-.LFB2
 2684 0018 00000000 		.4byte	.LFB3
 2685 001c 30000000 		.4byte	.LFE3-.LFB3
 2686 0020 00000000 		.4byte	.LFB1
 2687 0024 20000000 		.4byte	.LFE1-.LFB1
 2688 0028 00000000 		.4byte	.LFB4
 2689 002c 10000000 		.4byte	.LFE4-.LFB4
 2690 0030 00000000 		.4byte	.LFB5
 2691 0034 14000000 		.4byte	.LFE5-.LFB5
 2692 0038 00000000 		.4byte	.LFB6
 2693 003c 14000000 		.4byte	.LFE6-.LFB6
 2694 0040 00000000 		.4byte	.LFB7
 2695 0044 28000000 		.4byte	.LFE7-.LFB7
 2696 0048 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 64


 2697 004c 2C000000 		.4byte	.LFE8-.LFB8
 2698 0050 00000000 		.4byte	.LFB9
 2699 0054 10000000 		.4byte	.LFE9-.LFB9
 2700 0058 00000000 		.4byte	.LFB10
 2701 005c 1C000000 		.4byte	.LFE10-.LFB10
 2702 0060 00000000 		.4byte	.LFB11
 2703 0064 18000000 		.4byte	.LFE11-.LFB11
 2704 0068 00000000 		.4byte	.LFB12
 2705 006c 10000000 		.4byte	.LFE12-.LFB12
 2706 0070 00000000 		.4byte	.LFB13
 2707 0074 10000000 		.4byte	.LFE13-.LFB13
 2708 0078 00000000 		.4byte	.LFB14
 2709 007c 1C000000 		.4byte	.LFE14-.LFB14
 2710 0080 00000000 		.4byte	.LFB15
 2711 0084 1C000000 		.4byte	.LFE15-.LFB15
 2712 0088 00000000 		.4byte	.LFB16
 2713 008c 5C000000 		.4byte	.LFE16-.LFB16
 2714 0090 00000000 		.4byte	.LFB17
 2715 0094 40000000 		.4byte	.LFE17-.LFB17
 2716 0098 00000000 		.4byte	.LFB18
 2717 009c 48000000 		.4byte	.LFE18-.LFB18
 2718 00a0 00000000 		.4byte	0
 2719 00a4 00000000 		.4byte	0
 2720              		.section	.debug_ranges,"",%progbits
 2721              	.Ldebug_ranges0:
 2722 0000 00000000 		.4byte	.LFB2
 2723 0004 80010000 		.4byte	.LFE2
 2724 0008 00000000 		.4byte	.LFB3
 2725 000c 30000000 		.4byte	.LFE3
 2726 0010 00000000 		.4byte	.LFB1
 2727 0014 20000000 		.4byte	.LFE1
 2728 0018 00000000 		.4byte	.LFB4
 2729 001c 10000000 		.4byte	.LFE4
 2730 0020 00000000 		.4byte	.LFB5
 2731 0024 14000000 		.4byte	.LFE5
 2732 0028 00000000 		.4byte	.LFB6
 2733 002c 14000000 		.4byte	.LFE6
 2734 0030 00000000 		.4byte	.LFB7
 2735 0034 28000000 		.4byte	.LFE7
 2736 0038 00000000 		.4byte	.LFB8
 2737 003c 2C000000 		.4byte	.LFE8
 2738 0040 00000000 		.4byte	.LFB9
 2739 0044 10000000 		.4byte	.LFE9
 2740 0048 00000000 		.4byte	.LFB10
 2741 004c 1C000000 		.4byte	.LFE10
 2742 0050 00000000 		.4byte	.LFB11
 2743 0054 18000000 		.4byte	.LFE11
 2744 0058 00000000 		.4byte	.LFB12
 2745 005c 10000000 		.4byte	.LFE12
 2746 0060 00000000 		.4byte	.LFB13
 2747 0064 10000000 		.4byte	.LFE13
 2748 0068 00000000 		.4byte	.LFB14
 2749 006c 1C000000 		.4byte	.LFE14
 2750 0070 00000000 		.4byte	.LFB15
 2751 0074 1C000000 		.4byte	.LFE15
 2752 0078 00000000 		.4byte	.LFB16
 2753 007c 5C000000 		.4byte	.LFE16
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 65


 2754 0080 00000000 		.4byte	.LFB17
 2755 0084 40000000 		.4byte	.LFE17
 2756 0088 00000000 		.4byte	.LFB18
 2757 008c 48000000 		.4byte	.LFE18
 2758 0090 00000000 		.4byte	0
 2759 0094 00000000 		.4byte	0
 2760              		.section	.debug_line,"",%progbits
 2761              	.Ldebug_line0:
 2762 0000 99020000 		.section	.debug_str,"MS",%progbits,1
 2762      02005500 
 2762      00000201 
 2762      FB0E0D00 
 2762      01010101 
 2763              	.LASF58:
 2764 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2764      5341525F 
 2764      5365715F 
 2764      315F6F66 
 2764      66736574 
 2765              	.LASF10:
 2766 0015 75696E74 		.ascii	"uint16\000"
 2766      313600
 2767              	.LASF26:
 2768 001c 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2768      5341525F 
 2768      5365715F 
 2768      315F496E 
 2768      697400
 2769              	.LASF49:
 2770 002f 61646347 		.ascii	"adcGain\000"
 2770      61696E00 
 2771              	.LASF24:
 2772 0037 636F756E 		.ascii	"counts\000"
 2772      747300
 2773              	.LASF30:
 2774 003e 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 2774      5341525F 
 2774      5365715F 
 2774      315F5374 
 2774      61727443 
 2775              	.LASF45:
 2776 0059 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2776      5341525F 
 2776      5365715F 
 2776      315F5365 
 2776      74536174 
 2777              	.LASF64:
 2778 0072 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2778      43313120 
 2778      352E342E 
 2778      31203230 
 2778      31363036 
 2779 00a5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2779      20726576 
 2779      6973696F 
 2779      6E203233 
 2779      37373135 
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 66


 2780 00d8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2780      66756E63 
 2780      74696F6E 
 2780      2D736563 
 2780      74696F6E 
 2781              	.LASF28:
 2782 0100 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2782      5341525F 
 2782      5365715F 
 2782      315F5374 
 2782      61727400 
 2783              	.LASF7:
 2784 0114 6C6F6E67 		.ascii	"long long unsigned int\000"
 2784      206C6F6E 
 2784      6720756E 
 2784      7369676E 
 2784      65642069 
 2785              	.LASF27:
 2786 012b 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2786      5341525F 
 2786      5365715F 
 2786      315F456E 
 2786      61626C65 
 2787              	.LASF25:
 2788 0140 4144435F 		.ascii	"ADC_SAR_Seq_1_InputsPlacement\000"
 2788      5341525F 
 2788      5365715F 
 2788      315F496E 
 2788      70757473 
 2789              	.LASF66:
 2790 015e 433A5C55 		.ascii	"C:\\Users\\corne\\Dropbox\\prive\\projects\\Wireles"
 2790      73657273 
 2790      5C636F72 
 2790      6E655C44 
 2790      726F7062 
 2791 018b 735F7365 		.ascii	"s_sensornode\\Software\\Wireless_sensornode\\Firmwa"
 2791      6E736F72 
 2791      6E6F6465 
 2791      5C536F66 
 2791      74776172 
 2792 01bb 72655F56 		.ascii	"re_V0.1.cydsn\000"
 2792      302E312E 
 2792      63796473 
 2792      6E00
 2793              	.LASF34:
 2794 01c9 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2794      5341525F 
 2794      5365715F 
 2794      315F4765 
 2794      74526573 
 2795              	.LASF6:
 2796 01e3 6C6F6E67 		.ascii	"long long int\000"
 2796      206C6F6E 
 2796      6720696E 
 2796      7400
 2797              	.LASF0:
 2798 01f1 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 67


 2798      65642063 
 2798      68617200 
 2799              	.LASF42:
 2800 01fd 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2800      5341525F 
 2800      5365715F 
 2800      315F5365 
 2800      74486967 
 2801              	.LASF13:
 2802 0218 696E7433 		.ascii	"int32\000"
 2802      3200
 2803              	.LASF53:
 2804 021e 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2804      5341525F 
 2804      5365715F 
 2804      315F436F 
 2804      756E7473 
 2805              	.LASF4:
 2806 023c 6C6F6E67 		.ascii	"long int\000"
 2806      20696E74 
 2806      00
 2807              	.LASF9:
 2808 0245 75696E74 		.ascii	"uint8\000"
 2808      3800
 2809              	.LASF62:
 2810 024b 43794465 		.ascii	"CyDelayUs\000"
 2810      6C617955 
 2810      7300
 2811              	.LASF16:
 2812 0255 646F7562 		.ascii	"double\000"
 2812      6C6500
 2813              	.LASF11:
 2814 025c 75696E74 		.ascii	"uint32\000"
 2814      333200
 2815              	.LASF39:
 2816 0263 6D61736B 		.ascii	"mask\000"
 2816      00
 2817              	.LASF50:
 2818 0268 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2818      5341525F 
 2818      5365715F 
 2818      315F436F 
 2818      756E7473 
 2819              	.LASF35:
 2820 0286 7265744D 		.ascii	"retMode\000"
 2820      6F646500 
 2821              	.LASF57:
 2822 028e 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2822      5341525F 
 2822      5365715F 
 2822      315F696E 
 2822      69745661 
 2823              	.LASF8:
 2824 02a4 756E7369 		.ascii	"unsigned int\000"
 2824      676E6564 
 2824      20696E74 
 2824      00
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 68


 2825              	.LASF67:
 2826 02b1 75566F6C 		.ascii	"uVolts\000"
 2826      747300
 2827              	.LASF5:
 2828 02b8 6C6F6E67 		.ascii	"long unsigned int\000"
 2828      20756E73 
 2828      69676E65 
 2828      6420696E 
 2828      7400
 2829              	.LASF55:
 2830 02ca 766F6C74 		.ascii	"volts\000"
 2830      7300
 2831              	.LASF23:
 2832 02d0 746D7052 		.ascii	"tmpRegVal\000"
 2832      65675661 
 2832      6C00
 2833              	.LASF3:
 2834 02da 73686F72 		.ascii	"short unsigned int\000"
 2834      7420756E 
 2834      7369676E 
 2834      65642069 
 2834      6E7400
 2835              	.LASF61:
 2836 02ed 4379496E 		.ascii	"CyIntSetVector\000"
 2836      74536574 
 2836      56656374 
 2836      6F7200
 2837              	.LASF56:
 2838 02fc 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2838      5341525F 
 2838      5365715F 
 2838      315F6368 
 2838      616E6E65 
 2839              	.LASF52:
 2840 0319 6D566F6C 		.ascii	"mVolts\000"
 2840      747300
 2841              	.LASF19:
 2842 0320 72656733 		.ascii	"reg32\000"
 2842      3200
 2843              	.LASF14:
 2844 0326 666C6F61 		.ascii	"float32\000"
 2844      74333200 
 2845              	.LASF21:
 2846 032e 73697A65 		.ascii	"sizetype\000"
 2846      74797065 
 2846      00
 2847              	.LASF41:
 2848 0337 6C6F774C 		.ascii	"lowLimit\000"
 2848      696D6974 
 2848      00
 2849              	.LASF20:
 2850 0340 6C6F6E67 		.ascii	"long double\000"
 2850      20646F75 
 2850      626C6500 
 2851              	.LASF33:
 2852 034c 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2852      5341525F 
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 69


 2852      5365715F 
 2852      315F4973 
 2852      456E6443 
 2853              	.LASF31:
 2854 036a 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2854      5341525F 
 2854      5365715F 
 2854      315F5374 
 2854      6F70436F 
 2855              	.LASF17:
 2856 0384 696E7436 		.ascii	"int64\000"
 2856      3400
 2857              	.LASF60:
 2858 038a 4379496E 		.ascii	"CyIntSetPriority\000"
 2858      74536574 
 2858      5072696F 
 2858      72697479 
 2858      00
 2859              	.LASF65:
 2860 039b 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2860      72617465 
 2860      645F536F 
 2860      75726365 
 2860      5C50536F 
 2861              	.LASF15:
 2862 03c2 666C6F61 		.ascii	"float\000"
 2862      7400
 2863              	.LASF48:
 2864 03c8 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2864      5341525F 
 2864      5365715F 
 2864      315F5365 
 2864      74476169 
 2865              	.LASF29:
 2866 03de 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 2866      5341525F 
 2866      5365715F 
 2866      315F5374 
 2866      6F7000
 2867              	.LASF43:
 2868 03f1 68696768 		.ascii	"highLimit\000"
 2868      4C696D69 
 2868      7400
 2869              	.LASF63:
 2870 03fb 43794861 		.ascii	"CyHalt\000"
 2870      6C7400
 2871              	.LASF1:
 2872 0402 756E7369 		.ascii	"unsigned char\000"
 2872      676E6564 
 2872      20636861 
 2872      7200
 2873              	.LASF2:
 2874 0410 73686F72 		.ascii	"short int\000"
 2874      7420696E 
 2874      7400
 2875              	.LASF54:
 2876 041a 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 70


 2876      5341525F 
 2876      5365715F 
 2876      315F436F 
 2876      756E7473 
 2877              	.LASF38:
 2878 0437 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2878      5341525F 
 2878      5365715F 
 2878      315F5365 
 2878      74436861 
 2879              	.LASF22:
 2880 0451 63684E75 		.ascii	"chNum\000"
 2880      6D00
 2881              	.LASF36:
 2882 0457 6368616E 		.ascii	"chan\000"
 2882      00
 2883              	.LASF18:
 2884 045c 63686172 		.ascii	"char\000"
 2884      00
 2885              	.LASF40:
 2886 0461 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2886      5341525F 
 2886      5365715F 
 2886      315F5365 
 2886      744C6F77 
 2887              	.LASF47:
 2888 047b 6F666673 		.ascii	"offset\000"
 2888      657400
 2889              	.LASF51:
 2890 0482 61646343 		.ascii	"adcCounts\000"
 2890      6F756E74 
 2890      7300
 2891              	.LASF59:
 2892 048c 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2892      5341525F 
 2892      5365715F 
 2892      315F636F 
 2892      756E7473 
 2893              	.LASF32:
 2894 04aa 73746174 		.ascii	"status\000"
 2894      757300
 2895              	.LASF46:
 2896 04b1 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2896      5341525F 
 2896      5365715F 
 2896      315F5365 
 2896      744F6666 
 2897              	.LASF12:
 2898 04c9 696E7431 		.ascii	"int16\000"
 2898      3600
 2899              	.LASF44:
 2900 04cf 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2900      5341525F 
 2900      5365715F 
 2900      315F5365 
 2900      744C696D 
 2901              	.LASF37:
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccpTlc6c.s 			page 71


 2902 04ea 72657375 		.ascii	"result\000"
 2902      6C7400
 2903              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

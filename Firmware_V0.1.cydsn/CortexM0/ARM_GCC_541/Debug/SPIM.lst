ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPIM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPIM_EnableTxInt,"ax",%progbits
  20              		.align	2
  21              		.global	SPIM_EnableTxInt
  22              		.code	16
  23              		.thumb_func
  24              		.type	SPIM_EnableTxInt, %function
  25              	SPIM_EnableTxInt:
  26              	.LFB5:
  27              		.file 1 "Generated_Source\\PSoC4\\SPIM.c"
   1:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/SPIM.c **** * File Name: SPIM.c
   3:Generated_Source\PSoC4/SPIM.c **** * Version 2.50
   4:Generated_Source\PSoC4/SPIM.c **** *
   5:Generated_Source\PSoC4/SPIM.c **** * Description:
   6:Generated_Source\PSoC4/SPIM.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC4/SPIM.c **** *
   8:Generated_Source\PSoC4/SPIM.c **** * Note:
   9:Generated_Source\PSoC4/SPIM.c **** *  None.
  10:Generated_Source\PSoC4/SPIM.c **** *
  11:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
  12:Generated_Source\PSoC4/SPIM.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/SPIM.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/SPIM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/SPIM.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/SPIM.c **** 
  18:Generated_Source\PSoC4/SPIM.c **** #include "SPIM_PVT.h"
  19:Generated_Source\PSoC4/SPIM.c **** 
  20:Generated_Source\PSoC4/SPIM.c **** #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBuffer[SPIM_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferFull;
  23:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferRead;
  24:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferWrite;
  25:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC4/SPIM.c **** 
  27:Generated_Source\PSoC4/SPIM.c **** #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferFull;
  30:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferRead;
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 2


  31:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferWrite;
  32:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC4/SPIM.c **** 
  34:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_initVar = 0u;
  35:Generated_Source\PSoC4/SPIM.c **** 
  36:Generated_Source\PSoC4/SPIM.c **** volatile uint8 SPIM_swStatusTx;
  37:Generated_Source\PSoC4/SPIM.c **** volatile uint8 SPIM_swStatusRx;
  38:Generated_Source\PSoC4/SPIM.c **** 
  39:Generated_Source\PSoC4/SPIM.c **** 
  40:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
  41:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Init
  42:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
  43:Generated_Source\PSoC4/SPIM.c **** *
  44:Generated_Source\PSoC4/SPIM.c **** * Summary:
  45:Generated_Source\PSoC4/SPIM.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC4/SPIM.c **** *
  47:Generated_Source\PSoC4/SPIM.c **** * Parameters:
  48:Generated_Source\PSoC4/SPIM.c **** *  None.
  49:Generated_Source\PSoC4/SPIM.c **** *
  50:Generated_Source\PSoC4/SPIM.c **** * Return:
  51:Generated_Source\PSoC4/SPIM.c **** *  None.
  52:Generated_Source\PSoC4/SPIM.c **** *
  53:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
  54:Generated_Source\PSoC4/SPIM.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC4/SPIM.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC4/SPIM.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC4/SPIM.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC4/SPIM.c **** *
  59:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
  60:Generated_Source\PSoC4/SPIM.c **** *  No.
  61:Generated_Source\PSoC4/SPIM.c **** *
  62:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/SPIM.c **** void SPIM_Init(void) 
  64:Generated_Source\PSoC4/SPIM.c **** {
  65:Generated_Source\PSoC4/SPIM.c ****     /* Initialize the Bit counter */
  66:Generated_Source\PSoC4/SPIM.c ****     SPIM_COUNTER_PERIOD_REG = SPIM_BITCTR_INIT;
  67:Generated_Source\PSoC4/SPIM.c **** 
  68:Generated_Source\PSoC4/SPIM.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
  70:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable         (SPIM_TX_ISR_NUMBER);
  71:Generated_Source\PSoC4/SPIM.c ****         CyIntSetPriority     (SPIM_TX_ISR_NUMBER,  SPIM_TX_ISR_PRIORITY);
  72:Generated_Source\PSoC4/SPIM.c ****         (void) CyIntSetVector(SPIM_TX_ISR_NUMBER, &SPIM_TX_ISR);
  73:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC4/SPIM.c **** 
  75:Generated_Source\PSoC4/SPIM.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable         (SPIM_RX_ISR_NUMBER);
  78:Generated_Source\PSoC4/SPIM.c ****         CyIntSetPriority     (SPIM_RX_ISR_NUMBER,  SPIM_RX_ISR_PRIORITY);
  79:Generated_Source\PSoC4/SPIM.c ****         (void) CyIntSetVector(SPIM_RX_ISR_NUMBER, &SPIM_RX_ISR);
  80:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC4/SPIM.c **** 
  82:Generated_Source\PSoC4/SPIM.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC4/SPIM.c ****     SPIM_ClearFIFO();
  84:Generated_Source\PSoC4/SPIM.c **** 
  85:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferFull  = 0u;
  87:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferRead  = 0u;
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 3


  88:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferWrite = 0u;
  89:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC4/SPIM.c **** 
  91:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferFull  = 0u;
  93:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferRead  = 0u;
  94:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferWrite = 0u;
  95:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC4/SPIM.c **** 
  97:Generated_Source\PSoC4/SPIM.c ****     (void) SPIM_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  98:Generated_Source\PSoC4/SPIM.c ****     (void) SPIM_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  99:Generated_Source\PSoC4/SPIM.c **** 
 100:Generated_Source\PSoC4/SPIM.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = SPIM_TX_INIT_INTERRUPTS_MASK;
 102:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG = SPIM_RX_INIT_INTERRUPTS_MASK;
 103:Generated_Source\PSoC4/SPIM.c **** }
 104:Generated_Source\PSoC4/SPIM.c **** 
 105:Generated_Source\PSoC4/SPIM.c **** 
 106:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 107:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Enable
 108:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 109:Generated_Source\PSoC4/SPIM.c **** *
 110:Generated_Source\PSoC4/SPIM.c **** * Summary:
 111:Generated_Source\PSoC4/SPIM.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC4/SPIM.c **** *
 113:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 114:Generated_Source\PSoC4/SPIM.c **** *  None.
 115:Generated_Source\PSoC4/SPIM.c **** *
 116:Generated_Source\PSoC4/SPIM.c **** * Return:
 117:Generated_Source\PSoC4/SPIM.c **** *  None.
 118:Generated_Source\PSoC4/SPIM.c **** *
 119:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 120:Generated_Source\PSoC4/SPIM.c **** void SPIM_Enable(void) 
 121:Generated_Source\PSoC4/SPIM.c **** {
 122:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC4/SPIM.c **** 
 124:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 125:Generated_Source\PSoC4/SPIM.c ****     SPIM_COUNTER_CONTROL_REG |= SPIM_CNTR_ENABLE;
 126:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 127:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 128:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 129:Generated_Source\PSoC4/SPIM.c **** 
 130:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 131:Generated_Source\PSoC4/SPIM.c ****         SPIM_IntClock_Enable();
 132:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC4/SPIM.c **** 
 134:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableTxInt();
 135:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableRxInt();
 136:Generated_Source\PSoC4/SPIM.c **** }
 137:Generated_Source\PSoC4/SPIM.c **** 
 138:Generated_Source\PSoC4/SPIM.c **** 
 139:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 140:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Start
 141:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 142:Generated_Source\PSoC4/SPIM.c **** *
 143:Generated_Source\PSoC4/SPIM.c **** * Summary:
 144:Generated_Source\PSoC4/SPIM.c **** *  Initialize and Enable the SPI Master component.
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 4


 145:Generated_Source\PSoC4/SPIM.c **** *
 146:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 147:Generated_Source\PSoC4/SPIM.c **** *  None.
 148:Generated_Source\PSoC4/SPIM.c **** *
 149:Generated_Source\PSoC4/SPIM.c **** * Return:
 150:Generated_Source\PSoC4/SPIM.c **** *  None.
 151:Generated_Source\PSoC4/SPIM.c **** *
 152:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 153:Generated_Source\PSoC4/SPIM.c **** *  SPIM_initVar - used to check initial configuration, modified on
 154:Generated_Source\PSoC4/SPIM.c **** *  first function call.
 155:Generated_Source\PSoC4/SPIM.c **** *
 156:Generated_Source\PSoC4/SPIM.c **** * Theory:
 157:Generated_Source\PSoC4/SPIM.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC4/SPIM.c **** *
 159:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 160:Generated_Source\PSoC4/SPIM.c **** *  No.
 161:Generated_Source\PSoC4/SPIM.c **** *
 162:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 163:Generated_Source\PSoC4/SPIM.c **** void SPIM_Start(void) 
 164:Generated_Source\PSoC4/SPIM.c **** {
 165:Generated_Source\PSoC4/SPIM.c ****     if(0u == SPIM_initVar)
 166:Generated_Source\PSoC4/SPIM.c ****     {
 167:Generated_Source\PSoC4/SPIM.c ****         SPIM_Init();
 168:Generated_Source\PSoC4/SPIM.c ****         SPIM_initVar = 1u;
 169:Generated_Source\PSoC4/SPIM.c ****     }
 170:Generated_Source\PSoC4/SPIM.c **** 
 171:Generated_Source\PSoC4/SPIM.c ****     SPIM_Enable();
 172:Generated_Source\PSoC4/SPIM.c **** }
 173:Generated_Source\PSoC4/SPIM.c **** 
 174:Generated_Source\PSoC4/SPIM.c **** 
 175:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 176:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Stop
 177:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 178:Generated_Source\PSoC4/SPIM.c **** *
 179:Generated_Source\PSoC4/SPIM.c **** * Summary:
 180:Generated_Source\PSoC4/SPIM.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC4/SPIM.c **** *
 182:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 183:Generated_Source\PSoC4/SPIM.c **** *  None.
 184:Generated_Source\PSoC4/SPIM.c **** *
 185:Generated_Source\PSoC4/SPIM.c **** * Return:
 186:Generated_Source\PSoC4/SPIM.c **** *  None.
 187:Generated_Source\PSoC4/SPIM.c **** *
 188:Generated_Source\PSoC4/SPIM.c **** * Theory:
 189:Generated_Source\PSoC4/SPIM.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC4/SPIM.c **** *
 191:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 192:Generated_Source\PSoC4/SPIM.c **** void SPIM_Stop(void) 
 193:Generated_Source\PSoC4/SPIM.c **** {
 194:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC4/SPIM.c **** 
 196:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 197:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 198:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 199:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 200:Generated_Source\PSoC4/SPIM.c **** 
 201:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 5


 202:Generated_Source\PSoC4/SPIM.c ****         SPIM_IntClock_Disable();
 203:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC4/SPIM.c **** 
 205:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableTxInt();
 206:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableRxInt();
 207:Generated_Source\PSoC4/SPIM.c **** }
 208:Generated_Source\PSoC4/SPIM.c **** 
 209:Generated_Source\PSoC4/SPIM.c **** 
 210:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableTxInt
 212:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 213:Generated_Source\PSoC4/SPIM.c **** *
 214:Generated_Source\PSoC4/SPIM.c **** * Summary:
 215:Generated_Source\PSoC4/SPIM.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC4/SPIM.c **** *
 217:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 218:Generated_Source\PSoC4/SPIM.c **** *  None.
 219:Generated_Source\PSoC4/SPIM.c **** *
 220:Generated_Source\PSoC4/SPIM.c **** * Return:
 221:Generated_Source\PSoC4/SPIM.c **** *  None.
 222:Generated_Source\PSoC4/SPIM.c **** *
 223:Generated_Source\PSoC4/SPIM.c **** * Theory:
 224:Generated_Source\PSoC4/SPIM.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:Generated_Source\PSoC4/SPIM.c **** *
 226:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 227:Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableTxInt(void) 
 228:Generated_Source\PSoC4/SPIM.c **** {
  28              		.loc 1 228 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 229:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC4/SPIM.c ****         CyIntEnable(SPIM_TX_ISR_NUMBER);
  36              		.loc 1 230 0
  37 0002 0120     		movs	r0, #1
  38 0004 FFF7FEFF 		bl	CyIntEnable
  39              	.LVL0:
 231:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC4/SPIM.c **** }
  40              		.loc 1 232 0
  41              		@ sp needed
  42 0008 10BD     		pop	{r4, pc}
  43              		.cfi_endproc
  44              	.LFE5:
  45              		.size	SPIM_EnableTxInt, .-SPIM_EnableTxInt
  46 000a C046     		.section	.text.SPIM_EnableRxInt,"ax",%progbits
  47              		.align	2
  48              		.global	SPIM_EnableRxInt
  49              		.code	16
  50              		.thumb_func
  51              		.type	SPIM_EnableRxInt, %function
  52              	SPIM_EnableRxInt:
  53              	.LFB6:
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 6


 233:Generated_Source\PSoC4/SPIM.c **** 
 234:Generated_Source\PSoC4/SPIM.c **** 
 235:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 236:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableRxInt
 237:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 238:Generated_Source\PSoC4/SPIM.c **** *
 239:Generated_Source\PSoC4/SPIM.c **** * Summary:
 240:Generated_Source\PSoC4/SPIM.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC4/SPIM.c **** *
 242:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 243:Generated_Source\PSoC4/SPIM.c **** *  None.
 244:Generated_Source\PSoC4/SPIM.c **** *
 245:Generated_Source\PSoC4/SPIM.c **** * Return:
 246:Generated_Source\PSoC4/SPIM.c **** *  None.
 247:Generated_Source\PSoC4/SPIM.c **** *
 248:Generated_Source\PSoC4/SPIM.c **** * Theory:
 249:Generated_Source\PSoC4/SPIM.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:Generated_Source\PSoC4/SPIM.c **** *
 251:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 252:Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableRxInt(void) 
 253:Generated_Source\PSoC4/SPIM.c **** {
  54              		.loc 1 253 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58 0000 10B5     		push	{r4, lr}
  59              		.cfi_def_cfa_offset 8
  60              		.cfi_offset 4, -8
  61              		.cfi_offset 14, -4
 254:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC4/SPIM.c ****         CyIntEnable(SPIM_RX_ISR_NUMBER);
  62              		.loc 1 255 0
  63 0002 0020     		movs	r0, #0
  64 0004 FFF7FEFF 		bl	CyIntEnable
  65              	.LVL1:
 256:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 257:Generated_Source\PSoC4/SPIM.c **** }
  66              		.loc 1 257 0
  67              		@ sp needed
  68 0008 10BD     		pop	{r4, pc}
  69              		.cfi_endproc
  70              	.LFE6:
  71              		.size	SPIM_EnableRxInt, .-SPIM_EnableRxInt
  72 000a C046     		.section	.text.SPIM_Enable,"ax",%progbits
  73              		.align	2
  74              		.global	SPIM_Enable
  75              		.code	16
  76              		.thumb_func
  77              		.type	SPIM_Enable, %function
  78              	SPIM_Enable:
  79              	.LFB2:
 121:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
  80              		.loc 1 121 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 7


  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 4, -8
  87              		.cfi_offset 14, -4
 124:Generated_Source\PSoC4/SPIM.c ****     SPIM_COUNTER_CONTROL_REG |= SPIM_CNTR_ENABLE;
  88              		.loc 1 124 0
  89 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  90              	.LVL2:
 125:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
  91              		.loc 1 125 0
  92 0006 0C4A     		ldr	r2, .L4
  93 0008 1178     		ldrb	r1, [r2]
  94 000a 2023     		movs	r3, #32
  95 000c 0B43     		orrs	r3, r1
  96 000e DBB2     		uxtb	r3, r3
  97 0010 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
  98              		.loc 1 126 0
  99 0012 0A49     		ldr	r1, .L4+4
 100 0014 0A78     		ldrb	r2, [r1]
 101 0016 1023     		movs	r3, #16
 102 0018 1A43     		orrs	r2, r3
 103 001a D2B2     		uxtb	r2, r2
 104 001c 0A70     		strb	r2, [r1]
 127:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 105              		.loc 1 127 0
 106 001e 084A     		ldr	r2, .L4+8
 107 0020 1178     		ldrb	r1, [r2]
 108 0022 0B43     		orrs	r3, r1
 109 0024 DBB2     		uxtb	r3, r3
 110 0026 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC4/SPIM.c **** 
 111              		.loc 1 128 0
 112 0028 FFF7FEFF 		bl	CyExitCriticalSection
 113              	.LVL3:
 134:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableRxInt();
 114              		.loc 1 134 0
 115 002c FFF7FEFF 		bl	SPIM_EnableTxInt
 116              	.LVL4:
 135:Generated_Source\PSoC4/SPIM.c **** }
 117              		.loc 1 135 0
 118 0030 FFF7FEFF 		bl	SPIM_EnableRxInt
 119              	.LVL5:
 136:Generated_Source\PSoC4/SPIM.c **** 
 120              		.loc 1 136 0
 121              		@ sp needed
 122 0034 10BD     		pop	{r4, pc}
 123              	.L5:
 124 0036 C046     		.align	2
 125              	.L4:
 126 0038 93000F40 		.word	1074725011
 127 003c 94000F40 		.word	1074725012
 128 0040 92000F40 		.word	1074725010
 129              		.cfi_endproc
 130              	.LFE2:
 131              		.size	SPIM_Enable, .-SPIM_Enable
 132              		.section	.text.SPIM_DisableTxInt,"ax",%progbits
 133              		.align	2
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 8


 134              		.global	SPIM_DisableTxInt
 135              		.code	16
 136              		.thumb_func
 137              		.type	SPIM_DisableTxInt, %function
 138              	SPIM_DisableTxInt:
 139              	.LFB7:
 258:Generated_Source\PSoC4/SPIM.c **** 
 259:Generated_Source\PSoC4/SPIM.c **** 
 260:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 261:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableTxInt
 262:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 263:Generated_Source\PSoC4/SPIM.c **** *
 264:Generated_Source\PSoC4/SPIM.c **** * Summary:
 265:Generated_Source\PSoC4/SPIM.c **** *  Disable internal Tx interrupt generation.
 266:Generated_Source\PSoC4/SPIM.c **** *
 267:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 268:Generated_Source\PSoC4/SPIM.c **** *  None.
 269:Generated_Source\PSoC4/SPIM.c **** *
 270:Generated_Source\PSoC4/SPIM.c **** * Return:
 271:Generated_Source\PSoC4/SPIM.c **** *  None.
 272:Generated_Source\PSoC4/SPIM.c **** *
 273:Generated_Source\PSoC4/SPIM.c **** * Theory:
 274:Generated_Source\PSoC4/SPIM.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC4/SPIM.c **** *
 276:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 277:Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableTxInt(void) 
 278:Generated_Source\PSoC4/SPIM.c **** {
 140              		.loc 1 278 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 10B5     		push	{r4, lr}
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 4, -8
 147              		.cfi_offset 14, -4
 279:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable(SPIM_TX_ISR_NUMBER);
 148              		.loc 1 280 0
 149 0002 0120     		movs	r0, #1
 150 0004 FFF7FEFF 		bl	CyIntDisable
 151              	.LVL6:
 281:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 282:Generated_Source\PSoC4/SPIM.c **** }
 152              		.loc 1 282 0
 153              		@ sp needed
 154 0008 10BD     		pop	{r4, pc}
 155              		.cfi_endproc
 156              	.LFE7:
 157              		.size	SPIM_DisableTxInt, .-SPIM_DisableTxInt
 158 000a C046     		.section	.text.SPIM_DisableRxInt,"ax",%progbits
 159              		.align	2
 160              		.global	SPIM_DisableRxInt
 161              		.code	16
 162              		.thumb_func
 163              		.type	SPIM_DisableRxInt, %function
 164              	SPIM_DisableRxInt:
 165              	.LFB8:
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 9


 283:Generated_Source\PSoC4/SPIM.c **** 
 284:Generated_Source\PSoC4/SPIM.c **** 
 285:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 286:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableRxInt
 287:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 288:Generated_Source\PSoC4/SPIM.c **** *
 289:Generated_Source\PSoC4/SPIM.c **** * Summary:
 290:Generated_Source\PSoC4/SPIM.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC4/SPIM.c **** *
 292:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 293:Generated_Source\PSoC4/SPIM.c **** *  None.
 294:Generated_Source\PSoC4/SPIM.c **** *
 295:Generated_Source\PSoC4/SPIM.c **** * Return:
 296:Generated_Source\PSoC4/SPIM.c **** *  None.
 297:Generated_Source\PSoC4/SPIM.c **** *
 298:Generated_Source\PSoC4/SPIM.c **** * Theory:
 299:Generated_Source\PSoC4/SPIM.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:Generated_Source\PSoC4/SPIM.c **** *
 301:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 302:Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableRxInt(void) 
 303:Generated_Source\PSoC4/SPIM.c **** {
 166              		.loc 1 303 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170 0000 10B5     		push	{r4, lr}
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 4, -8
 173              		.cfi_offset 14, -4
 304:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable(SPIM_RX_ISR_NUMBER);
 174              		.loc 1 305 0
 175 0002 0020     		movs	r0, #0
 176 0004 FFF7FEFF 		bl	CyIntDisable
 177              	.LVL7:
 306:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC4/SPIM.c **** }
 178              		.loc 1 307 0
 179              		@ sp needed
 180 0008 10BD     		pop	{r4, pc}
 181              		.cfi_endproc
 182              	.LFE8:
 183              		.size	SPIM_DisableRxInt, .-SPIM_DisableRxInt
 184 000a C046     		.section	.text.SPIM_Stop,"ax",%progbits
 185              		.align	2
 186              		.global	SPIM_Stop
 187              		.code	16
 188              		.thumb_func
 189              		.type	SPIM_Stop, %function
 190              	SPIM_Stop:
 191              	.LFB4:
 193:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 192              		.loc 1 193 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 10


 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 4, -8
 199              		.cfi_offset 14, -4
 196:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 200              		.loc 1 196 0
 201 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 202              	.LVL8:
 197:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 203              		.loc 1 197 0
 204 0006 084A     		ldr	r2, .L9
 205 0008 1378     		ldrb	r3, [r2]
 206 000a 1021     		movs	r1, #16
 207 000c 8B43     		bics	r3, r1
 208 000e 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 209              		.loc 1 198 0
 210 0010 064A     		ldr	r2, .L9+4
 211 0012 1378     		ldrb	r3, [r2]
 212 0014 8B43     		bics	r3, r1
 213 0016 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC4/SPIM.c **** 
 214              		.loc 1 199 0
 215 0018 FFF7FEFF 		bl	CyExitCriticalSection
 216              	.LVL9:
 205:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableRxInt();
 217              		.loc 1 205 0
 218 001c FFF7FEFF 		bl	SPIM_DisableTxInt
 219              	.LVL10:
 206:Generated_Source\PSoC4/SPIM.c **** }
 220              		.loc 1 206 0
 221 0020 FFF7FEFF 		bl	SPIM_DisableRxInt
 222              	.LVL11:
 207:Generated_Source\PSoC4/SPIM.c **** 
 223              		.loc 1 207 0
 224              		@ sp needed
 225 0024 10BD     		pop	{r4, pc}
 226              	.L10:
 227 0026 C046     		.align	2
 228              	.L9:
 229 0028 94000F40 		.word	1074725012
 230 002c 92000F40 		.word	1074725010
 231              		.cfi_endproc
 232              	.LFE4:
 233              		.size	SPIM_Stop, .-SPIM_Stop
 234              		.section	.text.SPIM_SetTxInterruptMode,"ax",%progbits
 235              		.align	2
 236              		.global	SPIM_SetTxInterruptMode
 237              		.code	16
 238              		.thumb_func
 239              		.type	SPIM_SetTxInterruptMode, %function
 240              	SPIM_SetTxInterruptMode:
 241              	.LFB9:
 308:Generated_Source\PSoC4/SPIM.c **** 
 309:Generated_Source\PSoC4/SPIM.c **** 
 310:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 311:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetTxInterruptMode
 312:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 11


 313:Generated_Source\PSoC4/SPIM.c **** *
 314:Generated_Source\PSoC4/SPIM.c **** * Summary:
 315:Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC4/SPIM.c **** *
 317:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 318:Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC4/SPIM.c **** *  header file).
 320:Generated_Source\PSoC4/SPIM.c **** *
 321:Generated_Source\PSoC4/SPIM.c **** * Return:
 322:Generated_Source\PSoC4/SPIM.c **** *  None.
 323:Generated_Source\PSoC4/SPIM.c **** *
 324:Generated_Source\PSoC4/SPIM.c **** * Theory:
 325:Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC4/SPIM.c **** *
 327:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 328:Generated_Source\PSoC4/SPIM.c **** void SPIM_SetTxInterruptMode(uint8 intSrc) 
 329:Generated_Source\PSoC4/SPIM.c **** {
 242              		.loc 1 329 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 247              	.LVL12:
 330:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = intSrc;
 248              		.loc 1 330 0
 249 0000 014B     		ldr	r3, .L12
 250 0002 1870     		strb	r0, [r3]
 331:Generated_Source\PSoC4/SPIM.c **** }
 251              		.loc 1 331 0
 252              		@ sp needed
 253 0004 7047     		bx	lr
 254              	.L13:
 255 0006 C046     		.align	2
 256              	.L12:
 257 0008 84000F40 		.word	1074724996
 258              		.cfi_endproc
 259              	.LFE9:
 260              		.size	SPIM_SetTxInterruptMode, .-SPIM_SetTxInterruptMode
 261              		.section	.text.SPIM_SetRxInterruptMode,"ax",%progbits
 262              		.align	2
 263              		.global	SPIM_SetRxInterruptMode
 264              		.code	16
 265              		.thumb_func
 266              		.type	SPIM_SetRxInterruptMode, %function
 267              	SPIM_SetRxInterruptMode:
 268              	.LFB10:
 332:Generated_Source\PSoC4/SPIM.c **** 
 333:Generated_Source\PSoC4/SPIM.c **** 
 334:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 335:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetRxInterruptMode
 336:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 337:Generated_Source\PSoC4/SPIM.c **** *
 338:Generated_Source\PSoC4/SPIM.c **** * Summary:
 339:Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC4/SPIM.c **** *
 341:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 342:Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 12


 343:Generated_Source\PSoC4/SPIM.c **** *  header file).
 344:Generated_Source\PSoC4/SPIM.c **** *
 345:Generated_Source\PSoC4/SPIM.c **** * Return:
 346:Generated_Source\PSoC4/SPIM.c **** *  None.
 347:Generated_Source\PSoC4/SPIM.c **** *
 348:Generated_Source\PSoC4/SPIM.c **** * Theory:
 349:Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC4/SPIM.c **** *
 351:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 352:Generated_Source\PSoC4/SPIM.c **** void SPIM_SetRxInterruptMode(uint8 intSrc) 
 353:Generated_Source\PSoC4/SPIM.c **** {
 269              		.loc 1 353 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              		@ link register save eliminated.
 274              	.LVL13:
 354:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  = intSrc;
 275              		.loc 1 354 0
 276 0000 014B     		ldr	r3, .L15
 277 0002 1870     		strb	r0, [r3]
 355:Generated_Source\PSoC4/SPIM.c **** }
 278              		.loc 1 355 0
 279              		@ sp needed
 280 0004 7047     		bx	lr
 281              	.L16:
 282 0006 C046     		.align	2
 283              	.L15:
 284 0008 82000F40 		.word	1074724994
 285              		.cfi_endproc
 286              	.LFE10:
 287              		.size	SPIM_SetRxInterruptMode, .-SPIM_SetRxInterruptMode
 288              		.section	.text.SPIM_ReadTxStatus,"ax",%progbits
 289              		.align	2
 290              		.global	SPIM_ReadTxStatus
 291              		.code	16
 292              		.thumb_func
 293              		.type	SPIM_ReadTxStatus, %function
 294              	SPIM_ReadTxStatus:
 295              	.LFB11:
 356:Generated_Source\PSoC4/SPIM.c **** 
 357:Generated_Source\PSoC4/SPIM.c **** 
 358:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 359:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadTxStatus
 360:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 361:Generated_Source\PSoC4/SPIM.c **** *
 362:Generated_Source\PSoC4/SPIM.c **** * Summary:
 363:Generated_Source\PSoC4/SPIM.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC4/SPIM.c **** *
 365:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 366:Generated_Source\PSoC4/SPIM.c **** *  None.
 367:Generated_Source\PSoC4/SPIM.c **** *
 368:Generated_Source\PSoC4/SPIM.c **** * Return:
 369:Generated_Source\PSoC4/SPIM.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC4/SPIM.c **** *
 371:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 372:Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatusTx - used to store in software status register,
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 13


 373:Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC4/SPIM.c **** *
 375:Generated_Source\PSoC4/SPIM.c **** * Theory:
 376:Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC4/SPIM.c **** *  detection and flow control.
 378:Generated_Source\PSoC4/SPIM.c **** *
 379:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 380:Generated_Source\PSoC4/SPIM.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC4/SPIM.c **** *
 382:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 383:Generated_Source\PSoC4/SPIM.c **** *  No.
 384:Generated_Source\PSoC4/SPIM.c **** *
 385:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 386:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadTxStatus(void) 
 387:Generated_Source\PSoC4/SPIM.c **** {
 296              		.loc 1 387 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300 0000 10B5     		push	{r4, lr}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 4, -8
 303              		.cfi_offset 14, -4
 388:Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC4/SPIM.c **** 
 390:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 304              		.loc 1 392 0
 305 0002 FFF7FEFF 		bl	SPIM_DisableTxInt
 306              	.LVL14:
 393:Generated_Source\PSoC4/SPIM.c **** 
 394:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 307              		.loc 1 394 0
 308 0006 064B     		ldr	r3, .L18
 309 0008 1978     		ldrb	r1, [r3]
 310 000a 064A     		ldr	r2, .L18+4
 311 000c 1478     		ldrb	r4, [r2]
 312 000e 0923     		movs	r3, #9
 313 0010 1C40     		ands	r4, r3
 314 0012 0C43     		orrs	r4, r1
 315              	.LVL15:
 395:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = 0u;
 316              		.loc 1 395 0
 317 0014 0023     		movs	r3, #0
 318 0016 1370     		strb	r3, [r2]
 396:Generated_Source\PSoC4/SPIM.c **** 
 397:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 319              		.loc 1 397 0
 320 0018 FFF7FEFF 		bl	SPIM_EnableTxInt
 321              	.LVL16:
 398:Generated_Source\PSoC4/SPIM.c **** 
 399:Generated_Source\PSoC4/SPIM.c ****     #else
 400:Generated_Source\PSoC4/SPIM.c **** 
 401:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_TX_STATUS_REG;
 402:Generated_Source\PSoC4/SPIM.c **** 
 403:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 14


 404:Generated_Source\PSoC4/SPIM.c **** 
 405:Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
 406:Generated_Source\PSoC4/SPIM.c **** }
 322              		.loc 1 406 0
 323 001c 2000     		movs	r0, r4
 324              		@ sp needed
 325              	.LVL17:
 326 001e 10BD     		pop	{r4, pc}
 327              	.L19:
 328              		.align	2
 329              	.L18:
 330 0020 64000F40 		.word	1074724964
 331 0024 00000000 		.word	SPIM_swStatusTx
 332              		.cfi_endproc
 333              	.LFE11:
 334              		.size	SPIM_ReadTxStatus, .-SPIM_ReadTxStatus
 335              		.section	.text.SPIM_ReadRxStatus,"ax",%progbits
 336              		.align	2
 337              		.global	SPIM_ReadRxStatus
 338              		.code	16
 339              		.thumb_func
 340              		.type	SPIM_ReadRxStatus, %function
 341              	SPIM_ReadRxStatus:
 342              	.LFB12:
 407:Generated_Source\PSoC4/SPIM.c **** 
 408:Generated_Source\PSoC4/SPIM.c **** 
 409:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadRxStatus
 411:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 412:Generated_Source\PSoC4/SPIM.c **** *
 413:Generated_Source\PSoC4/SPIM.c **** * Summary:
 414:Generated_Source\PSoC4/SPIM.c **** *  Read the Rx status register for the component.
 415:Generated_Source\PSoC4/SPIM.c **** *
 416:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 417:Generated_Source\PSoC4/SPIM.c **** *  None.
 418:Generated_Source\PSoC4/SPIM.c **** *
 419:Generated_Source\PSoC4/SPIM.c **** * Return:
 420:Generated_Source\PSoC4/SPIM.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC4/SPIM.c **** *
 422:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 423:Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC4/SPIM.c **** *
 426:Generated_Source\PSoC4/SPIM.c **** * Theory:
 427:Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC4/SPIM.c **** *  detection and flow control.
 429:Generated_Source\PSoC4/SPIM.c **** *
 430:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 431:Generated_Source\PSoC4/SPIM.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC4/SPIM.c **** *
 433:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 434:Generated_Source\PSoC4/SPIM.c **** *  No.
 435:Generated_Source\PSoC4/SPIM.c **** *
 436:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 437:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadRxStatus(void) 
 438:Generated_Source\PSoC4/SPIM.c **** {
 343              		.loc 1 438 0
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 15


 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347 0000 10B5     		push	{r4, lr}
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 4, -8
 350              		.cfi_offset 14, -4
 439:Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
 440:Generated_Source\PSoC4/SPIM.c **** 
 441:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 442:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 351              		.loc 1 443 0
 352 0002 FFF7FEFF 		bl	SPIM_DisableRxInt
 353              	.LVL18:
 444:Generated_Source\PSoC4/SPIM.c **** 
 445:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
 354              		.loc 1 445 0
 355 0006 064B     		ldr	r3, .L21
 356 0008 1978     		ldrb	r1, [r3]
 357 000a 064A     		ldr	r2, .L21+4
 358 000c 1478     		ldrb	r4, [r2]
 359 000e 4023     		movs	r3, #64
 360 0010 1C40     		ands	r4, r3
 361 0012 0C43     		orrs	r4, r1
 362              	.LVL19:
 446:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusRx = 0u;
 363              		.loc 1 446 0
 364 0014 0023     		movs	r3, #0
 365 0016 1370     		strb	r3, [r2]
 447:Generated_Source\PSoC4/SPIM.c **** 
 448:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 366              		.loc 1 448 0
 367 0018 FFF7FEFF 		bl	SPIM_EnableRxInt
 368              	.LVL20:
 449:Generated_Source\PSoC4/SPIM.c **** 
 450:Generated_Source\PSoC4/SPIM.c ****     #else
 451:Generated_Source\PSoC4/SPIM.c **** 
 452:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_RX_STATUS_REG;
 453:Generated_Source\PSoC4/SPIM.c **** 
 454:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC4/SPIM.c **** 
 456:Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
 457:Generated_Source\PSoC4/SPIM.c **** }
 369              		.loc 1 457 0
 370 001c 2000     		movs	r0, r4
 371              		@ sp needed
 372              	.LVL21:
 373 001e 10BD     		pop	{r4, pc}
 374              	.L22:
 375              		.align	2
 376              	.L21:
 377 0020 62000F40 		.word	1074724962
 378 0024 00000000 		.word	SPIM_swStatusRx
 379              		.cfi_endproc
 380              	.LFE12:
 381              		.size	SPIM_ReadRxStatus, .-SPIM_ReadRxStatus
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 16


 382              		.section	.text.SPIM_WriteTxData,"ax",%progbits
 383              		.align	2
 384              		.global	SPIM_WriteTxData
 385              		.code	16
 386              		.thumb_func
 387              		.type	SPIM_WriteTxData, %function
 388              	SPIM_WriteTxData:
 389              	.LFB13:
 458:Generated_Source\PSoC4/SPIM.c **** 
 459:Generated_Source\PSoC4/SPIM.c **** 
 460:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 461:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_WriteTxData
 462:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 463:Generated_Source\PSoC4/SPIM.c **** *
 464:Generated_Source\PSoC4/SPIM.c **** * Summary:
 465:Generated_Source\PSoC4/SPIM.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC4/SPIM.c **** *
 467:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 468:Generated_Source\PSoC4/SPIM.c **** *  txDataByte: The data value to send across the SPI.
 469:Generated_Source\PSoC4/SPIM.c **** *
 470:Generated_Source\PSoC4/SPIM.c **** * Return:
 471:Generated_Source\PSoC4/SPIM.c **** *  None.
 472:Generated_Source\PSoC4/SPIM.c **** *
 473:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 474:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC4/SPIM.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBuffer[SPIM_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC4/SPIM.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:Generated_Source\PSoC4/SPIM.c **** *
 482:Generated_Source\PSoC4/SPIM.c **** * Theory:
 483:Generated_Source\PSoC4/SPIM.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC4/SPIM.c **** *
 485:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 486:Generated_Source\PSoC4/SPIM.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC4/SPIM.c **** *  the next byte will be appended to the transfer with no time between
 488:Generated_Source\PSoC4/SPIM.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC4/SPIM.c **** *
 490:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 491:Generated_Source\PSoC4/SPIM.c **** *  No.
 492:Generated_Source\PSoC4/SPIM.c **** *
 493:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 494:Generated_Source\PSoC4/SPIM.c **** void SPIM_WriteTxData(uint8 txData) 
 495:Generated_Source\PSoC4/SPIM.c **** {
 390              		.loc 1 495 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394              	.LVL22:
 395 0000 10B5     		push	{r4, lr}
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 4, -8
 398              		.cfi_offset 14, -4
 399 0002 0400     		movs	r4, r0
 400              	.L25:
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 17


 496:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC4/SPIM.c **** 
 498:Generated_Source\PSoC4/SPIM.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC4/SPIM.c ****         uint8 tmpTxBufferRead;
 500:Generated_Source\PSoC4/SPIM.c **** 
 501:Generated_Source\PSoC4/SPIM.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:Generated_Source\PSoC4/SPIM.c ****         do
 503:Generated_Source\PSoC4/SPIM.c ****         {
 504:Generated_Source\PSoC4/SPIM.c ****             tmpTxBufferRead = SPIM_txBufferRead;
 401              		.loc 1 504 0
 402 0004 2B4B     		ldr	r3, .L32
 403 0006 1B78     		ldrb	r3, [r3]
 404 0008 DBB2     		uxtb	r3, r3
 405              	.LVL23:
 505:Generated_Source\PSoC4/SPIM.c ****             if(0u == tmpTxBufferRead)
 406              		.loc 1 505 0
 407 000a 002B     		cmp	r3, #0
 408 000c 02D0     		beq	.L31
 506:Generated_Source\PSoC4/SPIM.c ****             {
 507:Generated_Source\PSoC4/SPIM.c ****                 tmpTxBufferRead = (SPIM_TX_BUFFER_SIZE - 1u);
 508:Generated_Source\PSoC4/SPIM.c ****             }
 509:Generated_Source\PSoC4/SPIM.c ****             else
 510:Generated_Source\PSoC4/SPIM.c ****             {
 511:Generated_Source\PSoC4/SPIM.c ****                 tmpTxBufferRead--;
 409              		.loc 1 511 0
 410 000e 013B     		subs	r3, r3, #1
 411              	.LVL24:
 412 0010 DBB2     		uxtb	r3, r3
 413              	.LVL25:
 414 0012 00E0     		b	.L24
 415              	.L31:
 507:Generated_Source\PSoC4/SPIM.c ****             }
 416              		.loc 1 507 0
 417 0014 0F23     		movs	r3, #15
 418              	.LVL26:
 419              	.L24:
 512:Generated_Source\PSoC4/SPIM.c ****             }
 513:Generated_Source\PSoC4/SPIM.c **** 
 514:Generated_Source\PSoC4/SPIM.c ****         }while(tmpTxBufferRead == SPIM_txBufferWrite);
 420              		.loc 1 514 0
 421 0016 284A     		ldr	r2, .L32+4
 422 0018 1278     		ldrb	r2, [r2]
 423 001a D2B2     		uxtb	r2, r2
 424 001c 9342     		cmp	r3, r2
 425 001e F1D0     		beq	.L25
 515:Generated_Source\PSoC4/SPIM.c **** 
 516:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 426              		.loc 1 517 0
 427 0020 FFF7FEFF 		bl	SPIM_DisableTxInt
 428              	.LVL27:
 518:Generated_Source\PSoC4/SPIM.c **** 
 519:Generated_Source\PSoC4/SPIM.c ****         tempStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 429              		.loc 1 519 0
 430 0024 254B     		ldr	r3, .L32+8
 431 0026 1878     		ldrb	r0, [r3]
 432 0028 2549     		ldr	r1, .L32+12
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 18


 433 002a 0B78     		ldrb	r3, [r1]
 434 002c 0922     		movs	r2, #9
 435 002e 1340     		ands	r3, r2
 436 0030 0343     		orrs	r3, r0
 437              	.LVL28:
 520:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = tempStatus;
 438              		.loc 1 520 0
 439 0032 0B70     		strb	r3, [r1]
 521:Generated_Source\PSoC4/SPIM.c **** 
 522:Generated_Source\PSoC4/SPIM.c **** 
 523:Generated_Source\PSoC4/SPIM.c ****         if((SPIM_txBufferRead == SPIM_txBufferWrite) &&
 440              		.loc 1 523 0
 441 0034 1F4B     		ldr	r3, .L32
 442              	.LVL29:
 443 0036 1A78     		ldrb	r2, [r3]
 444 0038 D2B2     		uxtb	r2, r2
 445 003a 1F4B     		ldr	r3, .L32+4
 446 003c 1B78     		ldrb	r3, [r3]
 447 003e DBB2     		uxtb	r3, r3
 448 0040 9A42     		cmp	r2, r3
 449 0042 05D1     		bne	.L26
 524:Generated_Source\PSoC4/SPIM.c ****            (0u != (SPIM_swStatusTx & SPIM_STS_TX_FIFO_NOT_FULL)))
 450              		.loc 1 524 0 discriminator 1
 451 0044 0B78     		ldrb	r3, [r1]
 523:Generated_Source\PSoC4/SPIM.c ****            (0u != (SPIM_swStatusTx & SPIM_STS_TX_FIFO_NOT_FULL)))
 452              		.loc 1 523 0 discriminator 1
 453 0046 5B07     		lsls	r3, r3, #29
 454 0048 02D5     		bpl	.L26
 525:Generated_Source\PSoC4/SPIM.c ****         {
 526:Generated_Source\PSoC4/SPIM.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC4/SPIM.c ****             CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 455              		.loc 1 527 0
 456 004a 1E4B     		ldr	r3, .L32+16
 457 004c 1C70     		strb	r4, [r3]
 458              	.LVL30:
 459 004e 2DE0     		b	.L27
 460              	.LVL31:
 461              	.L26:
 528:Generated_Source\PSoC4/SPIM.c ****         }
 529:Generated_Source\PSoC4/SPIM.c ****         else
 530:Generated_Source\PSoC4/SPIM.c ****         {
 531:Generated_Source\PSoC4/SPIM.c ****             /* Add to the TX software buffer */
 532:Generated_Source\PSoC4/SPIM.c ****             SPIM_txBufferWrite++;
 462              		.loc 1 532 0
 463 0050 194A     		ldr	r2, .L32+4
 464 0052 1378     		ldrb	r3, [r2]
 465 0054 0133     		adds	r3, r3, #1
 466 0056 DBB2     		uxtb	r3, r3
 467 0058 1370     		strb	r3, [r2]
 468              	.LVL32:
 533:Generated_Source\PSoC4/SPIM.c ****             if(SPIM_txBufferWrite >= SPIM_TX_BUFFER_SIZE)
 469              		.loc 1 533 0
 470 005a 1378     		ldrb	r3, [r2]
 471 005c DBB2     		uxtb	r3, r3
 472 005e 0F2B     		cmp	r3, #15
 473 0060 02D9     		bls	.L28
 534:Generated_Source\PSoC4/SPIM.c ****             {
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 19


 535:Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferWrite = 0u;
 474              		.loc 1 535 0
 475 0062 0022     		movs	r2, #0
 476 0064 144B     		ldr	r3, .L32+4
 477 0066 1A70     		strb	r2, [r3]
 478              	.L28:
 536:Generated_Source\PSoC4/SPIM.c ****             }
 537:Generated_Source\PSoC4/SPIM.c **** 
 538:Generated_Source\PSoC4/SPIM.c ****             if(SPIM_txBufferWrite == SPIM_txBufferRead)
 479              		.loc 1 538 0
 480 0068 134B     		ldr	r3, .L32+4
 481 006a 1A78     		ldrb	r2, [r3]
 482 006c D2B2     		uxtb	r2, r2
 483 006e 114B     		ldr	r3, .L32
 484 0070 1B78     		ldrb	r3, [r3]
 485 0072 DBB2     		uxtb	r3, r3
 486 0074 9A42     		cmp	r2, r3
 487 0076 0ED1     		bne	.L29
 539:Generated_Source\PSoC4/SPIM.c ****             {
 540:Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferRead++;
 488              		.loc 1 540 0
 489 0078 0E4A     		ldr	r2, .L32
 490 007a 1378     		ldrb	r3, [r2]
 491 007c 0133     		adds	r3, r3, #1
 492 007e DBB2     		uxtb	r3, r3
 493 0080 1370     		strb	r3, [r2]
 541:Generated_Source\PSoC4/SPIM.c ****                 if(SPIM_txBufferRead >= SPIM_TX_BUFFER_SIZE)
 494              		.loc 1 541 0
 495 0082 1378     		ldrb	r3, [r2]
 496 0084 DBB2     		uxtb	r3, r3
 497 0086 0F2B     		cmp	r3, #15
 498 0088 02D9     		bls	.L30
 542:Generated_Source\PSoC4/SPIM.c ****                 {
 543:Generated_Source\PSoC4/SPIM.c ****                     SPIM_txBufferRead = 0u;
 499              		.loc 1 543 0
 500 008a 0022     		movs	r2, #0
 501 008c 094B     		ldr	r3, .L32
 502 008e 1A70     		strb	r2, [r3]
 503              	.L30:
 544:Generated_Source\PSoC4/SPIM.c ****                 }
 545:Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferFull = 1u;
 504              		.loc 1 545 0
 505 0090 0122     		movs	r2, #1
 506 0092 0D4B     		ldr	r3, .L32+20
 507 0094 1A70     		strb	r2, [r3]
 508              	.L29:
 546:Generated_Source\PSoC4/SPIM.c ****             }
 547:Generated_Source\PSoC4/SPIM.c **** 
 548:Generated_Source\PSoC4/SPIM.c ****             SPIM_txBuffer[SPIM_txBufferWrite] = txData;
 509              		.loc 1 548 0
 510 0096 084B     		ldr	r3, .L32+4
 511 0098 1B78     		ldrb	r3, [r3]
 512 009a DBB2     		uxtb	r3, r3
 513 009c 0B4A     		ldr	r2, .L32+24
 514 009e D454     		strb	r4, [r2, r3]
 549:Generated_Source\PSoC4/SPIM.c **** 
 550:Generated_Source\PSoC4/SPIM.c ****             SPIM_TX_STATUS_MASK_REG |= SPIM_STS_TX_FIFO_NOT_FULL;
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 20


 515              		.loc 1 550 0
 516 00a0 0B4A     		ldr	r2, .L32+28
 517 00a2 1178     		ldrb	r1, [r2]
 518 00a4 0423     		movs	r3, #4
 519 00a6 0B43     		orrs	r3, r1
 520 00a8 DBB2     		uxtb	r3, r3
 521 00aa 1370     		strb	r3, [r2]
 522              	.L27:
 551:Generated_Source\PSoC4/SPIM.c ****         }
 552:Generated_Source\PSoC4/SPIM.c **** 
 553:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 523              		.loc 1 553 0
 524 00ac FFF7FEFF 		bl	SPIM_EnableTxInt
 525              	.LVL33:
 554:Generated_Source\PSoC4/SPIM.c **** 
 555:Generated_Source\PSoC4/SPIM.c ****     #else
 556:Generated_Source\PSoC4/SPIM.c ****         /* Wait until TX FIFO has a place */
 557:Generated_Source\PSoC4/SPIM.c ****         while(0u == (SPIM_TX_STATUS_REG & SPIM_STS_TX_FIFO_NOT_FULL))
 558:Generated_Source\PSoC4/SPIM.c ****         {
 559:Generated_Source\PSoC4/SPIM.c ****         }
 560:Generated_Source\PSoC4/SPIM.c **** 
 561:Generated_Source\PSoC4/SPIM.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC4/SPIM.c ****         CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 563:Generated_Source\PSoC4/SPIM.c **** 
 564:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC4/SPIM.c **** }
 526              		.loc 1 565 0
 527              		@ sp needed
 528 00b0 10BD     		pop	{r4, pc}
 529              	.L33:
 530 00b2 C046     		.align	2
 531              	.L32:
 532 00b4 00000000 		.word	SPIM_txBufferRead
 533 00b8 00000000 		.word	SPIM_txBufferWrite
 534 00bc 64000F40 		.word	1074724964
 535 00c0 00000000 		.word	SPIM_swStatusTx
 536 00c4 43000F40 		.word	1074724931
 537 00c8 00000000 		.word	SPIM_txBufferFull
 538 00cc 00000000 		.word	SPIM_txBuffer
 539 00d0 84000F40 		.word	1074724996
 540              		.cfi_endproc
 541              	.LFE13:
 542              		.size	SPIM_WriteTxData, .-SPIM_WriteTxData
 543              		.section	.text.SPIM_ReadRxData,"ax",%progbits
 544              		.align	2
 545              		.global	SPIM_ReadRxData
 546              		.code	16
 547              		.thumb_func
 548              		.type	SPIM_ReadRxData, %function
 549              	SPIM_ReadRxData:
 550              	.LFB14:
 566:Generated_Source\PSoC4/SPIM.c **** 
 567:Generated_Source\PSoC4/SPIM.c **** 
 568:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 569:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadRxData
 570:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 571:Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 21


 572:Generated_Source\PSoC4/SPIM.c **** * Summary:
 573:Generated_Source\PSoC4/SPIM.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC4/SPIM.c **** *
 575:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 576:Generated_Source\PSoC4/SPIM.c **** *  None.
 577:Generated_Source\PSoC4/SPIM.c **** *
 578:Generated_Source\PSoC4/SPIM.c **** * Return:
 579:Generated_Source\PSoC4/SPIM.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC4/SPIM.c **** *
 581:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 582:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 583:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 585:Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer, modified every function
 586:Generated_Source\PSoC4/SPIM.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC4/SPIM.c **** *  received data.
 589:Generated_Source\PSoC4/SPIM.c **** *
 590:Generated_Source\PSoC4/SPIM.c **** * Theory:
 591:Generated_Source\PSoC4/SPIM.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC4/SPIM.c **** *
 593:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 594:Generated_Source\PSoC4/SPIM.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC4/SPIM.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:Generated_Source\PSoC4/SPIM.c **** *  ReadByte() function.
 597:Generated_Source\PSoC4/SPIM.c **** *
 598:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 599:Generated_Source\PSoC4/SPIM.c **** *  No.
 600:Generated_Source\PSoC4/SPIM.c **** *
 601:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 602:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadRxData(void) 
 603:Generated_Source\PSoC4/SPIM.c **** {
 551              		.loc 1 603 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555 0000 10B5     		push	{r4, lr}
 556              		.cfi_def_cfa_offset 8
 557              		.cfi_offset 4, -8
 558              		.cfi_offset 14, -4
 604:Generated_Source\PSoC4/SPIM.c ****     uint8 rxData;
 605:Generated_Source\PSoC4/SPIM.c **** 
 606:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC4/SPIM.c **** 
 608:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 559              		.loc 1 609 0
 560 0002 FFF7FEFF 		bl	SPIM_DisableRxInt
 561              	.LVL34:
 610:Generated_Source\PSoC4/SPIM.c **** 
 611:Generated_Source\PSoC4/SPIM.c ****         if(SPIM_rxBufferRead != SPIM_rxBufferWrite)
 562              		.loc 1 611 0
 563 0006 134B     		ldr	r3, .L37
 564 0008 1A78     		ldrb	r2, [r3]
 565 000a D2B2     		uxtb	r2, r2
 566 000c 124B     		ldr	r3, .L37+4
 567 000e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 22


 568 0010 DBB2     		uxtb	r3, r3
 569 0012 9A42     		cmp	r2, r3
 570 0014 13D0     		beq	.L35
 612:Generated_Source\PSoC4/SPIM.c ****         {
 613:Generated_Source\PSoC4/SPIM.c ****             if(0u == SPIM_rxBufferFull)
 571              		.loc 1 613 0
 572 0016 114B     		ldr	r3, .L37+8
 573 0018 1B78     		ldrb	r3, [r3]
 574 001a 002B     		cmp	r3, #0
 575 001c 0CD1     		bne	.L36
 614:Generated_Source\PSoC4/SPIM.c ****             {
 615:Generated_Source\PSoC4/SPIM.c ****                 SPIM_rxBufferRead++;
 576              		.loc 1 615 0
 577 001e 0D4A     		ldr	r2, .L37
 578 0020 1378     		ldrb	r3, [r2]
 579 0022 0133     		adds	r3, r3, #1
 580 0024 DBB2     		uxtb	r3, r3
 581 0026 1370     		strb	r3, [r2]
 616:Generated_Source\PSoC4/SPIM.c ****                 if(SPIM_rxBufferRead >= SPIM_RX_BUFFER_SIZE)
 582              		.loc 1 616 0
 583 0028 1378     		ldrb	r3, [r2]
 584 002a DBB2     		uxtb	r3, r3
 585 002c 1D2B     		cmp	r3, #29
 586 002e 06D9     		bls	.L35
 617:Generated_Source\PSoC4/SPIM.c ****                 {
 618:Generated_Source\PSoC4/SPIM.c ****                     SPIM_rxBufferRead = 0u;
 587              		.loc 1 618 0
 588 0030 0022     		movs	r2, #0
 589 0032 084B     		ldr	r3, .L37
 590 0034 1A70     		strb	r2, [r3]
 591 0036 02E0     		b	.L35
 592              	.L36:
 619:Generated_Source\PSoC4/SPIM.c ****                 }
 620:Generated_Source\PSoC4/SPIM.c ****             }
 621:Generated_Source\PSoC4/SPIM.c ****             else
 622:Generated_Source\PSoC4/SPIM.c ****             {
 623:Generated_Source\PSoC4/SPIM.c ****                 SPIM_rxBufferFull = 0u;
 593              		.loc 1 623 0
 594 0038 0022     		movs	r2, #0
 595 003a 084B     		ldr	r3, .L37+8
 596 003c 1A70     		strb	r2, [r3]
 597              	.L35:
 624:Generated_Source\PSoC4/SPIM.c ****             }
 625:Generated_Source\PSoC4/SPIM.c ****         }
 626:Generated_Source\PSoC4/SPIM.c **** 
 627:Generated_Source\PSoC4/SPIM.c ****         rxData = SPIM_rxBuffer[SPIM_rxBufferRead];
 598              		.loc 1 627 0
 599 003e 054B     		ldr	r3, .L37
 600 0040 1B78     		ldrb	r3, [r3]
 601 0042 DBB2     		uxtb	r3, r3
 602 0044 064A     		ldr	r2, .L37+12
 603 0046 D45C     		ldrb	r4, [r2, r3]
 604 0048 E4B2     		uxtb	r4, r4
 605              	.LVL35:
 628:Generated_Source\PSoC4/SPIM.c **** 
 629:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 606              		.loc 1 629 0
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 23


 607 004a FFF7FEFF 		bl	SPIM_EnableRxInt
 608              	.LVL36:
 630:Generated_Source\PSoC4/SPIM.c **** 
 631:Generated_Source\PSoC4/SPIM.c ****     #else
 632:Generated_Source\PSoC4/SPIM.c **** 
 633:Generated_Source\PSoC4/SPIM.c ****         rxData = CY_GET_REG8(SPIM_RXDATA_PTR);
 634:Generated_Source\PSoC4/SPIM.c **** 
 635:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC4/SPIM.c **** 
 637:Generated_Source\PSoC4/SPIM.c ****     return(rxData);
 638:Generated_Source\PSoC4/SPIM.c **** }
 609              		.loc 1 638 0
 610 004e 2000     		movs	r0, r4
 611              		@ sp needed
 612              	.LVL37:
 613 0050 10BD     		pop	{r4, pc}
 614              	.L38:
 615 0052 C046     		.align	2
 616              	.L37:
 617 0054 00000000 		.word	SPIM_rxBufferRead
 618 0058 00000000 		.word	SPIM_rxBufferWrite
 619 005c 00000000 		.word	SPIM_rxBufferFull
 620 0060 00000000 		.word	SPIM_rxBuffer
 621              		.cfi_endproc
 622              	.LFE14:
 623              		.size	SPIM_ReadRxData, .-SPIM_ReadRxData
 624              		.section	.text.SPIM_GetRxBufferSize,"ax",%progbits
 625              		.align	2
 626              		.global	SPIM_GetRxBufferSize
 627              		.code	16
 628              		.thumb_func
 629              		.type	SPIM_GetRxBufferSize, %function
 630              	SPIM_GetRxBufferSize:
 631              	.LFB15:
 639:Generated_Source\PSoC4/SPIM.c **** 
 640:Generated_Source\PSoC4/SPIM.c **** 
 641:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_GetRxBufferSize
 643:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 644:Generated_Source\PSoC4/SPIM.c **** *
 645:Generated_Source\PSoC4/SPIM.c **** * Summary:
 646:Generated_Source\PSoC4/SPIM.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:Generated_Source\PSoC4/SPIM.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:Generated_Source\PSoC4/SPIM.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC4/SPIM.c **** *
 650:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 651:Generated_Source\PSoC4/SPIM.c **** *  None.
 652:Generated_Source\PSoC4/SPIM.c **** *
 653:Generated_Source\PSoC4/SPIM.c **** * Return:
 654:Generated_Source\PSoC4/SPIM.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:Generated_Source\PSoC4/SPIM.c **** *
 656:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 657:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer.
 661:Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 24


 662:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 663:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC4/SPIM.c **** *
 665:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 666:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_GetRxBufferSize(void) 
 667:Generated_Source\PSoC4/SPIM.c **** {
 632              		.loc 1 667 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636 0000 10B5     		push	{r4, lr}
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 4, -8
 639              		.cfi_offset 14, -4
 668:Generated_Source\PSoC4/SPIM.c ****     uint8 size;
 669:Generated_Source\PSoC4/SPIM.c **** 
 670:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC4/SPIM.c **** 
 672:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 640              		.loc 1 673 0
 641 0002 FFF7FEFF 		bl	SPIM_DisableRxInt
 642              	.LVL38:
 674:Generated_Source\PSoC4/SPIM.c **** 
 675:Generated_Source\PSoC4/SPIM.c ****         if(SPIM_rxBufferRead == SPIM_rxBufferWrite)
 643              		.loc 1 675 0
 644 0006 124B     		ldr	r3, .L43
 645 0008 1A78     		ldrb	r2, [r3]
 646 000a D2B2     		uxtb	r2, r2
 647 000c 114B     		ldr	r3, .L43+4
 648 000e 1B78     		ldrb	r3, [r3]
 649 0010 DBB2     		uxtb	r3, r3
 650 0012 9A42     		cmp	r2, r3
 651 0014 16D0     		beq	.L42
 676:Generated_Source\PSoC4/SPIM.c ****         {
 677:Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 678:Generated_Source\PSoC4/SPIM.c ****         }
 679:Generated_Source\PSoC4/SPIM.c ****         else if(SPIM_rxBufferRead < SPIM_rxBufferWrite)
 652              		.loc 1 679 0
 653 0016 0E4B     		ldr	r3, .L43
 654 0018 1A78     		ldrb	r2, [r3]
 655 001a D2B2     		uxtb	r2, r2
 656 001c 0D4B     		ldr	r3, .L43+4
 657 001e 1B78     		ldrb	r3, [r3]
 658 0020 DBB2     		uxtb	r3, r3
 659 0022 9A42     		cmp	r2, r3
 660 0024 06D2     		bcs	.L41
 680:Generated_Source\PSoC4/SPIM.c ****         {
 681:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_rxBufferWrite - SPIM_rxBufferRead);
 661              		.loc 1 681 0
 662 0026 0B4B     		ldr	r3, .L43+4
 663 0028 1B78     		ldrb	r3, [r3]
 664 002a 094A     		ldr	r2, .L43
 665 002c 1478     		ldrb	r4, [r2]
 666 002e 1C1B     		subs	r4, r3, r4
 667 0030 E4B2     		uxtb	r4, r4
 668              	.LVL39:
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 25


 669 0032 08E0     		b	.L40
 670              	.LVL40:
 671              	.L41:
 682:Generated_Source\PSoC4/SPIM.c ****         }
 683:Generated_Source\PSoC4/SPIM.c ****         else
 684:Generated_Source\PSoC4/SPIM.c ****         {
 685:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_RX_BUFFER_SIZE - SPIM_rxBufferRead) + SPIM_rxBufferWrite;
 672              		.loc 1 685 0
 673 0034 074B     		ldr	r3, .L43+4
 674 0036 1B78     		ldrb	r3, [r3]
 675 0038 054A     		ldr	r2, .L43
 676 003a 1478     		ldrb	r4, [r2]
 677 003c 1C1B     		subs	r4, r3, r4
 678 003e 1E34     		adds	r4, r4, #30
 679 0040 E4B2     		uxtb	r4, r4
 680              	.LVL41:
 681 0042 00E0     		b	.L40
 682              	.LVL42:
 683              	.L42:
 677:Generated_Source\PSoC4/SPIM.c ****         }
 684              		.loc 1 677 0
 685 0044 0024     		movs	r4, #0
 686              	.L40:
 687              	.LVL43:
 686:Generated_Source\PSoC4/SPIM.c ****         }
 687:Generated_Source\PSoC4/SPIM.c **** 
 688:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 688              		.loc 1 688 0
 689 0046 FFF7FEFF 		bl	SPIM_EnableRxInt
 690              	.LVL44:
 689:Generated_Source\PSoC4/SPIM.c **** 
 690:Generated_Source\PSoC4/SPIM.c ****     #else
 691:Generated_Source\PSoC4/SPIM.c **** 
 692:Generated_Source\PSoC4/SPIM.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC4/SPIM.c ****         size = (0u != (SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 694:Generated_Source\PSoC4/SPIM.c **** 
 695:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC4/SPIM.c **** 
 697:Generated_Source\PSoC4/SPIM.c ****     return(size);
 698:Generated_Source\PSoC4/SPIM.c **** }
 691              		.loc 1 698 0
 692 004a 2000     		movs	r0, r4
 693              		@ sp needed
 694              	.LVL45:
 695 004c 10BD     		pop	{r4, pc}
 696              	.L44:
 697 004e C046     		.align	2
 698              	.L43:
 699 0050 00000000 		.word	SPIM_rxBufferRead
 700 0054 00000000 		.word	SPIM_rxBufferWrite
 701              		.cfi_endproc
 702              	.LFE15:
 703              		.size	SPIM_GetRxBufferSize, .-SPIM_GetRxBufferSize
 704              		.section	.text.SPIM_GetTxBufferSize,"ax",%progbits
 705              		.align	2
 706              		.global	SPIM_GetTxBufferSize
 707              		.code	16
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 26


 708              		.thumb_func
 709              		.type	SPIM_GetTxBufferSize, %function
 710              	SPIM_GetTxBufferSize:
 711              	.LFB16:
 699:Generated_Source\PSoC4/SPIM.c **** 
 700:Generated_Source\PSoC4/SPIM.c **** 
 701:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 702:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_GetTxBufferSize
 703:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 704:Generated_Source\PSoC4/SPIM.c **** *
 705:Generated_Source\PSoC4/SPIM.c **** * Summary:
 706:Generated_Source\PSoC4/SPIM.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC4/SPIM.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC4/SPIM.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:Generated_Source\PSoC4/SPIM.c **** *  Software Buffer.
 710:Generated_Source\PSoC4/SPIM.c **** *
 711:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 712:Generated_Source\PSoC4/SPIM.c **** *  None.
 713:Generated_Source\PSoC4/SPIM.c **** *
 714:Generated_Source\PSoC4/SPIM.c **** * Return:
 715:Generated_Source\PSoC4/SPIM.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC4/SPIM.c **** *
 717:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 718:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC4/SPIM.c **** *
 723:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 724:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC4/SPIM.c **** *
 726:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 727:Generated_Source\PSoC4/SPIM.c **** uint8  SPIM_GetTxBufferSize(void) 
 728:Generated_Source\PSoC4/SPIM.c **** {
 712              		.loc 1 728 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716 0000 10B5     		push	{r4, lr}
 717              		.cfi_def_cfa_offset 8
 718              		.cfi_offset 4, -8
 719              		.cfi_offset 14, -4
 729:Generated_Source\PSoC4/SPIM.c ****     uint8 size;
 730:Generated_Source\PSoC4/SPIM.c **** 
 731:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 720              		.loc 1 733 0
 721 0002 FFF7FEFF 		bl	SPIM_DisableTxInt
 722              	.LVL46:
 734:Generated_Source\PSoC4/SPIM.c **** 
 735:Generated_Source\PSoC4/SPIM.c ****         if(SPIM_txBufferRead == SPIM_txBufferWrite)
 723              		.loc 1 735 0
 724 0006 124B     		ldr	r3, .L49
 725 0008 1A78     		ldrb	r2, [r3]
 726 000a D2B2     		uxtb	r2, r2
 727 000c 114B     		ldr	r3, .L49+4
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 27


 728 000e 1B78     		ldrb	r3, [r3]
 729 0010 DBB2     		uxtb	r3, r3
 730 0012 9A42     		cmp	r2, r3
 731 0014 16D0     		beq	.L48
 736:Generated_Source\PSoC4/SPIM.c ****         {
 737:Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 738:Generated_Source\PSoC4/SPIM.c ****         }
 739:Generated_Source\PSoC4/SPIM.c ****         else if(SPIM_txBufferRead < SPIM_txBufferWrite)
 732              		.loc 1 739 0
 733 0016 0E4B     		ldr	r3, .L49
 734 0018 1A78     		ldrb	r2, [r3]
 735 001a D2B2     		uxtb	r2, r2
 736 001c 0D4B     		ldr	r3, .L49+4
 737 001e 1B78     		ldrb	r3, [r3]
 738 0020 DBB2     		uxtb	r3, r3
 739 0022 9A42     		cmp	r2, r3
 740 0024 06D2     		bcs	.L47
 740:Generated_Source\PSoC4/SPIM.c ****         {
 741:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_txBufferWrite - SPIM_txBufferRead);
 741              		.loc 1 741 0
 742 0026 0B4B     		ldr	r3, .L49+4
 743 0028 1B78     		ldrb	r3, [r3]
 744 002a 094A     		ldr	r2, .L49
 745 002c 1478     		ldrb	r4, [r2]
 746 002e 1C1B     		subs	r4, r3, r4
 747 0030 E4B2     		uxtb	r4, r4
 748              	.LVL47:
 749 0032 08E0     		b	.L46
 750              	.LVL48:
 751              	.L47:
 742:Generated_Source\PSoC4/SPIM.c ****         }
 743:Generated_Source\PSoC4/SPIM.c ****         else
 744:Generated_Source\PSoC4/SPIM.c ****         {
 745:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_TX_BUFFER_SIZE - SPIM_txBufferRead) + SPIM_txBufferWrite;
 752              		.loc 1 745 0
 753 0034 074B     		ldr	r3, .L49+4
 754 0036 1B78     		ldrb	r3, [r3]
 755 0038 054A     		ldr	r2, .L49
 756 003a 1478     		ldrb	r4, [r2]
 757 003c 1C1B     		subs	r4, r3, r4
 758 003e 1034     		adds	r4, r4, #16
 759 0040 E4B2     		uxtb	r4, r4
 760              	.LVL49:
 761 0042 00E0     		b	.L46
 762              	.LVL50:
 763              	.L48:
 737:Generated_Source\PSoC4/SPIM.c ****         }
 764              		.loc 1 737 0
 765 0044 0024     		movs	r4, #0
 766              	.L46:
 767              	.LVL51:
 746:Generated_Source\PSoC4/SPIM.c ****         }
 747:Generated_Source\PSoC4/SPIM.c **** 
 748:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 768              		.loc 1 748 0
 769 0046 FFF7FEFF 		bl	SPIM_EnableTxInt
 770              	.LVL52:
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 28


 749:Generated_Source\PSoC4/SPIM.c **** 
 750:Generated_Source\PSoC4/SPIM.c ****     #else
 751:Generated_Source\PSoC4/SPIM.c **** 
 752:Generated_Source\PSoC4/SPIM.c ****         size = SPIM_TX_STATUS_REG;
 753:Generated_Source\PSoC4/SPIM.c **** 
 754:Generated_Source\PSoC4/SPIM.c ****         if(0u != (size & SPIM_STS_TX_FIFO_EMPTY))
 755:Generated_Source\PSoC4/SPIM.c ****         {
 756:Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 757:Generated_Source\PSoC4/SPIM.c ****         }
 758:Generated_Source\PSoC4/SPIM.c ****         else if(0u != (size & SPIM_STS_TX_FIFO_NOT_FULL))
 759:Generated_Source\PSoC4/SPIM.c ****         {
 760:Generated_Source\PSoC4/SPIM.c ****             size = 1u;
 761:Generated_Source\PSoC4/SPIM.c ****         }
 762:Generated_Source\PSoC4/SPIM.c ****         else
 763:Generated_Source\PSoC4/SPIM.c ****         {
 764:Generated_Source\PSoC4/SPIM.c ****             size = SPIM_FIFO_SIZE;
 765:Generated_Source\PSoC4/SPIM.c ****         }
 766:Generated_Source\PSoC4/SPIM.c **** 
 767:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC4/SPIM.c **** 
 769:Generated_Source\PSoC4/SPIM.c ****     return(size);
 770:Generated_Source\PSoC4/SPIM.c **** }
 771              		.loc 1 770 0
 772 004a 2000     		movs	r0, r4
 773              		@ sp needed
 774              	.LVL53:
 775 004c 10BD     		pop	{r4, pc}
 776              	.L50:
 777 004e C046     		.align	2
 778              	.L49:
 779 0050 00000000 		.word	SPIM_txBufferRead
 780 0054 00000000 		.word	SPIM_txBufferWrite
 781              		.cfi_endproc
 782              	.LFE16:
 783              		.size	SPIM_GetTxBufferSize, .-SPIM_GetTxBufferSize
 784              		.section	.text.SPIM_ClearRxBuffer,"ax",%progbits
 785              		.align	2
 786              		.global	SPIM_ClearRxBuffer
 787              		.code	16
 788              		.thumb_func
 789              		.type	SPIM_ClearRxBuffer, %function
 790              	SPIM_ClearRxBuffer:
 791              	.LFB17:
 771:Generated_Source\PSoC4/SPIM.c **** 
 772:Generated_Source\PSoC4/SPIM.c **** 
 773:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 774:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearRxBuffer
 775:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 776:Generated_Source\PSoC4/SPIM.c **** *
 777:Generated_Source\PSoC4/SPIM.c **** * Summary:
 778:Generated_Source\PSoC4/SPIM.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC4/SPIM.c **** *
 780:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 781:Generated_Source\PSoC4/SPIM.c **** *  None.
 782:Generated_Source\PSoC4/SPIM.c **** *
 783:Generated_Source\PSoC4/SPIM.c **** * Return:
 784:Generated_Source\PSoC4/SPIM.c **** *  None.
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 29


 785:Generated_Source\PSoC4/SPIM.c **** *
 786:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 787:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC4/SPIM.c **** *  call - resets to zero.
 790:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 791:Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer, modified every function call -
 792:Generated_Source\PSoC4/SPIM.c **** *  resets to zero.
 793:Generated_Source\PSoC4/SPIM.c **** *
 794:Generated_Source\PSoC4/SPIM.c **** * Theory:
 795:Generated_Source\PSoC4/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC4/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC4/SPIM.c **** *  remained in the RAM.
 798:Generated_Source\PSoC4/SPIM.c **** *
 799:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 800:Generated_Source\PSoC4/SPIM.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC4/SPIM.c **** *
 802:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 803:Generated_Source\PSoC4/SPIM.c **** *  No.
 804:Generated_Source\PSoC4/SPIM.c **** *
 805:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 806:Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearRxBuffer(void) 
 807:Generated_Source\PSoC4/SPIM.c **** {
 792              		.loc 1 807 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 0
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796 0000 10B5     		push	{r4, lr}
 797              		.cfi_def_cfa_offset 8
 798              		.cfi_offset 4, -8
 799              		.cfi_offset 14, -4
 808:Generated_Source\PSoC4/SPIM.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC4/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 800              		.loc 1 809 0
 801 0002 01E0     		b	.L52
 802              	.L53:
 810:Generated_Source\PSoC4/SPIM.c ****     {
 811:Generated_Source\PSoC4/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 803              		.loc 1 811 0
 804 0004 084B     		ldr	r3, .L54
 805 0006 1B78     		ldrb	r3, [r3]
 806              	.L52:
 809:Generated_Source\PSoC4/SPIM.c ****     {
 807              		.loc 1 809 0
 808 0008 084B     		ldr	r3, .L54+4
 809 000a 1B78     		ldrb	r3, [r3]
 810 000c 9B06     		lsls	r3, r3, #26
 811 000e F9D4     		bmi	.L53
 812:Generated_Source\PSoC4/SPIM.c ****     }
 813:Generated_Source\PSoC4/SPIM.c **** 
 814:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 812              		.loc 1 816 0
 813 0010 FFF7FEFF 		bl	SPIM_DisableRxInt
 814              	.LVL54:
 817:Generated_Source\PSoC4/SPIM.c **** 
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 30


 818:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferFull  = 0u;
 815              		.loc 1 818 0
 816 0014 0023     		movs	r3, #0
 817 0016 064A     		ldr	r2, .L54+8
 818 0018 1370     		strb	r3, [r2]
 819:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferRead  = 0u;
 819              		.loc 1 819 0
 820 001a 064A     		ldr	r2, .L54+12
 821 001c 1370     		strb	r3, [r2]
 820:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferWrite = 0u;
 822              		.loc 1 820 0
 823 001e 064A     		ldr	r2, .L54+16
 824 0020 1370     		strb	r3, [r2]
 821:Generated_Source\PSoC4/SPIM.c **** 
 822:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 825              		.loc 1 822 0
 826 0022 FFF7FEFF 		bl	SPIM_EnableRxInt
 827              	.LVL55:
 823:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC4/SPIM.c **** }
 828              		.loc 1 824 0
 829              		@ sp needed
 830 0026 10BD     		pop	{r4, pc}
 831              	.L55:
 832              		.align	2
 833              	.L54:
 834 0028 53000F40 		.word	1074724947
 835 002c 62000F40 		.word	1074724962
 836 0030 00000000 		.word	SPIM_rxBufferFull
 837 0034 00000000 		.word	SPIM_rxBufferRead
 838 0038 00000000 		.word	SPIM_rxBufferWrite
 839              		.cfi_endproc
 840              	.LFE17:
 841              		.size	SPIM_ClearRxBuffer, .-SPIM_ClearRxBuffer
 842              		.section	.text.SPIM_ClearTxBuffer,"ax",%progbits
 843              		.align	2
 844              		.global	SPIM_ClearTxBuffer
 845              		.code	16
 846              		.thumb_func
 847              		.type	SPIM_ClearTxBuffer, %function
 848              	SPIM_ClearTxBuffer:
 849              	.LFB18:
 825:Generated_Source\PSoC4/SPIM.c **** 
 826:Generated_Source\PSoC4/SPIM.c **** 
 827:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearTxBuffer
 829:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 830:Generated_Source\PSoC4/SPIM.c **** *
 831:Generated_Source\PSoC4/SPIM.c **** * Summary:
 832:Generated_Source\PSoC4/SPIM.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC4/SPIM.c **** *
 834:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 835:Generated_Source\PSoC4/SPIM.c **** *  None.
 836:Generated_Source\PSoC4/SPIM.c **** *
 837:Generated_Source\PSoC4/SPIM.c **** * Return:
 838:Generated_Source\PSoC4/SPIM.c **** *  None.
 839:Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 31


 840:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 841:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 843:Generated_Source\PSoC4/SPIM.c **** *  call - resets to zero.
 844:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC4/SPIM.c **** *  resets to zero.
 847:Generated_Source\PSoC4/SPIM.c **** *
 848:Generated_Source\PSoC4/SPIM.c **** * Theory:
 849:Generated_Source\PSoC4/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC4/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC4/SPIM.c **** *  remained in the RAM.
 852:Generated_Source\PSoC4/SPIM.c **** *
 853:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 854:Generated_Source\PSoC4/SPIM.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC4/SPIM.c **** *  overwritten.
 856:Generated_Source\PSoC4/SPIM.c **** *
 857:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 858:Generated_Source\PSoC4/SPIM.c **** *  No.
 859:Generated_Source\PSoC4/SPIM.c **** *
 860:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 861:Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearTxBuffer(void) 
 862:Generated_Source\PSoC4/SPIM.c **** {
 850              		.loc 1 862 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854 0000 10B5     		push	{r4, lr}
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 4, -8
 857              		.cfi_offset 14, -4
 863:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 864:Generated_Source\PSoC4/SPIM.c **** 
 865:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 858              		.loc 1 865 0
 859 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 860              	.LVL56:
 866:Generated_Source\PSoC4/SPIM.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 861              		.loc 1 867 0
 862 0006 0E4A     		ldr	r2, .L57
 863 0008 1178     		ldrb	r1, [r2]
 864 000a 0123     		movs	r3, #1
 865 000c 0B43     		orrs	r3, r1
 866 000e DBB2     		uxtb	r3, r3
 867 0010 1370     		strb	r3, [r2]
 868:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 868              		.loc 1 868 0
 869 0012 1378     		ldrb	r3, [r2]
 870 0014 0121     		movs	r1, #1
 871 0016 8B43     		bics	r3, r1
 872 0018 1370     		strb	r3, [r2]
 869:Generated_Source\PSoC4/SPIM.c **** 
 870:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC4/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 873:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 32


 874:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 873              		.loc 1 875 0
 874 001a FFF7FEFF 		bl	CyExitCriticalSection
 875              	.LVL57:
 876:Generated_Source\PSoC4/SPIM.c **** 
 877:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 876              		.loc 1 879 0
 877 001e FFF7FEFF 		bl	SPIM_DisableTxInt
 878              	.LVL58:
 880:Generated_Source\PSoC4/SPIM.c **** 
 881:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferFull  = 0u;
 879              		.loc 1 881 0
 880 0022 0023     		movs	r3, #0
 881 0024 074A     		ldr	r2, .L57+4
 882 0026 1370     		strb	r3, [r2]
 882:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferRead  = 0u;
 883              		.loc 1 882 0
 884 0028 074A     		ldr	r2, .L57+8
 885 002a 1370     		strb	r3, [r2]
 883:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferWrite = 0u;
 886              		.loc 1 883 0
 887 002c 074A     		ldr	r2, .L57+12
 888 002e 1370     		strb	r3, [r2]
 884:Generated_Source\PSoC4/SPIM.c **** 
 885:Generated_Source\PSoC4/SPIM.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC4/SPIM.c ****         SPIM_TX_STATUS_MASK_REG &= ((uint8) ~SPIM_STS_TX_FIFO_NOT_FULL);
 889              		.loc 1 886 0
 890 0030 074A     		ldr	r2, .L57+16
 891 0032 1378     		ldrb	r3, [r2]
 892 0034 0421     		movs	r1, #4
 893 0036 8B43     		bics	r3, r1
 894 0038 1370     		strb	r3, [r2]
 887:Generated_Source\PSoC4/SPIM.c **** 
 888:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 895              		.loc 1 888 0
 896 003a FFF7FEFF 		bl	SPIM_EnableTxInt
 897              	.LVL59:
 889:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC4/SPIM.c **** }
 898              		.loc 1 890 0
 899              		@ sp needed
 900 003e 10BD     		pop	{r4, pc}
 901              	.L58:
 902              		.align	2
 903              	.L57:
 904 0040 93000F40 		.word	1074725011
 905 0044 00000000 		.word	SPIM_txBufferFull
 906 0048 00000000 		.word	SPIM_txBufferRead
 907 004c 00000000 		.word	SPIM_txBufferWrite
 908 0050 84000F40 		.word	1074724996
 909              		.cfi_endproc
 910              	.LFE18:
 911              		.size	SPIM_ClearTxBuffer, .-SPIM_ClearTxBuffer
 912              		.section	.text.SPIM_PutArray,"ax",%progbits
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 33


 913              		.align	2
 914              		.global	SPIM_PutArray
 915              		.code	16
 916              		.thumb_func
 917              		.type	SPIM_PutArray, %function
 918              	SPIM_PutArray:
 919              	.LFB19:
 891:Generated_Source\PSoC4/SPIM.c **** 
 892:Generated_Source\PSoC4/SPIM.c **** 
 893:Generated_Source\PSoC4/SPIM.c **** #if(0u != SPIM_BIDIRECTIONAL_MODE)
 894:Generated_Source\PSoC4/SPIM.c ****     /*******************************************************************************
 895:Generated_Source\PSoC4/SPIM.c ****     * Function Name: SPIM_TxEnable
 896:Generated_Source\PSoC4/SPIM.c ****     ********************************************************************************
 897:Generated_Source\PSoC4/SPIM.c ****     *
 898:Generated_Source\PSoC4/SPIM.c ****     * Summary:
 899:Generated_Source\PSoC4/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:Generated_Source\PSoC4/SPIM.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC4/SPIM.c ****     *
 902:Generated_Source\PSoC4/SPIM.c ****     * Parameters:
 903:Generated_Source\PSoC4/SPIM.c ****     *  None.
 904:Generated_Source\PSoC4/SPIM.c ****     *
 905:Generated_Source\PSoC4/SPIM.c ****     * Return:
 906:Generated_Source\PSoC4/SPIM.c ****     *  None.
 907:Generated_Source\PSoC4/SPIM.c ****     *
 908:Generated_Source\PSoC4/SPIM.c ****     *******************************************************************************/
 909:Generated_Source\PSoC4/SPIM.c ****     void SPIM_TxEnable(void) 
 910:Generated_Source\PSoC4/SPIM.c ****     {
 911:Generated_Source\PSoC4/SPIM.c ****         SPIM_CONTROL_REG |= SPIM_CTRL_TX_SIGNAL_EN;
 912:Generated_Source\PSoC4/SPIM.c ****     }
 913:Generated_Source\PSoC4/SPIM.c **** 
 914:Generated_Source\PSoC4/SPIM.c **** 
 915:Generated_Source\PSoC4/SPIM.c ****     /*******************************************************************************
 916:Generated_Source\PSoC4/SPIM.c ****     * Function Name: SPIM_TxDisable
 917:Generated_Source\PSoC4/SPIM.c ****     ********************************************************************************
 918:Generated_Source\PSoC4/SPIM.c ****     *
 919:Generated_Source\PSoC4/SPIM.c ****     * Summary:
 920:Generated_Source\PSoC4/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC4/SPIM.c ****     *  will set the bi-directional pin to receive.
 922:Generated_Source\PSoC4/SPIM.c ****     *
 923:Generated_Source\PSoC4/SPIM.c ****     * Parameters:
 924:Generated_Source\PSoC4/SPIM.c ****     *  None.
 925:Generated_Source\PSoC4/SPIM.c ****     *
 926:Generated_Source\PSoC4/SPIM.c ****     * Return:
 927:Generated_Source\PSoC4/SPIM.c ****     *  None.
 928:Generated_Source\PSoC4/SPIM.c ****     *
 929:Generated_Source\PSoC4/SPIM.c ****     *******************************************************************************/
 930:Generated_Source\PSoC4/SPIM.c ****     void SPIM_TxDisable(void) 
 931:Generated_Source\PSoC4/SPIM.c ****     {
 932:Generated_Source\PSoC4/SPIM.c ****         SPIM_CONTROL_REG &= ((uint8) ~SPIM_CTRL_TX_SIGNAL_EN);
 933:Generated_Source\PSoC4/SPIM.c ****     }
 934:Generated_Source\PSoC4/SPIM.c **** 
 935:Generated_Source\PSoC4/SPIM.c **** #endif /* (0u != SPIM_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC4/SPIM.c **** 
 937:Generated_Source\PSoC4/SPIM.c **** 
 938:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 939:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_PutArray
 940:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 34


 941:Generated_Source\PSoC4/SPIM.c **** *
 942:Generated_Source\PSoC4/SPIM.c **** * Summary:
 943:Generated_Source\PSoC4/SPIM.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC4/SPIM.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:Generated_Source\PSoC4/SPIM.c **** *
 946:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 947:Generated_Source\PSoC4/SPIM.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC4/SPIM.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC4/SPIM.c **** *
 950:Generated_Source\PSoC4/SPIM.c **** * Return:
 951:Generated_Source\PSoC4/SPIM.c **** *  None.
 952:Generated_Source\PSoC4/SPIM.c **** *
 953:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 954:Generated_Source\PSoC4/SPIM.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC4/SPIM.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC4/SPIM.c **** *  enough room in the TX FIFO.
 957:Generated_Source\PSoC4/SPIM.c **** *
 958:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 959:Generated_Source\PSoC4/SPIM.c **** *  No.
 960:Generated_Source\PSoC4/SPIM.c **** *
 961:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 962:Generated_Source\PSoC4/SPIM.c **** void SPIM_PutArray(const uint8 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC4/SPIM.c ****                                                                           
 964:Generated_Source\PSoC4/SPIM.c **** {
 920              		.loc 1 964 0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 0
 923              		@ frame_needed = 0, uses_anonymous_args = 0
 924              	.LVL60:
 925 0000 70B5     		push	{r4, r5, r6, lr}
 926              		.cfi_def_cfa_offset 16
 927              		.cfi_offset 4, -16
 928              		.cfi_offset 5, -12
 929              		.cfi_offset 6, -8
 930              		.cfi_offset 14, -4
 931 0002 0600     		movs	r6, r0
 932 0004 0C00     		movs	r4, r1
 933              	.LVL61:
 965:Generated_Source\PSoC4/SPIM.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC4/SPIM.c **** 
 967:Generated_Source\PSoC4/SPIM.c ****     bufIndex = 0u;
 934              		.loc 1 967 0
 935 0006 0025     		movs	r5, #0
 968:Generated_Source\PSoC4/SPIM.c **** 
 969:Generated_Source\PSoC4/SPIM.c ****     while(byteCount > 0u)
 936              		.loc 1 969 0
 937 0008 06E0     		b	.L60
 938              	.LVL62:
 939              	.L61:
 970:Generated_Source\PSoC4/SPIM.c ****     {
 971:Generated_Source\PSoC4/SPIM.c ****         SPIM_WriteTxData(buffer[bufIndex]);
 940              		.loc 1 971 0
 941 000a 705D     		ldrb	r0, [r6, r5]
 942 000c FFF7FEFF 		bl	SPIM_WriteTxData
 943              	.LVL63:
 972:Generated_Source\PSoC4/SPIM.c ****         bufIndex++;
 944              		.loc 1 972 0
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 35


 945 0010 0135     		adds	r5, r5, #1
 946              	.LVL64:
 947 0012 EDB2     		uxtb	r5, r5
 948              	.LVL65:
 973:Generated_Source\PSoC4/SPIM.c ****         byteCount--;
 949              		.loc 1 973 0
 950 0014 013C     		subs	r4, r4, #1
 951              	.LVL66:
 952 0016 E4B2     		uxtb	r4, r4
 953              	.LVL67:
 954              	.L60:
 969:Generated_Source\PSoC4/SPIM.c ****     {
 955              		.loc 1 969 0
 956 0018 002C     		cmp	r4, #0
 957 001a F6D1     		bne	.L61
 974:Generated_Source\PSoC4/SPIM.c ****     }
 975:Generated_Source\PSoC4/SPIM.c **** }
 958              		.loc 1 975 0
 959              		@ sp needed
 960              	.LVL68:
 961              	.LVL69:
 962              	.LVL70:
 963 001c 70BD     		pop	{r4, r5, r6, pc}
 964              		.cfi_endproc
 965              	.LFE19:
 966              		.size	SPIM_PutArray, .-SPIM_PutArray
 967 001e C046     		.section	.text.SPIM_ClearFIFO,"ax",%progbits
 968              		.align	2
 969              		.global	SPIM_ClearFIFO
 970              		.code	16
 971              		.thumb_func
 972              		.type	SPIM_ClearFIFO, %function
 973              	SPIM_ClearFIFO:
 974              	.LFB20:
 976:Generated_Source\PSoC4/SPIM.c **** 
 977:Generated_Source\PSoC4/SPIM.c **** 
 978:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearFIFO
 980:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 981:Generated_Source\PSoC4/SPIM.c **** *
 982:Generated_Source\PSoC4/SPIM.c **** * Summary:
 983:Generated_Source\PSoC4/SPIM.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:Generated_Source\PSoC4/SPIM.c **** *
 985:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 986:Generated_Source\PSoC4/SPIM.c **** *  None.
 987:Generated_Source\PSoC4/SPIM.c **** *
 988:Generated_Source\PSoC4/SPIM.c **** * Return:
 989:Generated_Source\PSoC4/SPIM.c **** *  None.
 990:Generated_Source\PSoC4/SPIM.c **** *
 991:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 992:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC4/SPIM.c **** *
 994:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 995:Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearFIFO(void) 
 996:Generated_Source\PSoC4/SPIM.c **** {
 975              		.loc 1 996 0
 976              		.cfi_startproc
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 36


 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
 979 0000 10B5     		push	{r4, lr}
 980              		.cfi_def_cfa_offset 8
 981              		.cfi_offset 4, -8
 982              		.cfi_offset 14, -4
 997:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC4/SPIM.c **** 
 999:Generated_Source\PSoC4/SPIM.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC4/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 983              		.loc 1 1000 0
 984 0002 01E0     		b	.L63
 985              	.L64:
1001:Generated_Source\PSoC4/SPIM.c ****     {
1002:Generated_Source\PSoC4/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 986              		.loc 1 1002 0
 987 0004 0A4B     		ldr	r3, .L65
 988 0006 1B78     		ldrb	r3, [r3]
 989              	.L63:
1000:Generated_Source\PSoC4/SPIM.c ****     {
 990              		.loc 1 1000 0
 991 0008 0A4B     		ldr	r3, .L65+4
 992 000a 1B78     		ldrb	r3, [r3]
 993 000c 9B06     		lsls	r3, r3, #26
 994 000e F9D4     		bmi	.L64
1003:Generated_Source\PSoC4/SPIM.c ****     }
1004:Generated_Source\PSoC4/SPIM.c **** 
1005:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 995              		.loc 1 1005 0
 996 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 997              	.LVL71:
1006:Generated_Source\PSoC4/SPIM.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 998              		.loc 1 1007 0
 999 0014 084A     		ldr	r2, .L65+8
 1000 0016 1178     		ldrb	r1, [r2]
 1001 0018 0123     		movs	r3, #1
 1002 001a 0B43     		orrs	r3, r1
 1003 001c DBB2     		uxtb	r3, r3
 1004 001e 1370     		strb	r3, [r2]
1008:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 1005              		.loc 1 1008 0
 1006 0020 1378     		ldrb	r3, [r2]
 1007 0022 0121     		movs	r1, #1
 1008 0024 8B43     		bics	r3, r1
 1009 0026 1370     		strb	r3, [r2]
1009:Generated_Source\PSoC4/SPIM.c **** 
1010:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC4/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
1013:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
1014:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 1010              		.loc 1 1015 0
 1011 0028 FFF7FEFF 		bl	CyExitCriticalSection
 1012              	.LVL72:
1016:Generated_Source\PSoC4/SPIM.c **** }
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 37


 1013              		.loc 1 1016 0
 1014              		@ sp needed
 1015 002c 10BD     		pop	{r4, pc}
 1016              	.L66:
 1017 002e C046     		.align	2
 1018              	.L65:
 1019 0030 53000F40 		.word	1074724947
 1020 0034 62000F40 		.word	1074724962
 1021 0038 93000F40 		.word	1074725011
 1022              		.cfi_endproc
 1023              	.LFE20:
 1024              		.size	SPIM_ClearFIFO, .-SPIM_ClearFIFO
 1025              		.section	.text.SPIM_Init,"ax",%progbits
 1026              		.align	2
 1027              		.global	SPIM_Init
 1028              		.code	16
 1029              		.thumb_func
 1030              		.type	SPIM_Init, %function
 1031              	SPIM_Init:
 1032              	.LFB1:
  64:Generated_Source\PSoC4/SPIM.c ****     /* Initialize the Bit counter */
 1033              		.loc 1 64 0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037 0000 10B5     		push	{r4, lr}
 1038              		.cfi_def_cfa_offset 8
 1039              		.cfi_offset 4, -8
 1040              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/SPIM.c **** 
 1041              		.loc 1 66 0
 1042 0002 0F22     		movs	r2, #15
 1043 0004 184B     		ldr	r3, .L68
 1044 0006 1A70     		strb	r2, [r3]
  70:Generated_Source\PSoC4/SPIM.c ****         CyIntSetPriority     (SPIM_TX_ISR_NUMBER,  SPIM_TX_ISR_PRIORITY);
 1045              		.loc 1 70 0
 1046 0008 0120     		movs	r0, #1
 1047 000a FFF7FEFF 		bl	CyIntDisable
 1048              	.LVL73:
  71:Generated_Source\PSoC4/SPIM.c ****         (void) CyIntSetVector(SPIM_TX_ISR_NUMBER, &SPIM_TX_ISR);
 1049              		.loc 1 71 0
 1050 000e 0321     		movs	r1, #3
 1051 0010 0120     		movs	r0, #1
 1052 0012 FFF7FEFF 		bl	CyIntSetPriority
 1053              	.LVL74:
  72:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 1054              		.loc 1 72 0
 1055 0016 1549     		ldr	r1, .L68+4
 1056 0018 0120     		movs	r0, #1
 1057 001a FFF7FEFF 		bl	CyIntSetVector
 1058              	.LVL75:
  77:Generated_Source\PSoC4/SPIM.c ****         CyIntSetPriority     (SPIM_RX_ISR_NUMBER,  SPIM_RX_ISR_PRIORITY);
 1059              		.loc 1 77 0
 1060 001e 0020     		movs	r0, #0
 1061 0020 FFF7FEFF 		bl	CyIntDisable
 1062              	.LVL76:
  78:Generated_Source\PSoC4/SPIM.c ****         (void) CyIntSetVector(SPIM_RX_ISR_NUMBER, &SPIM_RX_ISR);
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 38


 1063              		.loc 1 78 0
 1064 0024 0321     		movs	r1, #3
 1065 0026 0020     		movs	r0, #0
 1066 0028 FFF7FEFF 		bl	CyIntSetPriority
 1067              	.LVL77:
  79:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 1068              		.loc 1 79 0
 1069 002c 1049     		ldr	r1, .L68+8
 1070 002e 0020     		movs	r0, #0
 1071 0030 FFF7FEFF 		bl	CyIntSetVector
 1072              	.LVL78:
  83:Generated_Source\PSoC4/SPIM.c **** 
 1073              		.loc 1 83 0
 1074 0034 FFF7FEFF 		bl	SPIM_ClearFIFO
 1075              	.LVL79:
  86:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferRead  = 0u;
 1076              		.loc 1 86 0
 1077 0038 0024     		movs	r4, #0
 1078 003a 0E4B     		ldr	r3, .L68+12
 1079 003c 1C70     		strb	r4, [r3]
  87:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferWrite = 0u;
 1080              		.loc 1 87 0
 1081 003e 0E4B     		ldr	r3, .L68+16
 1082 0040 1C70     		strb	r4, [r3]
  88:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 1083              		.loc 1 88 0
 1084 0042 0E4B     		ldr	r3, .L68+20
 1085 0044 1C70     		strb	r4, [r3]
  92:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferRead  = 0u;
 1086              		.loc 1 92 0
 1087 0046 0E4B     		ldr	r3, .L68+24
 1088 0048 1C70     		strb	r4, [r3]
  93:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferWrite = 0u;
 1089              		.loc 1 93 0
 1090 004a 0E4B     		ldr	r3, .L68+28
 1091 004c 1C70     		strb	r4, [r3]
  94:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 1092              		.loc 1 94 0
 1093 004e 0E4B     		ldr	r3, .L68+32
 1094 0050 1C70     		strb	r4, [r3]
  97:Generated_Source\PSoC4/SPIM.c ****     (void) SPIM_ReadRxStatus(); /* Clear Rx status and swStatusRx */
 1095              		.loc 1 97 0
 1096 0052 FFF7FEFF 		bl	SPIM_ReadTxStatus
 1097              	.LVL80:
  98:Generated_Source\PSoC4/SPIM.c **** 
 1098              		.loc 1 98 0
 1099 0056 FFF7FEFF 		bl	SPIM_ReadRxStatus
 1100              	.LVL81:
 101:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG = SPIM_RX_INIT_INTERRUPTS_MASK;
 1101              		.loc 1 101 0
 1102 005a 0C4B     		ldr	r3, .L68+36
 1103 005c 1C70     		strb	r4, [r3]
 102:Generated_Source\PSoC4/SPIM.c **** }
 1104              		.loc 1 102 0
 1105 005e 2022     		movs	r2, #32
 1106 0060 0B4B     		ldr	r3, .L68+40
 1107 0062 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 39


 103:Generated_Source\PSoC4/SPIM.c **** 
 1108              		.loc 1 103 0
 1109              		@ sp needed
 1110 0064 10BD     		pop	{r4, pc}
 1111              	.L69:
 1112 0066 C046     		.align	2
 1113              	.L68:
 1114 0068 83000F40 		.word	1074724995
 1115 006c 00000000 		.word	SPIM_TX_ISR
 1116 0070 00000000 		.word	SPIM_RX_ISR
 1117 0074 00000000 		.word	SPIM_rxBufferFull
 1118 0078 00000000 		.word	SPIM_rxBufferRead
 1119 007c 00000000 		.word	SPIM_rxBufferWrite
 1120 0080 00000000 		.word	SPIM_txBufferFull
 1121 0084 00000000 		.word	SPIM_txBufferRead
 1122 0088 00000000 		.word	SPIM_txBufferWrite
 1123 008c 84000F40 		.word	1074724996
 1124 0090 82000F40 		.word	1074724994
 1125              		.cfi_endproc
 1126              	.LFE1:
 1127              		.size	SPIM_Init, .-SPIM_Init
 1128              		.section	.text.SPIM_Start,"ax",%progbits
 1129              		.align	2
 1130              		.global	SPIM_Start
 1131              		.code	16
 1132              		.thumb_func
 1133              		.type	SPIM_Start, %function
 1134              	SPIM_Start:
 1135              	.LFB3:
 164:Generated_Source\PSoC4/SPIM.c ****     if(0u == SPIM_initVar)
 1136              		.loc 1 164 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140 0000 10B5     		push	{r4, lr}
 1141              		.cfi_def_cfa_offset 8
 1142              		.cfi_offset 4, -8
 1143              		.cfi_offset 14, -4
 165:Generated_Source\PSoC4/SPIM.c ****     {
 1144              		.loc 1 165 0
 1145 0002 064B     		ldr	r3, .L72
 1146 0004 1B78     		ldrb	r3, [r3]
 1147 0006 002B     		cmp	r3, #0
 1148 0008 04D1     		bne	.L71
 167:Generated_Source\PSoC4/SPIM.c ****         SPIM_initVar = 1u;
 1149              		.loc 1 167 0
 1150 000a FFF7FEFF 		bl	SPIM_Init
 1151              	.LVL82:
 168:Generated_Source\PSoC4/SPIM.c ****     }
 1152              		.loc 1 168 0
 1153 000e 0122     		movs	r2, #1
 1154 0010 024B     		ldr	r3, .L72
 1155 0012 1A70     		strb	r2, [r3]
 1156              	.L71:
 171:Generated_Source\PSoC4/SPIM.c **** }
 1157              		.loc 1 171 0
 1158 0014 FFF7FEFF 		bl	SPIM_Enable
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 40


 1159              	.LVL83:
 172:Generated_Source\PSoC4/SPIM.c **** 
 1160              		.loc 1 172 0
 1161              		@ sp needed
 1162 0018 10BD     		pop	{r4, pc}
 1163              	.L73:
 1164 001a C046     		.align	2
 1165              	.L72:
 1166 001c 00000000 		.word	.LANCHOR0
 1167              		.cfi_endproc
 1168              	.LFE3:
 1169              		.size	SPIM_Start, .-SPIM_Start
 1170              		.section	.text.SPIM_EnableInt,"ax",%progbits
 1171              		.align	2
 1172              		.global	SPIM_EnableInt
 1173              		.code	16
 1174              		.thumb_func
 1175              		.type	SPIM_EnableInt, %function
 1176              	SPIM_EnableInt:
 1177              	.LFB21:
1017:Generated_Source\PSoC4/SPIM.c **** 
1018:Generated_Source\PSoC4/SPIM.c **** 
1019:Generated_Source\PSoC4/SPIM.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC4/SPIM.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC4/SPIM.c **** */
1022:Generated_Source\PSoC4/SPIM.c **** 
1023:Generated_Source\PSoC4/SPIM.c **** 
1024:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1025:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableInt
1026:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1027:Generated_Source\PSoC4/SPIM.c **** *
1028:Generated_Source\PSoC4/SPIM.c **** * Summary:
1029:Generated_Source\PSoC4/SPIM.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC4/SPIM.c **** *
1031:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1032:Generated_Source\PSoC4/SPIM.c **** *  None.
1033:Generated_Source\PSoC4/SPIM.c **** *
1034:Generated_Source\PSoC4/SPIM.c **** * Return:
1035:Generated_Source\PSoC4/SPIM.c **** *  None.
1036:Generated_Source\PSoC4/SPIM.c **** *
1037:Generated_Source\PSoC4/SPIM.c **** * Theory:
1038:Generated_Source\PSoC4/SPIM.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:Generated_Source\PSoC4/SPIM.c **** *
1040:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1041:Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableInt(void) 
1042:Generated_Source\PSoC4/SPIM.c **** {
 1178              		.loc 1 1042 0
 1179              		.cfi_startproc
 1180              		@ args = 0, pretend = 0, frame = 0
 1181              		@ frame_needed = 0, uses_anonymous_args = 0
 1182 0000 10B5     		push	{r4, lr}
 1183              		.cfi_def_cfa_offset 8
 1184              		.cfi_offset 4, -8
 1185              		.cfi_offset 14, -4
1043:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableRxInt();
 1186              		.loc 1 1043 0
 1187 0002 FFF7FEFF 		bl	SPIM_EnableRxInt
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 41


 1188              	.LVL84:
1044:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableTxInt();
 1189              		.loc 1 1044 0
 1190 0006 FFF7FEFF 		bl	SPIM_EnableTxInt
 1191              	.LVL85:
1045:Generated_Source\PSoC4/SPIM.c **** }
 1192              		.loc 1 1045 0
 1193              		@ sp needed
 1194 000a 10BD     		pop	{r4, pc}
 1195              		.cfi_endproc
 1196              	.LFE21:
 1197              		.size	SPIM_EnableInt, .-SPIM_EnableInt
 1198              		.section	.text.SPIM_DisableInt,"ax",%progbits
 1199              		.align	2
 1200              		.global	SPIM_DisableInt
 1201              		.code	16
 1202              		.thumb_func
 1203              		.type	SPIM_DisableInt, %function
 1204              	SPIM_DisableInt:
 1205              	.LFB22:
1046:Generated_Source\PSoC4/SPIM.c **** 
1047:Generated_Source\PSoC4/SPIM.c **** 
1048:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1049:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableInt
1050:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1051:Generated_Source\PSoC4/SPIM.c **** *
1052:Generated_Source\PSoC4/SPIM.c **** * Summary:
1053:Generated_Source\PSoC4/SPIM.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC4/SPIM.c **** *
1055:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1056:Generated_Source\PSoC4/SPIM.c **** *  None.
1057:Generated_Source\PSoC4/SPIM.c **** *
1058:Generated_Source\PSoC4/SPIM.c **** * Return:
1059:Generated_Source\PSoC4/SPIM.c **** *  None.
1060:Generated_Source\PSoC4/SPIM.c **** *
1061:Generated_Source\PSoC4/SPIM.c **** * Theory:
1062:Generated_Source\PSoC4/SPIM.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC4/SPIM.c **** *
1064:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1065:Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableInt(void) 
1066:Generated_Source\PSoC4/SPIM.c **** {
 1206              		.loc 1 1066 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 0
 1209              		@ frame_needed = 0, uses_anonymous_args = 0
 1210 0000 10B5     		push	{r4, lr}
 1211              		.cfi_def_cfa_offset 8
 1212              		.cfi_offset 4, -8
 1213              		.cfi_offset 14, -4
1067:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableTxInt();
 1214              		.loc 1 1067 0
 1215 0002 FFF7FEFF 		bl	SPIM_DisableTxInt
 1216              	.LVL86:
1068:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableRxInt();
 1217              		.loc 1 1068 0
 1218 0006 FFF7FEFF 		bl	SPIM_DisableRxInt
 1219              	.LVL87:
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 42


1069:Generated_Source\PSoC4/SPIM.c **** }
 1220              		.loc 1 1069 0
 1221              		@ sp needed
 1222 000a 10BD     		pop	{r4, pc}
 1223              		.cfi_endproc
 1224              	.LFE22:
 1225              		.size	SPIM_DisableInt, .-SPIM_DisableInt
 1226              		.section	.text.SPIM_SetInterruptMode,"ax",%progbits
 1227              		.align	2
 1228              		.global	SPIM_SetInterruptMode
 1229              		.code	16
 1230              		.thumb_func
 1231              		.type	SPIM_SetInterruptMode, %function
 1232              	SPIM_SetInterruptMode:
 1233              	.LFB23:
1070:Generated_Source\PSoC4/SPIM.c **** 
1071:Generated_Source\PSoC4/SPIM.c **** 
1072:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1073:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetInterruptMode
1074:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1075:Generated_Source\PSoC4/SPIM.c **** *
1076:Generated_Source\PSoC4/SPIM.c **** * Summary:
1077:Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC4/SPIM.c **** *
1079:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1080:Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:Generated_Source\PSoC4/SPIM.c **** *  header file).
1082:Generated_Source\PSoC4/SPIM.c **** *
1083:Generated_Source\PSoC4/SPIM.c **** * Return:
1084:Generated_Source\PSoC4/SPIM.c **** *  None.
1085:Generated_Source\PSoC4/SPIM.c **** *
1086:Generated_Source\PSoC4/SPIM.c **** * Theory:
1087:Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:Generated_Source\PSoC4/SPIM.c **** *
1089:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1090:Generated_Source\PSoC4/SPIM.c **** void SPIM_SetInterruptMode(uint8 intSrc) 
1091:Generated_Source\PSoC4/SPIM.c **** {
 1234              		.loc 1 1091 0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 0
 1237              		@ frame_needed = 0, uses_anonymous_args = 0
 1238              		@ link register save eliminated.
 1239              	.LVL88:
1092:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPIM_STS_SPI_IDLE));
 1240              		.loc 1 1092 0
 1241 0000 1023     		movs	r3, #16
 1242 0002 0200     		movs	r2, r0
 1243 0004 9A43     		bics	r2, r3
 1244 0006 024B     		ldr	r3, .L77
 1245 0008 1A70     		strb	r2, [r3]
1093:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  =  intSrc;
 1246              		.loc 1 1093 0
 1247 000a 024B     		ldr	r3, .L77+4
 1248 000c 1870     		strb	r0, [r3]
1094:Generated_Source\PSoC4/SPIM.c **** }
 1249              		.loc 1 1094 0
 1250              		@ sp needed
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 43


 1251 000e 7047     		bx	lr
 1252              	.L78:
 1253              		.align	2
 1254              	.L77:
 1255 0010 84000F40 		.word	1074724996
 1256 0014 82000F40 		.word	1074724994
 1257              		.cfi_endproc
 1258              	.LFE23:
 1259              		.size	SPIM_SetInterruptMode, .-SPIM_SetInterruptMode
 1260              		.section	.text.SPIM_ReadStatus,"ax",%progbits
 1261              		.align	2
 1262              		.global	SPIM_ReadStatus
 1263              		.code	16
 1264              		.thumb_func
 1265              		.type	SPIM_ReadStatus, %function
 1266              	SPIM_ReadStatus:
 1267              	.LFB24:
1095:Generated_Source\PSoC4/SPIM.c **** 
1096:Generated_Source\PSoC4/SPIM.c **** 
1097:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1098:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadStatus
1099:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1100:Generated_Source\PSoC4/SPIM.c **** *
1101:Generated_Source\PSoC4/SPIM.c **** * Summary:
1102:Generated_Source\PSoC4/SPIM.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC4/SPIM.c **** *
1104:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1105:Generated_Source\PSoC4/SPIM.c **** *  None.
1106:Generated_Source\PSoC4/SPIM.c **** *
1107:Generated_Source\PSoC4/SPIM.c **** * Return:
1108:Generated_Source\PSoC4/SPIM.c **** *  Contents of the status register.
1109:Generated_Source\PSoC4/SPIM.c **** *
1110:Generated_Source\PSoC4/SPIM.c **** * Global variables:
1111:Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatus - used to store in software status register,
1112:Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC4/SPIM.c **** *
1114:Generated_Source\PSoC4/SPIM.c **** * Theory:
1115:Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the status register for error detection
1116:Generated_Source\PSoC4/SPIM.c **** *  and flow control.
1117:Generated_Source\PSoC4/SPIM.c **** *
1118:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
1119:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC4/SPIM.c **** *
1121:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
1122:Generated_Source\PSoC4/SPIM.c **** *  No.
1123:Generated_Source\PSoC4/SPIM.c **** *
1124:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1125:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadStatus(void) 
1126:Generated_Source\PSoC4/SPIM.c **** {
 1268              		.loc 1 1126 0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 0
 1271              		@ frame_needed = 0, uses_anonymous_args = 0
 1272 0000 70B5     		push	{r4, r5, r6, lr}
 1273              		.cfi_def_cfa_offset 16
 1274              		.cfi_offset 4, -16
 1275              		.cfi_offset 5, -12
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 44


 1276              		.cfi_offset 6, -8
 1277              		.cfi_offset 14, -4
1127:Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC4/SPIM.c **** 
1129:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC4/SPIM.c **** 
1131:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableInt();
 1278              		.loc 1 1131 0
 1279 0002 FFF7FEFF 		bl	SPIM_DisableInt
 1280              	.LVL89:
1132:Generated_Source\PSoC4/SPIM.c **** 
1133:Generated_Source\PSoC4/SPIM.c ****         tmpStatus  = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
 1281              		.loc 1 1133 0
 1282 0006 0D4B     		ldr	r3, .L80
 1283 0008 1A78     		ldrb	r2, [r3]
 1284 000a 0D48     		ldr	r0, .L80+4
 1285 000c 0478     		ldrb	r4, [r0]
 1286 000e 4023     		movs	r3, #64
 1287 0010 1C40     		ands	r4, r3
 1288 0012 2243     		orrs	r2, r4
 1289 0014 1100     		movs	r1, r2
 1290              	.LVL90:
1134:Generated_Source\PSoC4/SPIM.c ****         tmpStatus |= SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 1291              		.loc 1 1134 0
 1292 0016 0B4B     		ldr	r3, .L80+8
 1293 0018 1C78     		ldrb	r4, [r3]
 1294 001a 0B4D     		ldr	r5, .L80+12
 1295 001c 2B78     		ldrb	r3, [r5]
 1296 001e 0922     		movs	r2, #9
 1297 0020 1340     		ands	r3, r2
 1298 0022 2343     		orrs	r3, r4
 1299 0024 1943     		orrs	r1, r3
 1300              	.LVL91:
 1301 0026 0C00     		movs	r4, r1
 1302              	.LVL92:
1135:Generated_Source\PSoC4/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
 1303              		.loc 1 1135 0
 1304 0028 1023     		movs	r3, #16
 1305 002a 9C43     		bics	r4, r3
 1306              	.LVL93:
1136:Generated_Source\PSoC4/SPIM.c **** 
1137:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = 0u;
 1307              		.loc 1 1137 0
 1308 002c 0023     		movs	r3, #0
 1309 002e 2B70     		strb	r3, [r5]
1138:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusRx = 0u;
 1310              		.loc 1 1138 0
 1311 0030 0370     		strb	r3, [r0]
1139:Generated_Source\PSoC4/SPIM.c **** 
1140:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableInt();
 1312              		.loc 1 1140 0
 1313 0032 FFF7FEFF 		bl	SPIM_EnableInt
 1314              	.LVL94:
1141:Generated_Source\PSoC4/SPIM.c **** 
1142:Generated_Source\PSoC4/SPIM.c ****     #else
1143:Generated_Source\PSoC4/SPIM.c **** 
1144:Generated_Source\PSoC4/SPIM.c ****         tmpStatus  = SPIM_RX_STATUS_REG;
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 45


1145:Generated_Source\PSoC4/SPIM.c ****         tmpStatus |= SPIM_TX_STATUS_REG;
1146:Generated_Source\PSoC4/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
1147:Generated_Source\PSoC4/SPIM.c **** 
1148:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED) */
1149:Generated_Source\PSoC4/SPIM.c **** 
1150:Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
1151:Generated_Source\PSoC4/SPIM.c **** }
 1315              		.loc 1 1151 0
 1316 0036 2000     		movs	r0, r4
 1317              		@ sp needed
 1318              	.LVL95:
 1319 0038 70BD     		pop	{r4, r5, r6, pc}
 1320              	.L81:
 1321 003a C046     		.align	2
 1322              	.L80:
 1323 003c 62000F40 		.word	1074724962
 1324 0040 00000000 		.word	SPIM_swStatusRx
 1325 0044 64000F40 		.word	1074724964
 1326 0048 00000000 		.word	SPIM_swStatusTx
 1327              		.cfi_endproc
 1328              	.LFE24:
 1329              		.size	SPIM_ReadStatus, .-SPIM_ReadStatus
 1330              		.comm	SPIM_swStatusRx,1,1
 1331              		.comm	SPIM_swStatusTx,1,1
 1332              		.global	SPIM_initVar
 1333              		.comm	SPIM_rxBufferWrite,1,1
 1334              		.comm	SPIM_rxBufferRead,1,1
 1335              		.comm	SPIM_rxBufferFull,1,1
 1336              		.comm	SPIM_rxBuffer,30,4
 1337              		.comm	SPIM_txBufferWrite,1,1
 1338              		.comm	SPIM_txBufferRead,1,1
 1339              		.comm	SPIM_txBufferFull,1,1
 1340              		.comm	SPIM_txBuffer,16,4
 1341              		.bss
 1342              		.set	.LANCHOR0,. + 0
 1343              		.type	SPIM_initVar, %object
 1344              		.size	SPIM_initVar, 1
 1345              	SPIM_initVar:
 1346 0000 00       		.space	1
 1347              		.text
 1348              	.Letext0:
 1349              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1350              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1351              		.section	.debug_info,"",%progbits
 1352              	.Ldebug_info0:
 1353 0000 5C070000 		.4byte	0x75c
 1354 0004 0400     		.2byte	0x4
 1355 0006 00000000 		.4byte	.Ldebug_abbrev0
 1356 000a 04       		.byte	0x4
 1357 000b 01       		.uleb128 0x1
 1358 000c 4C000000 		.4byte	.LASF68
 1359 0010 0C       		.byte	0xc
 1360 0011 2E000000 		.4byte	.LASF69
 1361 0015 FB000000 		.4byte	.LASF70
 1362 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1363 001d 00000000 		.4byte	0
 1364 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 46


 1365 0025 02       		.uleb128 0x2
 1366 0026 01       		.byte	0x1
 1367 0027 06       		.byte	0x6
 1368 0028 83010000 		.4byte	.LASF0
 1369 002c 02       		.uleb128 0x2
 1370 002d 01       		.byte	0x1
 1371 002e 08       		.byte	0x8
 1372 002f 96030000 		.4byte	.LASF1
 1373 0033 02       		.uleb128 0x2
 1374 0034 02       		.byte	0x2
 1375 0035 05       		.byte	0x5
 1376 0036 C4030000 		.4byte	.LASF2
 1377 003a 02       		.uleb128 0x2
 1378 003b 02       		.byte	0x2
 1379 003c 07       		.byte	0x7
 1380 003d 86020000 		.4byte	.LASF3
 1381 0041 02       		.uleb128 0x2
 1382 0042 04       		.byte	0x4
 1383 0043 05       		.byte	0x5
 1384 0044 A1010000 		.4byte	.LASF4
 1385 0048 02       		.uleb128 0x2
 1386 0049 04       		.byte	0x4
 1387 004a 07       		.byte	0x7
 1388 004b 46020000 		.4byte	.LASF5
 1389 004f 02       		.uleb128 0x2
 1390 0050 08       		.byte	0x8
 1391 0051 05       		.byte	0x5
 1392 0052 75010000 		.4byte	.LASF6
 1393 0056 02       		.uleb128 0x2
 1394 0057 08       		.byte	0x8
 1395 0058 07       		.byte	0x7
 1396 0059 DA000000 		.4byte	.LASF7
 1397 005d 03       		.uleb128 0x3
 1398 005e 04       		.byte	0x4
 1399 005f 05       		.byte	0x5
 1400 0060 696E7400 		.ascii	"int\000"
 1401 0064 02       		.uleb128 0x2
 1402 0065 04       		.byte	0x4
 1403 0066 07       		.byte	0x7
 1404 0067 15020000 		.4byte	.LASF8
 1405 006b 04       		.uleb128 0x4
 1406 006c DA010000 		.4byte	.LASF12
 1407 0070 02       		.byte	0x2
 1408 0071 B901     		.2byte	0x1b9
 1409 0073 2C000000 		.4byte	0x2c
 1410 0077 02       		.uleb128 0x2
 1411 0078 04       		.byte	0x4
 1412 0079 04       		.byte	0x4
 1413 007a 7B030000 		.4byte	.LASF9
 1414 007e 02       		.uleb128 0x2
 1415 007f 08       		.byte	0x8
 1416 0080 04       		.byte	0x4
 1417 0081 E0010000 		.4byte	.LASF10
 1418 0085 02       		.uleb128 0x2
 1419 0086 01       		.byte	0x1
 1420 0087 08       		.byte	0x8
 1421 0088 46040000 		.4byte	.LASF11
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 47


 1422 008c 04       		.uleb128 0x4
 1423 008d 91030000 		.4byte	.LASF13
 1424 0091 02       		.byte	0x2
 1425 0092 6302     		.2byte	0x263
 1426 0094 98000000 		.4byte	0x98
 1427 0098 05       		.uleb128 0x5
 1428 0099 6B000000 		.4byte	0x6b
 1429 009d 02       		.uleb128 0x2
 1430 009e 08       		.byte	0x8
 1431 009f 04       		.byte	0x4
 1432 00a0 0D030000 		.4byte	.LASF14
 1433 00a4 02       		.uleb128 0x2
 1434 00a5 04       		.byte	0x4
 1435 00a6 07       		.byte	0x7
 1436 00a7 04030000 		.4byte	.LASF15
 1437 00ab 06       		.uleb128 0x6
 1438 00ac 6E040000 		.4byte	.LASF16
 1439 00b0 01       		.byte	0x1
 1440 00b1 E3       		.byte	0xe3
 1441 00b2 00000000 		.4byte	.LFB5
 1442 00b6 0A000000 		.4byte	.LFE5-.LFB5
 1443 00ba 01       		.uleb128 0x1
 1444 00bb 9C       		.byte	0x9c
 1445 00bc D0000000 		.4byte	0xd0
 1446 00c0 07       		.uleb128 0x7
 1447 00c1 08000000 		.4byte	.LVL0
 1448 00c5 1D070000 		.4byte	0x71d
 1449 00c9 08       		.uleb128 0x8
 1450 00ca 01       		.uleb128 0x1
 1451 00cb 50       		.byte	0x50
 1452 00cc 01       		.uleb128 0x1
 1453 00cd 31       		.byte	0x31
 1454 00ce 00       		.byte	0
 1455 00cf 00       		.byte	0
 1456 00d0 06       		.uleb128 0x6
 1457 00d1 2C030000 		.4byte	.LASF17
 1458 00d5 01       		.byte	0x1
 1459 00d6 FC       		.byte	0xfc
 1460 00d7 00000000 		.4byte	.LFB6
 1461 00db 0A000000 		.4byte	.LFE6-.LFB6
 1462 00df 01       		.uleb128 0x1
 1463 00e0 9C       		.byte	0x9c
 1464 00e1 F5000000 		.4byte	0xf5
 1465 00e5 07       		.uleb128 0x7
 1466 00e6 08000000 		.4byte	.LVL1
 1467 00ea 1D070000 		.4byte	0x71d
 1468 00ee 08       		.uleb128 0x8
 1469 00ef 01       		.uleb128 0x1
 1470 00f0 50       		.byte	0x50
 1471 00f1 01       		.uleb128 0x1
 1472 00f2 30       		.byte	0x30
 1473 00f3 00       		.byte	0
 1474 00f4 00       		.byte	0
 1475 00f5 06       		.uleb128 0x6
 1476 00f6 4B040000 		.4byte	.LASF18
 1477 00fa 01       		.byte	0x1
 1478 00fb 78       		.byte	0x78
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 48


 1479 00fc 00000000 		.4byte	.LFB2
 1480 0100 44000000 		.4byte	.LFE2-.LFB2
 1481 0104 01       		.uleb128 0x1
 1482 0105 9C       		.byte	0x9c
 1483 0106 3E010000 		.4byte	0x13e
 1484 010a 09       		.uleb128 0x9
 1485 010b 9F040000 		.4byte	.LASF22
 1486 010f 01       		.byte	0x1
 1487 0110 7A       		.byte	0x7a
 1488 0111 6B000000 		.4byte	0x6b
 1489 0115 00000000 		.4byte	.LLST0
 1490 0119 0A       		.uleb128 0xa
 1491 011a 06000000 		.4byte	.LVL2
 1492 011e 28070000 		.4byte	0x728
 1493 0122 0A       		.uleb128 0xa
 1494 0123 2C000000 		.4byte	.LVL3
 1495 0127 33070000 		.4byte	0x733
 1496 012b 0A       		.uleb128 0xa
 1497 012c 30000000 		.4byte	.LVL4
 1498 0130 AB000000 		.4byte	0xab
 1499 0134 0A       		.uleb128 0xa
 1500 0135 34000000 		.4byte	.LVL5
 1501 0139 D0000000 		.4byte	0xd0
 1502 013d 00       		.byte	0
 1503 013e 0B       		.uleb128 0xb
 1504 013f FB030000 		.4byte	.LASF19
 1505 0143 01       		.byte	0x1
 1506 0144 1501     		.2byte	0x115
 1507 0146 00000000 		.4byte	.LFB7
 1508 014a 0A000000 		.4byte	.LFE7-.LFB7
 1509 014e 01       		.uleb128 0x1
 1510 014f 9C       		.byte	0x9c
 1511 0150 64010000 		.4byte	0x164
 1512 0154 07       		.uleb128 0x7
 1513 0155 08000000 		.4byte	.LVL6
 1514 0159 3E070000 		.4byte	0x73e
 1515 015d 08       		.uleb128 0x8
 1516 015e 01       		.uleb128 0x1
 1517 015f 50       		.byte	0x50
 1518 0160 01       		.uleb128 0x1
 1519 0161 31       		.byte	0x31
 1520 0162 00       		.byte	0
 1521 0163 00       		.byte	0
 1522 0164 0B       		.uleb128 0xb
 1523 0165 C6020000 		.4byte	.LASF20
 1524 0169 01       		.byte	0x1
 1525 016a 2E01     		.2byte	0x12e
 1526 016c 00000000 		.4byte	.LFB8
 1527 0170 0A000000 		.4byte	.LFE8-.LFB8
 1528 0174 01       		.uleb128 0x1
 1529 0175 9C       		.byte	0x9c
 1530 0176 8A010000 		.4byte	0x18a
 1531 017a 07       		.uleb128 0x7
 1532 017b 08000000 		.4byte	.LVL7
 1533 017f 3E070000 		.4byte	0x73e
 1534 0183 08       		.uleb128 0x8
 1535 0184 01       		.uleb128 0x1
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 49


 1536 0185 50       		.byte	0x50
 1537 0186 01       		.uleb128 0x1
 1538 0187 30       		.byte	0x30
 1539 0188 00       		.byte	0
 1540 0189 00       		.byte	0
 1541 018a 06       		.uleb128 0x6
 1542 018b E7010000 		.4byte	.LASF21
 1543 018f 01       		.byte	0x1
 1544 0190 C0       		.byte	0xc0
 1545 0191 00000000 		.4byte	.LFB4
 1546 0195 30000000 		.4byte	.LFE4-.LFB4
 1547 0199 01       		.uleb128 0x1
 1548 019a 9C       		.byte	0x9c
 1549 019b D3010000 		.4byte	0x1d3
 1550 019f 09       		.uleb128 0x9
 1551 01a0 9F040000 		.4byte	.LASF22
 1552 01a4 01       		.byte	0x1
 1553 01a5 C2       		.byte	0xc2
 1554 01a6 6B000000 		.4byte	0x6b
 1555 01aa 13000000 		.4byte	.LLST1
 1556 01ae 0A       		.uleb128 0xa
 1557 01af 06000000 		.4byte	.LVL8
 1558 01b3 28070000 		.4byte	0x728
 1559 01b7 0A       		.uleb128 0xa
 1560 01b8 1C000000 		.4byte	.LVL9
 1561 01bc 33070000 		.4byte	0x733
 1562 01c0 0A       		.uleb128 0xa
 1563 01c1 20000000 		.4byte	.LVL10
 1564 01c5 3E010000 		.4byte	0x13e
 1565 01c9 0A       		.uleb128 0xa
 1566 01ca 24000000 		.4byte	.LVL11
 1567 01ce 64010000 		.4byte	0x164
 1568 01d2 00       		.byte	0
 1569 01d3 0B       		.uleb128 0xb
 1570 01d4 00000000 		.4byte	.LASF23
 1571 01d8 01       		.byte	0x1
 1572 01d9 4801     		.2byte	0x148
 1573 01db 00000000 		.4byte	.LFB9
 1574 01df 0C000000 		.4byte	.LFE9-.LFB9
 1575 01e3 01       		.uleb128 0x1
 1576 01e4 9C       		.byte	0x9c
 1577 01e5 F8010000 		.4byte	0x1f8
 1578 01e9 0C       		.uleb128 0xc
 1579 01ea BF020000 		.4byte	.LASF25
 1580 01ee 01       		.byte	0x1
 1581 01ef 4801     		.2byte	0x148
 1582 01f1 6B000000 		.4byte	0x6b
 1583 01f5 01       		.uleb128 0x1
 1584 01f6 50       		.byte	0x50
 1585 01f7 00       		.byte	0
 1586 01f8 0B       		.uleb128 0xb
 1587 01f9 17040000 		.4byte	.LASF24
 1588 01fd 01       		.byte	0x1
 1589 01fe 6001     		.2byte	0x160
 1590 0200 00000000 		.4byte	.LFB10
 1591 0204 0C000000 		.4byte	.LFE10-.LFB10
 1592 0208 01       		.uleb128 0x1
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 50


 1593 0209 9C       		.byte	0x9c
 1594 020a 1D020000 		.4byte	0x21d
 1595 020e 0C       		.uleb128 0xc
 1596 020f BF020000 		.4byte	.LASF25
 1597 0213 01       		.byte	0x1
 1598 0214 6001     		.2byte	0x160
 1599 0216 6B000000 		.4byte	0x6b
 1600 021a 01       		.uleb128 0x1
 1601 021b 50       		.byte	0x50
 1602 021c 00       		.byte	0
 1603 021d 0D       		.uleb128 0xd
 1604 021e E9030000 		.4byte	.LASF27
 1605 0222 01       		.byte	0x1
 1606 0223 8201     		.2byte	0x182
 1607 0225 6B000000 		.4byte	0x6b
 1608 0229 00000000 		.4byte	.LFB11
 1609 022d 28000000 		.4byte	.LFE11-.LFB11
 1610 0231 01       		.uleb128 0x1
 1611 0232 9C       		.byte	0x9c
 1612 0233 5A020000 		.4byte	0x25a
 1613 0237 0E       		.uleb128 0xe
 1614 0238 F1000000 		.4byte	.LASF26
 1615 023c 01       		.byte	0x1
 1616 023d 8401     		.2byte	0x184
 1617 023f 6B000000 		.4byte	0x6b
 1618 0243 26000000 		.4byte	.LLST2
 1619 0247 0A       		.uleb128 0xa
 1620 0248 06000000 		.4byte	.LVL14
 1621 024c 3E010000 		.4byte	0x13e
 1622 0250 0A       		.uleb128 0xa
 1623 0251 1C000000 		.4byte	.LVL16
 1624 0255 AB000000 		.4byte	0xab
 1625 0259 00       		.byte	0
 1626 025a 0D       		.uleb128 0xd
 1627 025b 03020000 		.4byte	.LASF28
 1628 025f 01       		.byte	0x1
 1629 0260 B501     		.2byte	0x1b5
 1630 0262 6B000000 		.4byte	0x6b
 1631 0266 00000000 		.4byte	.LFB12
 1632 026a 28000000 		.4byte	.LFE12-.LFB12
 1633 026e 01       		.uleb128 0x1
 1634 026f 9C       		.byte	0x9c
 1635 0270 97020000 		.4byte	0x297
 1636 0274 0E       		.uleb128 0xe
 1637 0275 F1000000 		.4byte	.LASF26
 1638 0279 01       		.byte	0x1
 1639 027a B701     		.2byte	0x1b7
 1640 027c 6B000000 		.4byte	0x6b
 1641 0280 44000000 		.4byte	.LLST3
 1642 0284 0A       		.uleb128 0xa
 1643 0285 06000000 		.4byte	.LVL18
 1644 0289 64010000 		.4byte	0x164
 1645 028d 0A       		.uleb128 0xa
 1646 028e 1C000000 		.4byte	.LVL20
 1647 0292 D0000000 		.4byte	0xd0
 1648 0296 00       		.byte	0
 1649 0297 0B       		.uleb128 0xb
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 51


 1650 0298 22020000 		.4byte	.LASF29
 1651 029c 01       		.byte	0x1
 1652 029d EE01     		.2byte	0x1ee
 1653 029f 00000000 		.4byte	.LFB13
 1654 02a3 D4000000 		.4byte	.LFE13-.LFB13
 1655 02a7 01       		.uleb128 0x1
 1656 02a8 9C       		.byte	0x9c
 1657 02a9 F0020000 		.4byte	0x2f0
 1658 02ad 0F       		.uleb128 0xf
 1659 02ae E5040000 		.4byte	.LASF30
 1660 02b2 01       		.byte	0x1
 1661 02b3 EE01     		.2byte	0x1ee
 1662 02b5 6B000000 		.4byte	0x6b
 1663 02b9 62000000 		.4byte	.LLST4
 1664 02bd 0E       		.uleb128 0xe
 1665 02be 3D030000 		.4byte	.LASF31
 1666 02c2 01       		.byte	0x1
 1667 02c3 F201     		.2byte	0x1f2
 1668 02c5 6B000000 		.4byte	0x6b
 1669 02c9 83000000 		.4byte	.LLST5
 1670 02cd 0E       		.uleb128 0xe
 1671 02ce B7010000 		.4byte	.LASF32
 1672 02d2 01       		.byte	0x1
 1673 02d3 F301     		.2byte	0x1f3
 1674 02d5 6B000000 		.4byte	0x6b
 1675 02d9 B4000000 		.4byte	.LLST6
 1676 02dd 0A       		.uleb128 0xa
 1677 02de 24000000 		.4byte	.LVL27
 1678 02e2 3E010000 		.4byte	0x13e
 1679 02e6 0A       		.uleb128 0xa
 1680 02e7 B0000000 		.4byte	.LVL33
 1681 02eb AB000000 		.4byte	0xab
 1682 02ef 00       		.byte	0
 1683 02f0 0D       		.uleb128 0xd
 1684 02f1 81030000 		.4byte	.LASF33
 1685 02f5 01       		.byte	0x1
 1686 02f6 5A02     		.2byte	0x25a
 1687 02f8 6B000000 		.4byte	0x6b
 1688 02fc 00000000 		.4byte	.LFB14
 1689 0300 64000000 		.4byte	.LFE14-.LFB14
 1690 0304 01       		.uleb128 0x1
 1691 0305 9C       		.byte	0x9c
 1692 0306 2D030000 		.4byte	0x32d
 1693 030a 0E       		.uleb128 0xe
 1694 030b 3F040000 		.4byte	.LASF34
 1695 030f 01       		.byte	0x1
 1696 0310 5C02     		.2byte	0x25c
 1697 0312 6B000000 		.4byte	0x6b
 1698 0316 DF000000 		.4byte	.LLST7
 1699 031a 0A       		.uleb128 0xa
 1700 031b 06000000 		.4byte	.LVL34
 1701 031f 64010000 		.4byte	0x164
 1702 0323 0A       		.uleb128 0xa
 1703 0324 4E000000 		.4byte	.LVL36
 1704 0328 D0000000 		.4byte	0xd0
 1705 032c 00       		.byte	0
 1706 032d 0D       		.uleb128 0xd
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 52


 1707 032e 7F040000 		.4byte	.LASF35
 1708 0332 01       		.byte	0x1
 1709 0333 9A02     		.2byte	0x29a
 1710 0335 6B000000 		.4byte	0x6b
 1711 0339 00000000 		.4byte	.LFB15
 1712 033d 58000000 		.4byte	.LFE15-.LFB15
 1713 0341 01       		.uleb128 0x1
 1714 0342 9C       		.byte	0x9c
 1715 0343 6A030000 		.4byte	0x36a
 1716 0347 0E       		.uleb128 0xe
 1717 0348 81020000 		.4byte	.LASF36
 1718 034c 01       		.byte	0x1
 1719 034d 9C02     		.2byte	0x29c
 1720 034f 6B000000 		.4byte	0x6b
 1721 0353 FD000000 		.4byte	.LLST8
 1722 0357 0A       		.uleb128 0xa
 1723 0358 06000000 		.4byte	.LVL38
 1724 035c 64010000 		.4byte	0x164
 1725 0360 0A       		.uleb128 0xa
 1726 0361 4A000000 		.4byte	.LVL44
 1727 0365 D0000000 		.4byte	0xd0
 1728 0369 00       		.byte	0
 1729 036a 0D       		.uleb128 0xd
 1730 036b 48030000 		.4byte	.LASF37
 1731 036f 01       		.byte	0x1
 1732 0370 D702     		.2byte	0x2d7
 1733 0372 6B000000 		.4byte	0x6b
 1734 0376 00000000 		.4byte	.LFB16
 1735 037a 58000000 		.4byte	.LFE16-.LFB16
 1736 037e 01       		.uleb128 0x1
 1737 037f 9C       		.byte	0x9c
 1738 0380 A7030000 		.4byte	0x3a7
 1739 0384 0E       		.uleb128 0xe
 1740 0385 81020000 		.4byte	.LASF36
 1741 0389 01       		.byte	0x1
 1742 038a D902     		.2byte	0x2d9
 1743 038c 6B000000 		.4byte	0x6b
 1744 0390 26010000 		.4byte	.LLST9
 1745 0394 0A       		.uleb128 0xa
 1746 0395 06000000 		.4byte	.LVL46
 1747 0399 3E010000 		.4byte	0x13e
 1748 039d 0A       		.uleb128 0xa
 1749 039e 4A000000 		.4byte	.LVL52
 1750 03a2 AB000000 		.4byte	0xab
 1751 03a6 00       		.byte	0
 1752 03a7 0B       		.uleb128 0xb
 1753 03a8 C7010000 		.4byte	.LASF38
 1754 03ac 01       		.byte	0x1
 1755 03ad 2603     		.2byte	0x326
 1756 03af 00000000 		.4byte	.LFB17
 1757 03b3 3C000000 		.4byte	.LFE17-.LFB17
 1758 03b7 01       		.uleb128 0x1
 1759 03b8 9C       		.byte	0x9c
 1760 03b9 D0030000 		.4byte	0x3d0
 1761 03bd 0A       		.uleb128 0xa
 1762 03be 14000000 		.4byte	.LVL54
 1763 03c2 64010000 		.4byte	0x164
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 53


 1764 03c6 0A       		.uleb128 0xa
 1765 03c7 26000000 		.4byte	.LVL55
 1766 03cb D0000000 		.4byte	0xd0
 1767 03cf 00       		.byte	0
 1768 03d0 0B       		.uleb128 0xb
 1769 03d1 B0040000 		.4byte	.LASF39
 1770 03d5 01       		.byte	0x1
 1771 03d6 5D03     		.2byte	0x35d
 1772 03d8 00000000 		.4byte	.LFB18
 1773 03dc 54000000 		.4byte	.LFE18-.LFB18
 1774 03e0 01       		.uleb128 0x1
 1775 03e1 9C       		.byte	0x9c
 1776 03e2 1B040000 		.4byte	0x41b
 1777 03e6 0E       		.uleb128 0xe
 1778 03e7 9F040000 		.4byte	.LASF22
 1779 03eb 01       		.byte	0x1
 1780 03ec 5F03     		.2byte	0x35f
 1781 03ee 6B000000 		.4byte	0x6b
 1782 03f2 4F010000 		.4byte	.LLST10
 1783 03f6 0A       		.uleb128 0xa
 1784 03f7 06000000 		.4byte	.LVL56
 1785 03fb 28070000 		.4byte	0x728
 1786 03ff 0A       		.uleb128 0xa
 1787 0400 1E000000 		.4byte	.LVL57
 1788 0404 33070000 		.4byte	0x733
 1789 0408 0A       		.uleb128 0xa
 1790 0409 22000000 		.4byte	.LVL58
 1791 040d 3E010000 		.4byte	0x13e
 1792 0411 0A       		.uleb128 0xa
 1793 0412 3E000000 		.4byte	.LVL59
 1794 0416 AB000000 		.4byte	0xab
 1795 041a 00       		.byte	0
 1796 041b 0B       		.uleb128 0xb
 1797 041c E8020000 		.4byte	.LASF40
 1798 0420 01       		.byte	0x1
 1799 0421 C203     		.2byte	0x3c2
 1800 0423 00000000 		.4byte	.LFB19
 1801 0427 1E000000 		.4byte	.LFE19-.LFB19
 1802 042b 01       		.uleb128 0x1
 1803 042c 9C       		.byte	0x9c
 1804 042d 6B040000 		.4byte	0x46b
 1805 0431 0F       		.uleb128 0xf
 1806 0432 67040000 		.4byte	.LASF41
 1807 0436 01       		.byte	0x1
 1808 0437 C203     		.2byte	0x3c2
 1809 0439 6B040000 		.4byte	0x46b
 1810 043d 62010000 		.4byte	.LLST11
 1811 0441 0F       		.uleb128 0xf
 1812 0442 0D040000 		.4byte	.LASF42
 1813 0446 01       		.byte	0x1
 1814 0447 C203     		.2byte	0x3c2
 1815 0449 6B000000 		.4byte	0x6b
 1816 044d 8E010000 		.4byte	.LLST12
 1817 0451 0E       		.uleb128 0xe
 1818 0452 A7020000 		.4byte	.LASF43
 1819 0456 01       		.byte	0x1
 1820 0457 C503     		.2byte	0x3c5
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 54


 1821 0459 6B000000 		.4byte	0x6b
 1822 045d B7010000 		.4byte	.LLST13
 1823 0461 0A       		.uleb128 0xa
 1824 0462 10000000 		.4byte	.LVL63
 1825 0466 97020000 		.4byte	0x297
 1826 046a 00       		.byte	0
 1827 046b 10       		.uleb128 0x10
 1828 046c 04       		.byte	0x4
 1829 046d 71040000 		.4byte	0x471
 1830 0471 11       		.uleb128 0x11
 1831 0472 6B000000 		.4byte	0x6b
 1832 0476 0B       		.uleb128 0xb
 1833 0477 B0020000 		.4byte	.LASF44
 1834 047b 01       		.byte	0x1
 1835 047c E303     		.2byte	0x3e3
 1836 047e 00000000 		.4byte	.LFB20
 1837 0482 3C000000 		.4byte	.LFE20-.LFB20
 1838 0486 01       		.uleb128 0x1
 1839 0487 9C       		.byte	0x9c
 1840 0488 AF040000 		.4byte	0x4af
 1841 048c 0E       		.uleb128 0xe
 1842 048d 9F040000 		.4byte	.LASF22
 1843 0491 01       		.byte	0x1
 1844 0492 E503     		.2byte	0x3e5
 1845 0494 6B000000 		.4byte	0x6b
 1846 0498 E1010000 		.4byte	.LLST14
 1847 049c 0A       		.uleb128 0xa
 1848 049d 14000000 		.4byte	.LVL71
 1849 04a1 28070000 		.4byte	0x728
 1850 04a5 0A       		.uleb128 0xa
 1851 04a6 2C000000 		.4byte	.LVL72
 1852 04aa 33070000 		.4byte	0x733
 1853 04ae 00       		.byte	0
 1854 04af 06       		.uleb128 0x6
 1855 04b0 BA030000 		.4byte	.LASF45
 1856 04b4 01       		.byte	0x1
 1857 04b5 3F       		.byte	0x3f
 1858 04b6 00000000 		.4byte	.LFB1
 1859 04ba 94000000 		.4byte	.LFE1-.LFB1
 1860 04be 01       		.uleb128 0x1
 1861 04bf 9C       		.byte	0x9c
 1862 04c0 5C050000 		.4byte	0x55c
 1863 04c4 12       		.uleb128 0x12
 1864 04c5 0E000000 		.4byte	.LVL73
 1865 04c9 3E070000 		.4byte	0x73e
 1866 04cd D7040000 		.4byte	0x4d7
 1867 04d1 08       		.uleb128 0x8
 1868 04d2 01       		.uleb128 0x1
 1869 04d3 50       		.byte	0x50
 1870 04d4 01       		.uleb128 0x1
 1871 04d5 31       		.byte	0x31
 1872 04d6 00       		.byte	0
 1873 04d7 12       		.uleb128 0x12
 1874 04d8 16000000 		.4byte	.LVL74
 1875 04dc 49070000 		.4byte	0x749
 1876 04e0 EF040000 		.4byte	0x4ef
 1877 04e4 08       		.uleb128 0x8
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 55


 1878 04e5 01       		.uleb128 0x1
 1879 04e6 50       		.byte	0x50
 1880 04e7 01       		.uleb128 0x1
 1881 04e8 31       		.byte	0x31
 1882 04e9 08       		.uleb128 0x8
 1883 04ea 01       		.uleb128 0x1
 1884 04eb 51       		.byte	0x51
 1885 04ec 01       		.uleb128 0x1
 1886 04ed 33       		.byte	0x33
 1887 04ee 00       		.byte	0
 1888 04ef 12       		.uleb128 0x12
 1889 04f0 1E000000 		.4byte	.LVL75
 1890 04f4 54070000 		.4byte	0x754
 1891 04f8 02050000 		.4byte	0x502
 1892 04fc 08       		.uleb128 0x8
 1893 04fd 01       		.uleb128 0x1
 1894 04fe 50       		.byte	0x50
 1895 04ff 01       		.uleb128 0x1
 1896 0500 31       		.byte	0x31
 1897 0501 00       		.byte	0
 1898 0502 12       		.uleb128 0x12
 1899 0503 24000000 		.4byte	.LVL76
 1900 0507 3E070000 		.4byte	0x73e
 1901 050b 15050000 		.4byte	0x515
 1902 050f 08       		.uleb128 0x8
 1903 0510 01       		.uleb128 0x1
 1904 0511 50       		.byte	0x50
 1905 0512 01       		.uleb128 0x1
 1906 0513 30       		.byte	0x30
 1907 0514 00       		.byte	0
 1908 0515 12       		.uleb128 0x12
 1909 0516 2C000000 		.4byte	.LVL77
 1910 051a 49070000 		.4byte	0x749
 1911 051e 2D050000 		.4byte	0x52d
 1912 0522 08       		.uleb128 0x8
 1913 0523 01       		.uleb128 0x1
 1914 0524 50       		.byte	0x50
 1915 0525 01       		.uleb128 0x1
 1916 0526 30       		.byte	0x30
 1917 0527 08       		.uleb128 0x8
 1918 0528 01       		.uleb128 0x1
 1919 0529 51       		.byte	0x51
 1920 052a 01       		.uleb128 0x1
 1921 052b 33       		.byte	0x33
 1922 052c 00       		.byte	0
 1923 052d 12       		.uleb128 0x12
 1924 052e 34000000 		.4byte	.LVL78
 1925 0532 54070000 		.4byte	0x754
 1926 0536 40050000 		.4byte	0x540
 1927 053a 08       		.uleb128 0x8
 1928 053b 01       		.uleb128 0x1
 1929 053c 50       		.byte	0x50
 1930 053d 01       		.uleb128 0x1
 1931 053e 30       		.byte	0x30
 1932 053f 00       		.byte	0
 1933 0540 0A       		.uleb128 0xa
 1934 0541 38000000 		.4byte	.LVL79
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 56


 1935 0545 76040000 		.4byte	0x476
 1936 0549 0A       		.uleb128 0xa
 1937 054a 56000000 		.4byte	.LVL80
 1938 054e 1D020000 		.4byte	0x21d
 1939 0552 0A       		.uleb128 0xa
 1940 0553 5A000000 		.4byte	.LVL81
 1941 0557 5A020000 		.4byte	0x25a
 1942 055b 00       		.byte	0
 1943 055c 06       		.uleb128 0x6
 1944 055d 94040000 		.4byte	.LASF46
 1945 0561 01       		.byte	0x1
 1946 0562 A3       		.byte	0xa3
 1947 0563 00000000 		.4byte	.LFB3
 1948 0567 20000000 		.4byte	.LFE3-.LFB3
 1949 056b 01       		.uleb128 0x1
 1950 056c 9C       		.byte	0x9c
 1951 056d 84050000 		.4byte	0x584
 1952 0571 0A       		.uleb128 0xa
 1953 0572 0E000000 		.4byte	.LVL82
 1954 0576 AF040000 		.4byte	0x4af
 1955 057a 0A       		.uleb128 0xa
 1956 057b 18000000 		.4byte	.LVL83
 1957 057f F5000000 		.4byte	0xf5
 1958 0583 00       		.byte	0
 1959 0584 0B       		.uleb128 0xb
 1960 0585 CE030000 		.4byte	.LASF47
 1961 0589 01       		.byte	0x1
 1962 058a 1104     		.2byte	0x411
 1963 058c 00000000 		.4byte	.LFB21
 1964 0590 0C000000 		.4byte	.LFE21-.LFB21
 1965 0594 01       		.uleb128 0x1
 1966 0595 9C       		.byte	0x9c
 1967 0596 AD050000 		.4byte	0x5ad
 1968 059a 0A       		.uleb128 0xa
 1969 059b 06000000 		.4byte	.LVL84
 1970 059f D0000000 		.4byte	0xd0
 1971 05a3 0A       		.uleb128 0xa
 1972 05a4 0A000000 		.4byte	.LVL85
 1973 05a8 AB000000 		.4byte	0xab
 1974 05ac 00       		.byte	0
 1975 05ad 0B       		.uleb128 0xb
 1976 05ae D5040000 		.4byte	.LASF48
 1977 05b2 01       		.byte	0x1
 1978 05b3 2904     		.2byte	0x429
 1979 05b5 00000000 		.4byte	.LFB22
 1980 05b9 0C000000 		.4byte	.LFE22-.LFB22
 1981 05bd 01       		.uleb128 0x1
 1982 05be 9C       		.byte	0x9c
 1983 05bf D6050000 		.4byte	0x5d6
 1984 05c3 0A       		.uleb128 0xa
 1985 05c4 06000000 		.4byte	.LVL86
 1986 05c8 3E010000 		.4byte	0x13e
 1987 05cc 0A       		.uleb128 0xa
 1988 05cd 0A000000 		.4byte	.LVL87
 1989 05d1 64010000 		.4byte	0x164
 1990 05d5 00       		.byte	0
 1991 05d6 0B       		.uleb128 0xb
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 57


 1992 05d7 A4030000 		.4byte	.LASF49
 1993 05db 01       		.byte	0x1
 1994 05dc 4204     		.2byte	0x442
 1995 05de 00000000 		.4byte	.LFB23
 1996 05e2 18000000 		.4byte	.LFE23-.LFB23
 1997 05e6 01       		.uleb128 0x1
 1998 05e7 9C       		.byte	0x9c
 1999 05e8 FB050000 		.4byte	0x5fb
 2000 05ec 0C       		.uleb128 0xc
 2001 05ed BF020000 		.4byte	.LASF25
 2002 05f1 01       		.byte	0x1
 2003 05f2 4204     		.2byte	0x442
 2004 05f4 6B000000 		.4byte	0x6b
 2005 05f8 01       		.uleb128 0x1
 2006 05f9 50       		.byte	0x50
 2007 05fa 00       		.byte	0
 2008 05fb 0D       		.uleb128 0xd
 2009 05fc 57040000 		.4byte	.LASF50
 2010 0600 01       		.byte	0x1
 2011 0601 6504     		.2byte	0x465
 2012 0603 6B000000 		.4byte	0x6b
 2013 0607 00000000 		.4byte	.LFB24
 2014 060b 4C000000 		.4byte	.LFE24-.LFB24
 2015 060f 01       		.uleb128 0x1
 2016 0610 9C       		.byte	0x9c
 2017 0611 38060000 		.4byte	0x638
 2018 0615 0E       		.uleb128 0xe
 2019 0616 F1000000 		.4byte	.LASF26
 2020 061a 01       		.byte	0x1
 2021 061b 6704     		.2byte	0x467
 2022 061d 6B000000 		.4byte	0x6b
 2023 0621 F4010000 		.4byte	.LLST15
 2024 0625 0A       		.uleb128 0xa
 2025 0626 06000000 		.4byte	.LVL89
 2026 062a AD050000 		.4byte	0x5ad
 2027 062e 0A       		.uleb128 0xa
 2028 062f 36000000 		.4byte	.LVL94
 2029 0633 84050000 		.4byte	0x584
 2030 0637 00       		.byte	0
 2031 0638 13       		.uleb128 0x13
 2032 0639 6E030000 		.4byte	.LASF51
 2033 063d 01       		.byte	0x1
 2034 063e 22       		.byte	0x22
 2035 063f 6B000000 		.4byte	0x6b
 2036 0643 05       		.uleb128 0x5
 2037 0644 03       		.byte	0x3
 2038 0645 00000000 		.4byte	SPIM_initVar
 2039 0649 13       		.uleb128 0x13
 2040 064a 2F040000 		.4byte	.LASF52
 2041 064e 01       		.byte	0x1
 2042 064f 24       		.byte	0x24
 2043 0650 98000000 		.4byte	0x98
 2044 0654 05       		.uleb128 0x5
 2045 0655 03       		.byte	0x3
 2046 0656 00000000 		.4byte	SPIM_swStatusTx
 2047 065a 13       		.uleb128 0x13
 2048 065b D8020000 		.4byte	.LASF53
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 58


 2049 065f 01       		.byte	0x1
 2050 0660 25       		.byte	0x25
 2051 0661 98000000 		.4byte	0x98
 2052 0665 05       		.uleb128 0x5
 2053 0666 03       		.byte	0x3
 2054 0667 00000000 		.4byte	SPIM_swStatusRx
 2055 066b 14       		.uleb128 0x14
 2056 066c 98000000 		.4byte	0x98
 2057 0670 7B060000 		.4byte	0x67b
 2058 0674 15       		.uleb128 0x15
 2059 0675 A4000000 		.4byte	0xa4
 2060 0679 0F       		.byte	0xf
 2061 067a 00       		.byte	0
 2062 067b 13       		.uleb128 0x13
 2063 067c 99020000 		.4byte	.LASF54
 2064 0680 01       		.byte	0x1
 2065 0681 15       		.byte	0x15
 2066 0682 8C060000 		.4byte	0x68c
 2067 0686 05       		.uleb128 0x5
 2068 0687 03       		.byte	0x3
 2069 0688 00000000 		.4byte	SPIM_txBuffer
 2070 068c 05       		.uleb128 0x5
 2071 068d 6B060000 		.4byte	0x66b
 2072 0691 13       		.uleb128 0x13
 2073 0692 6F020000 		.4byte	.LASF55
 2074 0696 01       		.byte	0x1
 2075 0697 17       		.byte	0x17
 2076 0698 98000000 		.4byte	0x98
 2077 069c 05       		.uleb128 0x5
 2078 069d 03       		.byte	0x3
 2079 069e 00000000 		.4byte	SPIM_txBufferRead
 2080 06a2 13       		.uleb128 0x13
 2081 06a3 33020000 		.4byte	.LASF56
 2082 06a7 01       		.byte	0x1
 2083 06a8 18       		.byte	0x18
 2084 06a9 98000000 		.4byte	0x98
 2085 06ad 05       		.uleb128 0x5
 2086 06ae 03       		.byte	0x3
 2087 06af 00000000 		.4byte	SPIM_txBufferWrite
 2088 06b3 13       		.uleb128 0x13
 2089 06b4 F1010000 		.4byte	.LASF57
 2090 06b8 01       		.byte	0x1
 2091 06b9 16       		.byte	0x16
 2092 06ba 98000000 		.4byte	0x98
 2093 06be 05       		.uleb128 0x5
 2094 06bf 03       		.byte	0x3
 2095 06c0 00000000 		.4byte	SPIM_txBufferFull
 2096 06c4 14       		.uleb128 0x14
 2097 06c5 98000000 		.4byte	0x98
 2098 06c9 D4060000 		.4byte	0x6d4
 2099 06cd 15       		.uleb128 0x15
 2100 06ce A4000000 		.4byte	0xa4
 2101 06d2 1D       		.byte	0x1d
 2102 06d3 00       		.byte	0
 2103 06d4 13       		.uleb128 0x13
 2104 06d5 F6020000 		.4byte	.LASF58
 2105 06d9 01       		.byte	0x1
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 59


 2106 06da 1C       		.byte	0x1c
 2107 06db E5060000 		.4byte	0x6e5
 2108 06df 05       		.uleb128 0x5
 2109 06e0 03       		.byte	0x3
 2110 06e1 00000000 		.4byte	SPIM_rxBuffer
 2111 06e5 05       		.uleb128 0x5
 2112 06e6 C4060000 		.4byte	0x6c4
 2113 06ea 13       		.uleb128 0x13
 2114 06eb C3040000 		.4byte	.LASF59
 2115 06ef 01       		.byte	0x1
 2116 06f0 1E       		.byte	0x1e
 2117 06f1 98000000 		.4byte	0x98
 2118 06f5 05       		.uleb128 0x5
 2119 06f6 03       		.byte	0x3
 2120 06f7 00000000 		.4byte	SPIM_rxBufferRead
 2121 06fb 13       		.uleb128 0x13
 2122 06fc 19030000 		.4byte	.LASF60
 2123 0700 01       		.byte	0x1
 2124 0701 1F       		.byte	0x1f
 2125 0702 98000000 		.4byte	0x98
 2126 0706 05       		.uleb128 0x5
 2127 0707 03       		.byte	0x3
 2128 0708 00000000 		.4byte	SPIM_rxBufferWrite
 2129 070c 13       		.uleb128 0x13
 2130 070d 8F010000 		.4byte	.LASF61
 2131 0711 01       		.byte	0x1
 2132 0712 1D       		.byte	0x1d
 2133 0713 98000000 		.4byte	0x98
 2134 0717 05       		.uleb128 0x5
 2135 0718 03       		.byte	0x3
 2136 0719 00000000 		.4byte	SPIM_rxBufferFull
 2137 071d 16       		.uleb128 0x16
 2138 071e DD030000 		.4byte	.LASF62
 2139 0722 DD030000 		.4byte	.LASF62
 2140 0726 03       		.byte	0x3
 2141 0727 C3       		.byte	0xc3
 2142 0728 16       		.uleb128 0x16
 2143 0729 58020000 		.4byte	.LASF63
 2144 072d 58020000 		.4byte	.LASF63
 2145 0731 03       		.byte	0x3
 2146 0732 E5       		.byte	0xe5
 2147 0733 16       		.uleb128 0x16
 2148 0734 18000000 		.4byte	.LASF64
 2149 0738 18000000 		.4byte	.LASF64
 2150 073c 03       		.byte	0x3
 2151 073d E6       		.byte	0xe6
 2152 073e 16       		.uleb128 0x16
 2153 073f AA010000 		.4byte	.LASF65
 2154 0743 AA010000 		.4byte	.LASF65
 2155 0747 03       		.byte	0x3
 2156 0748 C5       		.byte	0xc5
 2157 0749 16       		.uleb128 0x16
 2158 074a 5D030000 		.4byte	.LASF66
 2159 074e 5D030000 		.4byte	.LASF66
 2160 0752 03       		.byte	0x3
 2161 0753 C0       		.byte	0xc0
 2162 0754 16       		.uleb128 0x16
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 60


 2163 0755 66010000 		.4byte	.LASF67
 2164 0759 66010000 		.4byte	.LASF67
 2165 075d 03       		.byte	0x3
 2166 075e BD       		.byte	0xbd
 2167 075f 00       		.byte	0
 2168              		.section	.debug_abbrev,"",%progbits
 2169              	.Ldebug_abbrev0:
 2170 0000 01       		.uleb128 0x1
 2171 0001 11       		.uleb128 0x11
 2172 0002 01       		.byte	0x1
 2173 0003 25       		.uleb128 0x25
 2174 0004 0E       		.uleb128 0xe
 2175 0005 13       		.uleb128 0x13
 2176 0006 0B       		.uleb128 0xb
 2177 0007 03       		.uleb128 0x3
 2178 0008 0E       		.uleb128 0xe
 2179 0009 1B       		.uleb128 0x1b
 2180 000a 0E       		.uleb128 0xe
 2181 000b 55       		.uleb128 0x55
 2182 000c 17       		.uleb128 0x17
 2183 000d 11       		.uleb128 0x11
 2184 000e 01       		.uleb128 0x1
 2185 000f 10       		.uleb128 0x10
 2186 0010 17       		.uleb128 0x17
 2187 0011 00       		.byte	0
 2188 0012 00       		.byte	0
 2189 0013 02       		.uleb128 0x2
 2190 0014 24       		.uleb128 0x24
 2191 0015 00       		.byte	0
 2192 0016 0B       		.uleb128 0xb
 2193 0017 0B       		.uleb128 0xb
 2194 0018 3E       		.uleb128 0x3e
 2195 0019 0B       		.uleb128 0xb
 2196 001a 03       		.uleb128 0x3
 2197 001b 0E       		.uleb128 0xe
 2198 001c 00       		.byte	0
 2199 001d 00       		.byte	0
 2200 001e 03       		.uleb128 0x3
 2201 001f 24       		.uleb128 0x24
 2202 0020 00       		.byte	0
 2203 0021 0B       		.uleb128 0xb
 2204 0022 0B       		.uleb128 0xb
 2205 0023 3E       		.uleb128 0x3e
 2206 0024 0B       		.uleb128 0xb
 2207 0025 03       		.uleb128 0x3
 2208 0026 08       		.uleb128 0x8
 2209 0027 00       		.byte	0
 2210 0028 00       		.byte	0
 2211 0029 04       		.uleb128 0x4
 2212 002a 16       		.uleb128 0x16
 2213 002b 00       		.byte	0
 2214 002c 03       		.uleb128 0x3
 2215 002d 0E       		.uleb128 0xe
 2216 002e 3A       		.uleb128 0x3a
 2217 002f 0B       		.uleb128 0xb
 2218 0030 3B       		.uleb128 0x3b
 2219 0031 05       		.uleb128 0x5
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 61


 2220 0032 49       		.uleb128 0x49
 2221 0033 13       		.uleb128 0x13
 2222 0034 00       		.byte	0
 2223 0035 00       		.byte	0
 2224 0036 05       		.uleb128 0x5
 2225 0037 35       		.uleb128 0x35
 2226 0038 00       		.byte	0
 2227 0039 49       		.uleb128 0x49
 2228 003a 13       		.uleb128 0x13
 2229 003b 00       		.byte	0
 2230 003c 00       		.byte	0
 2231 003d 06       		.uleb128 0x6
 2232 003e 2E       		.uleb128 0x2e
 2233 003f 01       		.byte	0x1
 2234 0040 3F       		.uleb128 0x3f
 2235 0041 19       		.uleb128 0x19
 2236 0042 03       		.uleb128 0x3
 2237 0043 0E       		.uleb128 0xe
 2238 0044 3A       		.uleb128 0x3a
 2239 0045 0B       		.uleb128 0xb
 2240 0046 3B       		.uleb128 0x3b
 2241 0047 0B       		.uleb128 0xb
 2242 0048 27       		.uleb128 0x27
 2243 0049 19       		.uleb128 0x19
 2244 004a 11       		.uleb128 0x11
 2245 004b 01       		.uleb128 0x1
 2246 004c 12       		.uleb128 0x12
 2247 004d 06       		.uleb128 0x6
 2248 004e 40       		.uleb128 0x40
 2249 004f 18       		.uleb128 0x18
 2250 0050 9742     		.uleb128 0x2117
 2251 0052 19       		.uleb128 0x19
 2252 0053 01       		.uleb128 0x1
 2253 0054 13       		.uleb128 0x13
 2254 0055 00       		.byte	0
 2255 0056 00       		.byte	0
 2256 0057 07       		.uleb128 0x7
 2257 0058 898201   		.uleb128 0x4109
 2258 005b 01       		.byte	0x1
 2259 005c 11       		.uleb128 0x11
 2260 005d 01       		.uleb128 0x1
 2261 005e 31       		.uleb128 0x31
 2262 005f 13       		.uleb128 0x13
 2263 0060 00       		.byte	0
 2264 0061 00       		.byte	0
 2265 0062 08       		.uleb128 0x8
 2266 0063 8A8201   		.uleb128 0x410a
 2267 0066 00       		.byte	0
 2268 0067 02       		.uleb128 0x2
 2269 0068 18       		.uleb128 0x18
 2270 0069 9142     		.uleb128 0x2111
 2271 006b 18       		.uleb128 0x18
 2272 006c 00       		.byte	0
 2273 006d 00       		.byte	0
 2274 006e 09       		.uleb128 0x9
 2275 006f 34       		.uleb128 0x34
 2276 0070 00       		.byte	0
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 62


 2277 0071 03       		.uleb128 0x3
 2278 0072 0E       		.uleb128 0xe
 2279 0073 3A       		.uleb128 0x3a
 2280 0074 0B       		.uleb128 0xb
 2281 0075 3B       		.uleb128 0x3b
 2282 0076 0B       		.uleb128 0xb
 2283 0077 49       		.uleb128 0x49
 2284 0078 13       		.uleb128 0x13
 2285 0079 02       		.uleb128 0x2
 2286 007a 17       		.uleb128 0x17
 2287 007b 00       		.byte	0
 2288 007c 00       		.byte	0
 2289 007d 0A       		.uleb128 0xa
 2290 007e 898201   		.uleb128 0x4109
 2291 0081 00       		.byte	0
 2292 0082 11       		.uleb128 0x11
 2293 0083 01       		.uleb128 0x1
 2294 0084 31       		.uleb128 0x31
 2295 0085 13       		.uleb128 0x13
 2296 0086 00       		.byte	0
 2297 0087 00       		.byte	0
 2298 0088 0B       		.uleb128 0xb
 2299 0089 2E       		.uleb128 0x2e
 2300 008a 01       		.byte	0x1
 2301 008b 3F       		.uleb128 0x3f
 2302 008c 19       		.uleb128 0x19
 2303 008d 03       		.uleb128 0x3
 2304 008e 0E       		.uleb128 0xe
 2305 008f 3A       		.uleb128 0x3a
 2306 0090 0B       		.uleb128 0xb
 2307 0091 3B       		.uleb128 0x3b
 2308 0092 05       		.uleb128 0x5
 2309 0093 27       		.uleb128 0x27
 2310 0094 19       		.uleb128 0x19
 2311 0095 11       		.uleb128 0x11
 2312 0096 01       		.uleb128 0x1
 2313 0097 12       		.uleb128 0x12
 2314 0098 06       		.uleb128 0x6
 2315 0099 40       		.uleb128 0x40
 2316 009a 18       		.uleb128 0x18
 2317 009b 9742     		.uleb128 0x2117
 2318 009d 19       		.uleb128 0x19
 2319 009e 01       		.uleb128 0x1
 2320 009f 13       		.uleb128 0x13
 2321 00a0 00       		.byte	0
 2322 00a1 00       		.byte	0
 2323 00a2 0C       		.uleb128 0xc
 2324 00a3 05       		.uleb128 0x5
 2325 00a4 00       		.byte	0
 2326 00a5 03       		.uleb128 0x3
 2327 00a6 0E       		.uleb128 0xe
 2328 00a7 3A       		.uleb128 0x3a
 2329 00a8 0B       		.uleb128 0xb
 2330 00a9 3B       		.uleb128 0x3b
 2331 00aa 05       		.uleb128 0x5
 2332 00ab 49       		.uleb128 0x49
 2333 00ac 13       		.uleb128 0x13
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 63


 2334 00ad 02       		.uleb128 0x2
 2335 00ae 18       		.uleb128 0x18
 2336 00af 00       		.byte	0
 2337 00b0 00       		.byte	0
 2338 00b1 0D       		.uleb128 0xd
 2339 00b2 2E       		.uleb128 0x2e
 2340 00b3 01       		.byte	0x1
 2341 00b4 3F       		.uleb128 0x3f
 2342 00b5 19       		.uleb128 0x19
 2343 00b6 03       		.uleb128 0x3
 2344 00b7 0E       		.uleb128 0xe
 2345 00b8 3A       		.uleb128 0x3a
 2346 00b9 0B       		.uleb128 0xb
 2347 00ba 3B       		.uleb128 0x3b
 2348 00bb 05       		.uleb128 0x5
 2349 00bc 27       		.uleb128 0x27
 2350 00bd 19       		.uleb128 0x19
 2351 00be 49       		.uleb128 0x49
 2352 00bf 13       		.uleb128 0x13
 2353 00c0 11       		.uleb128 0x11
 2354 00c1 01       		.uleb128 0x1
 2355 00c2 12       		.uleb128 0x12
 2356 00c3 06       		.uleb128 0x6
 2357 00c4 40       		.uleb128 0x40
 2358 00c5 18       		.uleb128 0x18
 2359 00c6 9742     		.uleb128 0x2117
 2360 00c8 19       		.uleb128 0x19
 2361 00c9 01       		.uleb128 0x1
 2362 00ca 13       		.uleb128 0x13
 2363 00cb 00       		.byte	0
 2364 00cc 00       		.byte	0
 2365 00cd 0E       		.uleb128 0xe
 2366 00ce 34       		.uleb128 0x34
 2367 00cf 00       		.byte	0
 2368 00d0 03       		.uleb128 0x3
 2369 00d1 0E       		.uleb128 0xe
 2370 00d2 3A       		.uleb128 0x3a
 2371 00d3 0B       		.uleb128 0xb
 2372 00d4 3B       		.uleb128 0x3b
 2373 00d5 05       		.uleb128 0x5
 2374 00d6 49       		.uleb128 0x49
 2375 00d7 13       		.uleb128 0x13
 2376 00d8 02       		.uleb128 0x2
 2377 00d9 17       		.uleb128 0x17
 2378 00da 00       		.byte	0
 2379 00db 00       		.byte	0
 2380 00dc 0F       		.uleb128 0xf
 2381 00dd 05       		.uleb128 0x5
 2382 00de 00       		.byte	0
 2383 00df 03       		.uleb128 0x3
 2384 00e0 0E       		.uleb128 0xe
 2385 00e1 3A       		.uleb128 0x3a
 2386 00e2 0B       		.uleb128 0xb
 2387 00e3 3B       		.uleb128 0x3b
 2388 00e4 05       		.uleb128 0x5
 2389 00e5 49       		.uleb128 0x49
 2390 00e6 13       		.uleb128 0x13
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 64


 2391 00e7 02       		.uleb128 0x2
 2392 00e8 17       		.uleb128 0x17
 2393 00e9 00       		.byte	0
 2394 00ea 00       		.byte	0
 2395 00eb 10       		.uleb128 0x10
 2396 00ec 0F       		.uleb128 0xf
 2397 00ed 00       		.byte	0
 2398 00ee 0B       		.uleb128 0xb
 2399 00ef 0B       		.uleb128 0xb
 2400 00f0 49       		.uleb128 0x49
 2401 00f1 13       		.uleb128 0x13
 2402 00f2 00       		.byte	0
 2403 00f3 00       		.byte	0
 2404 00f4 11       		.uleb128 0x11
 2405 00f5 26       		.uleb128 0x26
 2406 00f6 00       		.byte	0
 2407 00f7 49       		.uleb128 0x49
 2408 00f8 13       		.uleb128 0x13
 2409 00f9 00       		.byte	0
 2410 00fa 00       		.byte	0
 2411 00fb 12       		.uleb128 0x12
 2412 00fc 898201   		.uleb128 0x4109
 2413 00ff 01       		.byte	0x1
 2414 0100 11       		.uleb128 0x11
 2415 0101 01       		.uleb128 0x1
 2416 0102 31       		.uleb128 0x31
 2417 0103 13       		.uleb128 0x13
 2418 0104 01       		.uleb128 0x1
 2419 0105 13       		.uleb128 0x13
 2420 0106 00       		.byte	0
 2421 0107 00       		.byte	0
 2422 0108 13       		.uleb128 0x13
 2423 0109 34       		.uleb128 0x34
 2424 010a 00       		.byte	0
 2425 010b 03       		.uleb128 0x3
 2426 010c 0E       		.uleb128 0xe
 2427 010d 3A       		.uleb128 0x3a
 2428 010e 0B       		.uleb128 0xb
 2429 010f 3B       		.uleb128 0x3b
 2430 0110 0B       		.uleb128 0xb
 2431 0111 49       		.uleb128 0x49
 2432 0112 13       		.uleb128 0x13
 2433 0113 3F       		.uleb128 0x3f
 2434 0114 19       		.uleb128 0x19
 2435 0115 02       		.uleb128 0x2
 2436 0116 18       		.uleb128 0x18
 2437 0117 00       		.byte	0
 2438 0118 00       		.byte	0
 2439 0119 14       		.uleb128 0x14
 2440 011a 01       		.uleb128 0x1
 2441 011b 01       		.byte	0x1
 2442 011c 49       		.uleb128 0x49
 2443 011d 13       		.uleb128 0x13
 2444 011e 01       		.uleb128 0x1
 2445 011f 13       		.uleb128 0x13
 2446 0120 00       		.byte	0
 2447 0121 00       		.byte	0
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 65


 2448 0122 15       		.uleb128 0x15
 2449 0123 21       		.uleb128 0x21
 2450 0124 00       		.byte	0
 2451 0125 49       		.uleb128 0x49
 2452 0126 13       		.uleb128 0x13
 2453 0127 2F       		.uleb128 0x2f
 2454 0128 0B       		.uleb128 0xb
 2455 0129 00       		.byte	0
 2456 012a 00       		.byte	0
 2457 012b 16       		.uleb128 0x16
 2458 012c 2E       		.uleb128 0x2e
 2459 012d 00       		.byte	0
 2460 012e 3F       		.uleb128 0x3f
 2461 012f 19       		.uleb128 0x19
 2462 0130 3C       		.uleb128 0x3c
 2463 0131 19       		.uleb128 0x19
 2464 0132 6E       		.uleb128 0x6e
 2465 0133 0E       		.uleb128 0xe
 2466 0134 03       		.uleb128 0x3
 2467 0135 0E       		.uleb128 0xe
 2468 0136 3A       		.uleb128 0x3a
 2469 0137 0B       		.uleb128 0xb
 2470 0138 3B       		.uleb128 0x3b
 2471 0139 0B       		.uleb128 0xb
 2472 013a 00       		.byte	0
 2473 013b 00       		.byte	0
 2474 013c 00       		.byte	0
 2475              		.section	.debug_loc,"",%progbits
 2476              	.Ldebug_loc0:
 2477              	.LLST0:
 2478 0000 06000000 		.4byte	.LVL2
 2479 0004 2B000000 		.4byte	.LVL3-1
 2480 0008 0100     		.2byte	0x1
 2481 000a 50       		.byte	0x50
 2482 000b 00000000 		.4byte	0
 2483 000f 00000000 		.4byte	0
 2484              	.LLST1:
 2485 0013 06000000 		.4byte	.LVL8
 2486 0017 1B000000 		.4byte	.LVL9-1
 2487 001b 0100     		.2byte	0x1
 2488 001d 50       		.byte	0x50
 2489 001e 00000000 		.4byte	0
 2490 0022 00000000 		.4byte	0
 2491              	.LLST2:
 2492 0026 14000000 		.4byte	.LVL15
 2493 002a 1E000000 		.4byte	.LVL17
 2494 002e 0100     		.2byte	0x1
 2495 0030 54       		.byte	0x54
 2496 0031 1E000000 		.4byte	.LVL17
 2497 0035 28000000 		.4byte	.LFE11
 2498 0039 0100     		.2byte	0x1
 2499 003b 50       		.byte	0x50
 2500 003c 00000000 		.4byte	0
 2501 0040 00000000 		.4byte	0
 2502              	.LLST3:
 2503 0044 14000000 		.4byte	.LVL19
 2504 0048 1E000000 		.4byte	.LVL21
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 66


 2505 004c 0100     		.2byte	0x1
 2506 004e 54       		.byte	0x54
 2507 004f 1E000000 		.4byte	.LVL21
 2508 0053 28000000 		.4byte	.LFE12
 2509 0057 0100     		.2byte	0x1
 2510 0059 50       		.byte	0x50
 2511 005a 00000000 		.4byte	0
 2512 005e 00000000 		.4byte	0
 2513              	.LLST4:
 2514 0062 00000000 		.4byte	.LVL22
 2515 0066 23000000 		.4byte	.LVL27-1
 2516 006a 0100     		.2byte	0x1
 2517 006c 50       		.byte	0x50
 2518 006d 23000000 		.4byte	.LVL27-1
 2519 0071 D4000000 		.4byte	.LFE13
 2520 0075 0400     		.2byte	0x4
 2521 0077 F3       		.byte	0xf3
 2522 0078 01       		.uleb128 0x1
 2523 0079 50       		.byte	0x50
 2524 007a 9F       		.byte	0x9f
 2525 007b 00000000 		.4byte	0
 2526 007f 00000000 		.4byte	0
 2527              	.LLST5:
 2528 0083 32000000 		.4byte	.LVL28
 2529 0087 36000000 		.4byte	.LVL29
 2530 008b 0100     		.2byte	0x1
 2531 008d 53       		.byte	0x53
 2532 008e 36000000 		.4byte	.LVL29
 2533 0092 4E000000 		.4byte	.LVL30
 2534 0096 0500     		.2byte	0x5
 2535 0098 03       		.byte	0x3
 2536 0099 00000000 		.4byte	SPIM_swStatusTx
 2537 009d 50000000 		.4byte	.LVL31
 2538 00a1 5A000000 		.4byte	.LVL32
 2539 00a5 0500     		.2byte	0x5
 2540 00a7 03       		.byte	0x3
 2541 00a8 00000000 		.4byte	SPIM_swStatusTx
 2542 00ac 00000000 		.4byte	0
 2543 00b0 00000000 		.4byte	0
 2544              	.LLST6:
 2545 00b4 0A000000 		.4byte	.LVL23
 2546 00b8 10000000 		.4byte	.LVL24
 2547 00bc 0100     		.2byte	0x1
 2548 00be 53       		.byte	0x53
 2549 00bf 10000000 		.4byte	.LVL24
 2550 00c3 12000000 		.4byte	.LVL25
 2551 00c7 0300     		.2byte	0x3
 2552 00c9 73       		.byte	0x73
 2553 00ca 01       		.sleb128 1
 2554 00cb 9F       		.byte	0x9f
 2555 00cc 12000000 		.4byte	.LVL25
 2556 00d0 23000000 		.4byte	.LVL27-1
 2557 00d4 0100     		.2byte	0x1
 2558 00d6 53       		.byte	0x53
 2559 00d7 00000000 		.4byte	0
 2560 00db 00000000 		.4byte	0
 2561              	.LLST7:
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 67


 2562 00df 4A000000 		.4byte	.LVL35
 2563 00e3 50000000 		.4byte	.LVL37
 2564 00e7 0100     		.2byte	0x1
 2565 00e9 54       		.byte	0x54
 2566 00ea 50000000 		.4byte	.LVL37
 2567 00ee 64000000 		.4byte	.LFE14
 2568 00f2 0100     		.2byte	0x1
 2569 00f4 50       		.byte	0x50
 2570 00f5 00000000 		.4byte	0
 2571 00f9 00000000 		.4byte	0
 2572              	.LLST8:
 2573 00fd 32000000 		.4byte	.LVL39
 2574 0101 34000000 		.4byte	.LVL40
 2575 0105 0100     		.2byte	0x1
 2576 0107 54       		.byte	0x54
 2577 0108 42000000 		.4byte	.LVL41
 2578 010c 44000000 		.4byte	.LVL42
 2579 0110 0100     		.2byte	0x1
 2580 0112 54       		.byte	0x54
 2581 0113 46000000 		.4byte	.LVL43
 2582 0117 4C000000 		.4byte	.LVL45
 2583 011b 0100     		.2byte	0x1
 2584 011d 54       		.byte	0x54
 2585 011e 00000000 		.4byte	0
 2586 0122 00000000 		.4byte	0
 2587              	.LLST9:
 2588 0126 32000000 		.4byte	.LVL47
 2589 012a 34000000 		.4byte	.LVL48
 2590 012e 0100     		.2byte	0x1
 2591 0130 54       		.byte	0x54
 2592 0131 42000000 		.4byte	.LVL49
 2593 0135 44000000 		.4byte	.LVL50
 2594 0139 0100     		.2byte	0x1
 2595 013b 54       		.byte	0x54
 2596 013c 46000000 		.4byte	.LVL51
 2597 0140 4C000000 		.4byte	.LVL53
 2598 0144 0100     		.2byte	0x1
 2599 0146 54       		.byte	0x54
 2600 0147 00000000 		.4byte	0
 2601 014b 00000000 		.4byte	0
 2602              	.LLST10:
 2603 014f 06000000 		.4byte	.LVL56
 2604 0153 1D000000 		.4byte	.LVL57-1
 2605 0157 0100     		.2byte	0x1
 2606 0159 50       		.byte	0x50
 2607 015a 00000000 		.4byte	0
 2608 015e 00000000 		.4byte	0
 2609              	.LLST11:
 2610 0162 00000000 		.4byte	.LVL60
 2611 0166 0A000000 		.4byte	.LVL62
 2612 016a 0100     		.2byte	0x1
 2613 016c 50       		.byte	0x50
 2614 016d 0A000000 		.4byte	.LVL62
 2615 0171 1C000000 		.4byte	.LVL70
 2616 0175 0100     		.2byte	0x1
 2617 0177 56       		.byte	0x56
 2618 0178 1C000000 		.4byte	.LVL70
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 68


 2619 017c 1E000000 		.4byte	.LFE19
 2620 0180 0400     		.2byte	0x4
 2621 0182 F3       		.byte	0xf3
 2622 0183 01       		.uleb128 0x1
 2623 0184 50       		.byte	0x50
 2624 0185 9F       		.byte	0x9f
 2625 0186 00000000 		.4byte	0
 2626 018a 00000000 		.4byte	0
 2627              	.LLST12:
 2628 018e 00000000 		.4byte	.LVL60
 2629 0192 0A000000 		.4byte	.LVL62
 2630 0196 0100     		.2byte	0x1
 2631 0198 51       		.byte	0x51
 2632 0199 0A000000 		.4byte	.LVL62
 2633 019d 16000000 		.4byte	.LVL66
 2634 01a1 0100     		.2byte	0x1
 2635 01a3 54       		.byte	0x54
 2636 01a4 18000000 		.4byte	.LVL67
 2637 01a8 1C000000 		.4byte	.LVL68
 2638 01ac 0100     		.2byte	0x1
 2639 01ae 54       		.byte	0x54
 2640 01af 00000000 		.4byte	0
 2641 01b3 00000000 		.4byte	0
 2642              	.LLST13:
 2643 01b7 06000000 		.4byte	.LVL61
 2644 01bb 0A000000 		.4byte	.LVL62
 2645 01bf 0200     		.2byte	0x2
 2646 01c1 30       		.byte	0x30
 2647 01c2 9F       		.byte	0x9f
 2648 01c3 0A000000 		.4byte	.LVL62
 2649 01c7 12000000 		.4byte	.LVL64
 2650 01cb 0100     		.2byte	0x1
 2651 01cd 55       		.byte	0x55
 2652 01ce 14000000 		.4byte	.LVL65
 2653 01d2 1C000000 		.4byte	.LVL69
 2654 01d6 0100     		.2byte	0x1
 2655 01d8 55       		.byte	0x55
 2656 01d9 00000000 		.4byte	0
 2657 01dd 00000000 		.4byte	0
 2658              	.LLST14:
 2659 01e1 14000000 		.4byte	.LVL71
 2660 01e5 2B000000 		.4byte	.LVL72-1
 2661 01e9 0100     		.2byte	0x1
 2662 01eb 50       		.byte	0x50
 2663 01ec 00000000 		.4byte	0
 2664 01f0 00000000 		.4byte	0
 2665              	.LLST15:
 2666 01f4 16000000 		.4byte	.LVL90
 2667 01f8 26000000 		.4byte	.LVL91
 2668 01fc 0100     		.2byte	0x1
 2669 01fe 51       		.byte	0x51
 2670 01ff 28000000 		.4byte	.LVL92
 2671 0203 38000000 		.4byte	.LVL95
 2672 0207 0100     		.2byte	0x1
 2673 0209 54       		.byte	0x54
 2674 020a 38000000 		.4byte	.LVL95
 2675 020e 4C000000 		.4byte	.LFE24
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 69


 2676 0212 0100     		.2byte	0x1
 2677 0214 50       		.byte	0x50
 2678 0215 00000000 		.4byte	0
 2679 0219 00000000 		.4byte	0
 2680              		.section	.debug_aranges,"",%progbits
 2681 0000 D4000000 		.4byte	0xd4
 2682 0004 0200     		.2byte	0x2
 2683 0006 00000000 		.4byte	.Ldebug_info0
 2684 000a 04       		.byte	0x4
 2685 000b 00       		.byte	0
 2686 000c 0000     		.2byte	0
 2687 000e 0000     		.2byte	0
 2688 0010 00000000 		.4byte	.LFB5
 2689 0014 0A000000 		.4byte	.LFE5-.LFB5
 2690 0018 00000000 		.4byte	.LFB6
 2691 001c 0A000000 		.4byte	.LFE6-.LFB6
 2692 0020 00000000 		.4byte	.LFB2
 2693 0024 44000000 		.4byte	.LFE2-.LFB2
 2694 0028 00000000 		.4byte	.LFB7
 2695 002c 0A000000 		.4byte	.LFE7-.LFB7
 2696 0030 00000000 		.4byte	.LFB8
 2697 0034 0A000000 		.4byte	.LFE8-.LFB8
 2698 0038 00000000 		.4byte	.LFB4
 2699 003c 30000000 		.4byte	.LFE4-.LFB4
 2700 0040 00000000 		.4byte	.LFB9
 2701 0044 0C000000 		.4byte	.LFE9-.LFB9
 2702 0048 00000000 		.4byte	.LFB10
 2703 004c 0C000000 		.4byte	.LFE10-.LFB10
 2704 0050 00000000 		.4byte	.LFB11
 2705 0054 28000000 		.4byte	.LFE11-.LFB11
 2706 0058 00000000 		.4byte	.LFB12
 2707 005c 28000000 		.4byte	.LFE12-.LFB12
 2708 0060 00000000 		.4byte	.LFB13
 2709 0064 D4000000 		.4byte	.LFE13-.LFB13
 2710 0068 00000000 		.4byte	.LFB14
 2711 006c 64000000 		.4byte	.LFE14-.LFB14
 2712 0070 00000000 		.4byte	.LFB15
 2713 0074 58000000 		.4byte	.LFE15-.LFB15
 2714 0078 00000000 		.4byte	.LFB16
 2715 007c 58000000 		.4byte	.LFE16-.LFB16
 2716 0080 00000000 		.4byte	.LFB17
 2717 0084 3C000000 		.4byte	.LFE17-.LFB17
 2718 0088 00000000 		.4byte	.LFB18
 2719 008c 54000000 		.4byte	.LFE18-.LFB18
 2720 0090 00000000 		.4byte	.LFB19
 2721 0094 1E000000 		.4byte	.LFE19-.LFB19
 2722 0098 00000000 		.4byte	.LFB20
 2723 009c 3C000000 		.4byte	.LFE20-.LFB20
 2724 00a0 00000000 		.4byte	.LFB1
 2725 00a4 94000000 		.4byte	.LFE1-.LFB1
 2726 00a8 00000000 		.4byte	.LFB3
 2727 00ac 20000000 		.4byte	.LFE3-.LFB3
 2728 00b0 00000000 		.4byte	.LFB21
 2729 00b4 0C000000 		.4byte	.LFE21-.LFB21
 2730 00b8 00000000 		.4byte	.LFB22
 2731 00bc 0C000000 		.4byte	.LFE22-.LFB22
 2732 00c0 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 70


 2733 00c4 18000000 		.4byte	.LFE23-.LFB23
 2734 00c8 00000000 		.4byte	.LFB24
 2735 00cc 4C000000 		.4byte	.LFE24-.LFB24
 2736 00d0 00000000 		.4byte	0
 2737 00d4 00000000 		.4byte	0
 2738              		.section	.debug_ranges,"",%progbits
 2739              	.Ldebug_ranges0:
 2740 0000 00000000 		.4byte	.LFB5
 2741 0004 0A000000 		.4byte	.LFE5
 2742 0008 00000000 		.4byte	.LFB6
 2743 000c 0A000000 		.4byte	.LFE6
 2744 0010 00000000 		.4byte	.LFB2
 2745 0014 44000000 		.4byte	.LFE2
 2746 0018 00000000 		.4byte	.LFB7
 2747 001c 0A000000 		.4byte	.LFE7
 2748 0020 00000000 		.4byte	.LFB8
 2749 0024 0A000000 		.4byte	.LFE8
 2750 0028 00000000 		.4byte	.LFB4
 2751 002c 30000000 		.4byte	.LFE4
 2752 0030 00000000 		.4byte	.LFB9
 2753 0034 0C000000 		.4byte	.LFE9
 2754 0038 00000000 		.4byte	.LFB10
 2755 003c 0C000000 		.4byte	.LFE10
 2756 0040 00000000 		.4byte	.LFB11
 2757 0044 28000000 		.4byte	.LFE11
 2758 0048 00000000 		.4byte	.LFB12
 2759 004c 28000000 		.4byte	.LFE12
 2760 0050 00000000 		.4byte	.LFB13
 2761 0054 D4000000 		.4byte	.LFE13
 2762 0058 00000000 		.4byte	.LFB14
 2763 005c 64000000 		.4byte	.LFE14
 2764 0060 00000000 		.4byte	.LFB15
 2765 0064 58000000 		.4byte	.LFE15
 2766 0068 00000000 		.4byte	.LFB16
 2767 006c 58000000 		.4byte	.LFE16
 2768 0070 00000000 		.4byte	.LFB17
 2769 0074 3C000000 		.4byte	.LFE17
 2770 0078 00000000 		.4byte	.LFB18
 2771 007c 54000000 		.4byte	.LFE18
 2772 0080 00000000 		.4byte	.LFB19
 2773 0084 1E000000 		.4byte	.LFE19
 2774 0088 00000000 		.4byte	.LFB20
 2775 008c 3C000000 		.4byte	.LFE20
 2776 0090 00000000 		.4byte	.LFB1
 2777 0094 94000000 		.4byte	.LFE1
 2778 0098 00000000 		.4byte	.LFB3
 2779 009c 20000000 		.4byte	.LFE3
 2780 00a0 00000000 		.4byte	.LFB21
 2781 00a4 0C000000 		.4byte	.LFE21
 2782 00a8 00000000 		.4byte	.LFB22
 2783 00ac 0C000000 		.4byte	.LFE22
 2784 00b0 00000000 		.4byte	.LFB23
 2785 00b4 18000000 		.4byte	.LFE23
 2786 00b8 00000000 		.4byte	.LFB24
 2787 00bc 4C000000 		.4byte	.LFE24
 2788 00c0 00000000 		.4byte	0
 2789 00c4 00000000 		.4byte	0
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 71


 2790              		.section	.debug_line,"",%progbits
 2791              	.Ldebug_line0:
 2792 0000 94020000 		.section	.debug_str,"MS",%progbits,1
 2792      02004C00 
 2792      00000201 
 2792      FB0E0D00 
 2792      01010101 
 2793              	.LASF23:
 2794 0000 5350494D 		.ascii	"SPIM_SetTxInterruptMode\000"
 2794      5F536574 
 2794      5478496E 
 2794      74657272 
 2794      7570744D 
 2795              	.LASF64:
 2796 0018 43794578 		.ascii	"CyExitCriticalSection\000"
 2796      69744372 
 2796      69746963 
 2796      616C5365 
 2796      6374696F 
 2797              	.LASF69:
 2798 002e 47656E65 		.ascii	"Generated_Source\\PSoC4\\SPIM.c\000"
 2798      72617465 
 2798      645F536F 
 2798      75726365 
 2798      5C50536F 
 2799              	.LASF68:
 2800 004c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2800      43313120 
 2800      352E342E 
 2800      31203230 
 2800      31363036 
 2801 007f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2801      20726576 
 2801      6973696F 
 2801      6E203233 
 2801      37373135 
 2802 00b2 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2802      66756E63 
 2802      74696F6E 
 2802      2D736563 
 2802      74696F6E 
 2803              	.LASF7:
 2804 00da 6C6F6E67 		.ascii	"long long unsigned int\000"
 2804      206C6F6E 
 2804      6720756E 
 2804      7369676E 
 2804      65642069 
 2805              	.LASF26:
 2806 00f1 746D7053 		.ascii	"tmpStatus\000"
 2806      74617475 
 2806      7300
 2807              	.LASF70:
 2808 00fb 433A5C55 		.ascii	"C:\\Users\\corne\\Dropbox\\prive\\projects\\Wireles"
 2808      73657273 
 2808      5C636F72 
 2808      6E655C44 
 2808      726F7062 
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 72


 2809 0128 735F7365 		.ascii	"s_sensornode\\Software\\Wireless_sensornode\\Firmwa"
 2809      6E736F72 
 2809      6E6F6465 
 2809      5C536F66 
 2809      74776172 
 2810 0158 72655F56 		.ascii	"re_V0.1.cydsn\000"
 2810      302E312E 
 2810      63796473 
 2810      6E00
 2811              	.LASF67:
 2812 0166 4379496E 		.ascii	"CyIntSetVector\000"
 2812      74536574 
 2812      56656374 
 2812      6F7200
 2813              	.LASF6:
 2814 0175 6C6F6E67 		.ascii	"long long int\000"
 2814      206C6F6E 
 2814      6720696E 
 2814      7400
 2815              	.LASF0:
 2816 0183 7369676E 		.ascii	"signed char\000"
 2816      65642063 
 2816      68617200 
 2817              	.LASF61:
 2818 018f 5350494D 		.ascii	"SPIM_rxBufferFull\000"
 2818      5F727842 
 2818      75666665 
 2818      7246756C 
 2818      6C00
 2819              	.LASF4:
 2820 01a1 6C6F6E67 		.ascii	"long int\000"
 2820      20696E74 
 2820      00
 2821              	.LASF65:
 2822 01aa 4379496E 		.ascii	"CyIntDisable\000"
 2822      74446973 
 2822      61626C65 
 2822      00
 2823              	.LASF32:
 2824 01b7 746D7054 		.ascii	"tmpTxBufferRead\000"
 2824      78427566 
 2824      66657252 
 2824      65616400 
 2825              	.LASF38:
 2826 01c7 5350494D 		.ascii	"SPIM_ClearRxBuffer\000"
 2826      5F436C65 
 2826      61725278 
 2826      42756666 
 2826      657200
 2827              	.LASF12:
 2828 01da 75696E74 		.ascii	"uint8\000"
 2828      3800
 2829              	.LASF10:
 2830 01e0 646F7562 		.ascii	"double\000"
 2830      6C6500
 2831              	.LASF21:
 2832 01e7 5350494D 		.ascii	"SPIM_Stop\000"
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 73


 2832      5F53746F 
 2832      7000
 2833              	.LASF57:
 2834 01f1 5350494D 		.ascii	"SPIM_txBufferFull\000"
 2834      5F747842 
 2834      75666665 
 2834      7246756C 
 2834      6C00
 2835              	.LASF28:
 2836 0203 5350494D 		.ascii	"SPIM_ReadRxStatus\000"
 2836      5F526561 
 2836      64527853 
 2836      74617475 
 2836      7300
 2837              	.LASF8:
 2838 0215 756E7369 		.ascii	"unsigned int\000"
 2838      676E6564 
 2838      20696E74 
 2838      00
 2839              	.LASF29:
 2840 0222 5350494D 		.ascii	"SPIM_WriteTxData\000"
 2840      5F577269 
 2840      74655478 
 2840      44617461 
 2840      00
 2841              	.LASF56:
 2842 0233 5350494D 		.ascii	"SPIM_txBufferWrite\000"
 2842      5F747842 
 2842      75666665 
 2842      72577269 
 2842      746500
 2843              	.LASF5:
 2844 0246 6C6F6E67 		.ascii	"long unsigned int\000"
 2844      20756E73 
 2844      69676E65 
 2844      6420696E 
 2844      7400
 2845              	.LASF63:
 2846 0258 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2846      74657243 
 2846      72697469 
 2846      63616C53 
 2846      65637469 
 2847              	.LASF55:
 2848 026f 5350494D 		.ascii	"SPIM_txBufferRead\000"
 2848      5F747842 
 2848      75666665 
 2848      72526561 
 2848      6400
 2849              	.LASF36:
 2850 0281 73697A65 		.ascii	"size\000"
 2850      00
 2851              	.LASF3:
 2852 0286 73686F72 		.ascii	"short unsigned int\000"
 2852      7420756E 
 2852      7369676E 
 2852      65642069 
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 74


 2852      6E7400
 2853              	.LASF54:
 2854 0299 5350494D 		.ascii	"SPIM_txBuffer\000"
 2854      5F747842 
 2854      75666665 
 2854      7200
 2855              	.LASF43:
 2856 02a7 62756649 		.ascii	"bufIndex\000"
 2856      6E646578 
 2856      00
 2857              	.LASF44:
 2858 02b0 5350494D 		.ascii	"SPIM_ClearFIFO\000"
 2858      5F436C65 
 2858      61724649 
 2858      464F00
 2859              	.LASF25:
 2860 02bf 696E7453 		.ascii	"intSrc\000"
 2860      726300
 2861              	.LASF20:
 2862 02c6 5350494D 		.ascii	"SPIM_DisableRxInt\000"
 2862      5F446973 
 2862      61626C65 
 2862      5278496E 
 2862      7400
 2863              	.LASF53:
 2864 02d8 5350494D 		.ascii	"SPIM_swStatusRx\000"
 2864      5F737753 
 2864      74617475 
 2864      73527800 
 2865              	.LASF40:
 2866 02e8 5350494D 		.ascii	"SPIM_PutArray\000"
 2866      5F507574 
 2866      41727261 
 2866      7900
 2867              	.LASF58:
 2868 02f6 5350494D 		.ascii	"SPIM_rxBuffer\000"
 2868      5F727842 
 2868      75666665 
 2868      7200
 2869              	.LASF15:
 2870 0304 73697A65 		.ascii	"sizetype\000"
 2870      74797065 
 2870      00
 2871              	.LASF14:
 2872 030d 6C6F6E67 		.ascii	"long double\000"
 2872      20646F75 
 2872      626C6500 
 2873              	.LASF60:
 2874 0319 5350494D 		.ascii	"SPIM_rxBufferWrite\000"
 2874      5F727842 
 2874      75666665 
 2874      72577269 
 2874      746500
 2875              	.LASF17:
 2876 032c 5350494D 		.ascii	"SPIM_EnableRxInt\000"
 2876      5F456E61 
 2876      626C6552 
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 75


 2876      78496E74 
 2876      00
 2877              	.LASF31:
 2878 033d 74656D70 		.ascii	"tempStatus\000"
 2878      53746174 
 2878      757300
 2879              	.LASF37:
 2880 0348 5350494D 		.ascii	"SPIM_GetTxBufferSize\000"
 2880      5F476574 
 2880      54784275 
 2880      66666572 
 2880      53697A65 
 2881              	.LASF66:
 2882 035d 4379496E 		.ascii	"CyIntSetPriority\000"
 2882      74536574 
 2882      5072696F 
 2882      72697479 
 2882      00
 2883              	.LASF51:
 2884 036e 5350494D 		.ascii	"SPIM_initVar\000"
 2884      5F696E69 
 2884      74566172 
 2884      00
 2885              	.LASF9:
 2886 037b 666C6F61 		.ascii	"float\000"
 2886      7400
 2887              	.LASF33:
 2888 0381 5350494D 		.ascii	"SPIM_ReadRxData\000"
 2888      5F526561 
 2888      64527844 
 2888      61746100 
 2889              	.LASF13:
 2890 0391 72656738 		.ascii	"reg8\000"
 2890      00
 2891              	.LASF1:
 2892 0396 756E7369 		.ascii	"unsigned char\000"
 2892      676E6564 
 2892      20636861 
 2892      7200
 2893              	.LASF49:
 2894 03a4 5350494D 		.ascii	"SPIM_SetInterruptMode\000"
 2894      5F536574 
 2894      496E7465 
 2894      72727570 
 2894      744D6F64 
 2895              	.LASF45:
 2896 03ba 5350494D 		.ascii	"SPIM_Init\000"
 2896      5F496E69 
 2896      7400
 2897              	.LASF2:
 2898 03c4 73686F72 		.ascii	"short int\000"
 2898      7420696E 
 2898      7400
 2899              	.LASF47:
 2900 03ce 5350494D 		.ascii	"SPIM_EnableInt\000"
 2900      5F456E61 
 2900      626C6549 
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 76


 2900      6E7400
 2901              	.LASF62:
 2902 03dd 4379496E 		.ascii	"CyIntEnable\000"
 2902      74456E61 
 2902      626C6500 
 2903              	.LASF27:
 2904 03e9 5350494D 		.ascii	"SPIM_ReadTxStatus\000"
 2904      5F526561 
 2904      64547853 
 2904      74617475 
 2904      7300
 2905              	.LASF19:
 2906 03fb 5350494D 		.ascii	"SPIM_DisableTxInt\000"
 2906      5F446973 
 2906      61626C65 
 2906      5478496E 
 2906      7400
 2907              	.LASF42:
 2908 040d 62797465 		.ascii	"byteCount\000"
 2908      436F756E 
 2908      7400
 2909              	.LASF24:
 2910 0417 5350494D 		.ascii	"SPIM_SetRxInterruptMode\000"
 2910      5F536574 
 2910      5278496E 
 2910      74657272 
 2910      7570744D 
 2911              	.LASF52:
 2912 042f 5350494D 		.ascii	"SPIM_swStatusTx\000"
 2912      5F737753 
 2912      74617475 
 2912      73547800 
 2913              	.LASF34:
 2914 043f 72784461 		.ascii	"rxData\000"
 2914      746100
 2915              	.LASF11:
 2916 0446 63686172 		.ascii	"char\000"
 2916      00
 2917              	.LASF18:
 2918 044b 5350494D 		.ascii	"SPIM_Enable\000"
 2918      5F456E61 
 2918      626C6500 
 2919              	.LASF50:
 2920 0457 5350494D 		.ascii	"SPIM_ReadStatus\000"
 2920      5F526561 
 2920      64537461 
 2920      74757300 
 2921              	.LASF41:
 2922 0467 62756666 		.ascii	"buffer\000"
 2922      657200
 2923              	.LASF16:
 2924 046e 5350494D 		.ascii	"SPIM_EnableTxInt\000"
 2924      5F456E61 
 2924      626C6554 
 2924      78496E74 
 2924      00
 2925              	.LASF35:
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccRhqPiQ.s 			page 77


 2926 047f 5350494D 		.ascii	"SPIM_GetRxBufferSize\000"
 2926      5F476574 
 2926      52784275 
 2926      66666572 
 2926      53697A65 
 2927              	.LASF46:
 2928 0494 5350494D 		.ascii	"SPIM_Start\000"
 2928      5F537461 
 2928      727400
 2929              	.LASF22:
 2930 049f 656E6162 		.ascii	"enableInterrupts\000"
 2930      6C65496E 
 2930      74657272 
 2930      75707473 
 2930      00
 2931              	.LASF39:
 2932 04b0 5350494D 		.ascii	"SPIM_ClearTxBuffer\000"
 2932      5F436C65 
 2932      61725478 
 2932      42756666 
 2932      657200
 2933              	.LASF59:
 2934 04c3 5350494D 		.ascii	"SPIM_rxBufferRead\000"
 2934      5F727842 
 2934      75666665 
 2934      72526561 
 2934      6400
 2935              	.LASF48:
 2936 04d5 5350494D 		.ascii	"SPIM_DisableInt\000"
 2936      5F446973 
 2936      61626C65 
 2936      496E7400 
 2937              	.LASF30:
 2938 04e5 74784461 		.ascii	"txData\000"
 2938      746100
 2939              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PRS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PRS_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	PRS_Enable
  22              		.code	16
  23              		.thumb_func
  24              		.type	PRS_Enable, %function
  25              	PRS_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\PRS.c"
   1:Generated_Source\PSoC4/PRS.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PRS.c **** * File Name: PRS.c
   3:Generated_Source\PSoC4/PRS.c **** * Version 2.40
   4:Generated_Source\PSoC4/PRS.c **** *
   5:Generated_Source\PSoC4/PRS.c **** * Description:
   6:Generated_Source\PSoC4/PRS.c **** *  This file provides the source code to the API for the PRS component
   7:Generated_Source\PSoC4/PRS.c **** *
   8:Generated_Source\PSoC4/PRS.c **** * Note:
   9:Generated_Source\PSoC4/PRS.c **** *  None
  10:Generated_Source\PSoC4/PRS.c **** *
  11:Generated_Source\PSoC4/PRS.c **** ********************************************************************************
  12:Generated_Source\PSoC4/PRS.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/PRS.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/PRS.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/PRS.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/PRS.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/PRS.c **** 
  18:Generated_Source\PSoC4/PRS.c **** #include "PRS.h"
  19:Generated_Source\PSoC4/PRS.c **** 
  20:Generated_Source\PSoC4/PRS.c **** uint8 PRS_initVar = 0u;
  21:Generated_Source\PSoC4/PRS.c **** 
  22:Generated_Source\PSoC4/PRS.c **** PRS_BACKUP_STRUCT PRS_backup =
  23:Generated_Source\PSoC4/PRS.c **** {
  24:Generated_Source\PSoC4/PRS.c ****     0x00u, /* enableState; */
  25:Generated_Source\PSoC4/PRS.c **** 
  26:Generated_Source\PSoC4/PRS.c ****     #if (PRS_WAKEUP_BEHAVIOUR == PRS__RESUMEWORK)
  27:Generated_Source\PSoC4/PRS.c ****         /* Save dff register for time mult */
  28:Generated_Source\PSoC4/PRS.c ****         #if (PRS_TIME_MULTIPLEXING_ENABLE)
  29:Generated_Source\PSoC4/PRS.c ****             PRS_INIT_STATE, /* dffStatus; */
  30:Generated_Source\PSoC4/PRS.c ****         #endif  /* End PRS_TIME_MULTIPLEXING_ENABLE */
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 2


  31:Generated_Source\PSoC4/PRS.c **** 
  32:Generated_Source\PSoC4/PRS.c ****         /* Save A0 and A1 registers are none-retention */
  33:Generated_Source\PSoC4/PRS.c ****         #if(PRS_PRS_SIZE <= 32u)
  34:Generated_Source\PSoC4/PRS.c ****             PRS_DEFAULT_SEED, /* seed */
  35:Generated_Source\PSoC4/PRS.c **** 
  36:Generated_Source\PSoC4/PRS.c ****         #else
  37:Generated_Source\PSoC4/PRS.c ****             PRS_DEFAULT_SEED_UPPER, /* seedUpper; */
  38:Generated_Source\PSoC4/PRS.c ****             PRS_DEFAULT_SEED_LOWER, /* seedLower; */
  39:Generated_Source\PSoC4/PRS.c **** 
  40:Generated_Source\PSoC4/PRS.c ****         #endif  /* End (PRS_PRS_SIZE <= 32u) */
  41:Generated_Source\PSoC4/PRS.c **** 
  42:Generated_Source\PSoC4/PRS.c ****     #endif  /* End (PRS_WAKEUP_BEHAVIOUR == PRS__RESUMEWORK) */
  43:Generated_Source\PSoC4/PRS.c **** };
  44:Generated_Source\PSoC4/PRS.c **** 
  45:Generated_Source\PSoC4/PRS.c **** 
  46:Generated_Source\PSoC4/PRS.c **** /*******************************************************************************
  47:Generated_Source\PSoC4/PRS.c **** * Function Name: PRS_Init
  48:Generated_Source\PSoC4/PRS.c **** ********************************************************************************
  49:Generated_Source\PSoC4/PRS.c **** *
  50:Generated_Source\PSoC4/PRS.c **** * Summary:
  51:Generated_Source\PSoC4/PRS.c **** *  Initializes seed and polynomial registers with initial values.
  52:Generated_Source\PSoC4/PRS.c **** *
  53:Generated_Source\PSoC4/PRS.c **** * Parameters:
  54:Generated_Source\PSoC4/PRS.c **** *  void
  55:Generated_Source\PSoC4/PRS.c **** *
  56:Generated_Source\PSoC4/PRS.c **** * Return:
  57:Generated_Source\PSoC4/PRS.c **** *  void
  58:Generated_Source\PSoC4/PRS.c **** *
  59:Generated_Source\PSoC4/PRS.c **** *******************************************************************************/
  60:Generated_Source\PSoC4/PRS.c **** void PRS_Init(void) 
  61:Generated_Source\PSoC4/PRS.c **** {
  62:Generated_Source\PSoC4/PRS.c ****     /* Writes seed value and ponynom value provided for customizer */
  63:Generated_Source\PSoC4/PRS.c ****     #if (PRS_PRS_SIZE <= 32u)
  64:Generated_Source\PSoC4/PRS.c ****         PRS_WritePolynomial(PRS_DEFAULT_POLYNOM);
  65:Generated_Source\PSoC4/PRS.c ****         PRS_WriteSeed(PRS_DEFAULT_SEED);
  66:Generated_Source\PSoC4/PRS.c ****         #if (PRS_RUN_MODE == PRS__CLOCKED)
  67:Generated_Source\PSoC4/PRS.c ****             PRS_ResetSeedInit(PRS_DEFAULT_SEED);
  68:Generated_Source\PSoC4/PRS.c ****         #endif  /* End (PRS_RUN_MODE == PRS__CLOCKED) */
  69:Generated_Source\PSoC4/PRS.c ****             PRS_Enable();
  70:Generated_Source\PSoC4/PRS.c ****     #else
  71:Generated_Source\PSoC4/PRS.c ****         PRS_WritePolynomialUpper(PRS_DEFAULT_POLYNOM_UPPER);
  72:Generated_Source\PSoC4/PRS.c ****         PRS_WritePolynomialLower(PRS_DEFAULT_POLYNOM_LOWER);
  73:Generated_Source\PSoC4/PRS.c ****         PRS_WriteSeedUpper(PRS_DEFAULT_SEED_UPPER);
  74:Generated_Source\PSoC4/PRS.c ****         PRS_WriteSeedLower(PRS_DEFAULT_SEED_LOWER);
  75:Generated_Source\PSoC4/PRS.c ****         #if (PRS_RUN_MODE == PRS__CLOCKED)
  76:Generated_Source\PSoC4/PRS.c ****             PRS_ResetSeedInitUpper(PRS_DEFAULT_SEED_UPPER);
  77:Generated_Source\PSoC4/PRS.c ****             PRS_ResetSeedInitLower(PRS_DEFAULT_SEED_LOWER);
  78:Generated_Source\PSoC4/PRS.c ****         #endif  /* End (PRS_RUN_MODE == PRS__CLOCKED) */
  79:Generated_Source\PSoC4/PRS.c ****             PRS_Enable();
  80:Generated_Source\PSoC4/PRS.c ****     #endif  /* End (PRS_PRS_SIZE <= 32u) */
  81:Generated_Source\PSoC4/PRS.c **** }
  82:Generated_Source\PSoC4/PRS.c **** 
  83:Generated_Source\PSoC4/PRS.c **** 
  84:Generated_Source\PSoC4/PRS.c **** /*******************************************************************************
  85:Generated_Source\PSoC4/PRS.c **** * Function Name: PRS_Enable
  86:Generated_Source\PSoC4/PRS.c **** ********************************************************************************
  87:Generated_Source\PSoC4/PRS.c **** *
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 3


  88:Generated_Source\PSoC4/PRS.c **** * Summary:
  89:Generated_Source\PSoC4/PRS.c **** *  Starts PRS computation on rising edge of input clock.
  90:Generated_Source\PSoC4/PRS.c **** *
  91:Generated_Source\PSoC4/PRS.c **** * Parameters:
  92:Generated_Source\PSoC4/PRS.c **** *  void
  93:Generated_Source\PSoC4/PRS.c **** *
  94:Generated_Source\PSoC4/PRS.c **** * Return:
  95:Generated_Source\PSoC4/PRS.c **** *  void
  96:Generated_Source\PSoC4/PRS.c **** *
  97:Generated_Source\PSoC4/PRS.c **** *******************************************************************************/
  98:Generated_Source\PSoC4/PRS.c **** void PRS_Enable(void) 
  99:Generated_Source\PSoC4/PRS.c **** {
  28              		.loc 1 99 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 100:Generated_Source\PSoC4/PRS.c ****         PRS_CONTROL_REG |= PRS_CTRL_ENABLE;
  33              		.loc 1 100 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1178     		ldrb	r1, [r2]
  36 0004 0123     		movs	r3, #1
  37 0006 0B43     		orrs	r3, r1
  38 0008 DBB2     		uxtb	r3, r3
  39 000a 1370     		strb	r3, [r2]
 101:Generated_Source\PSoC4/PRS.c **** }
  40              		.loc 1 101 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 75000F40 		.word	1074724981
  47              		.cfi_endproc
  48              	.LFE2:
  49              		.size	PRS_Enable, .-PRS_Enable
  50              		.section	.text.PRS_Stop,"ax",%progbits
  51              		.align	2
  52              		.global	PRS_Stop
  53              		.code	16
  54              		.thumb_func
  55              		.type	PRS_Stop, %function
  56              	PRS_Stop:
  57              	.LFB4:
 102:Generated_Source\PSoC4/PRS.c **** 
 103:Generated_Source\PSoC4/PRS.c **** 
 104:Generated_Source\PSoC4/PRS.c **** /*******************************************************************************
 105:Generated_Source\PSoC4/PRS.c **** * Function Name: PRS_Start
 106:Generated_Source\PSoC4/PRS.c **** ********************************************************************************
 107:Generated_Source\PSoC4/PRS.c **** *
 108:Generated_Source\PSoC4/PRS.c **** * Summary:
 109:Generated_Source\PSoC4/PRS.c **** *  Initializes seed and polynomial registers with initial values. Computation
 110:Generated_Source\PSoC4/PRS.c **** *  of PRS starts on rising edge of input clock.
 111:Generated_Source\PSoC4/PRS.c **** *
 112:Generated_Source\PSoC4/PRS.c **** * Parameters:
 113:Generated_Source\PSoC4/PRS.c **** *  void
 114:Generated_Source\PSoC4/PRS.c **** *
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 4


 115:Generated_Source\PSoC4/PRS.c **** * Return:
 116:Generated_Source\PSoC4/PRS.c **** *  void
 117:Generated_Source\PSoC4/PRS.c **** *
 118:Generated_Source\PSoC4/PRS.c **** * Global variables:
 119:Generated_Source\PSoC4/PRS.c **** *  PRS_initVar: global variable is used to indicate initial
 120:Generated_Source\PSoC4/PRS.c **** *  configuration of this component.  The variable is initialized to zero and set
 121:Generated_Source\PSoC4/PRS.c **** *  to 1 the first time PRS_Start() is called. This allows
 122:Generated_Source\PSoC4/PRS.c **** *  enable/disable component without re-initialization in all subsequent calls
 123:Generated_Source\PSoC4/PRS.c **** *  to the PRS_Start() routine.
 124:Generated_Source\PSoC4/PRS.c **** *
 125:Generated_Source\PSoC4/PRS.c **** *******************************************************************************/
 126:Generated_Source\PSoC4/PRS.c **** void PRS_Start(void) 
 127:Generated_Source\PSoC4/PRS.c **** {
 128:Generated_Source\PSoC4/PRS.c ****     /* Writes seed value and ponynom value provided from customizer */
 129:Generated_Source\PSoC4/PRS.c ****     if (PRS_initVar == 0u)
 130:Generated_Source\PSoC4/PRS.c ****     {
 131:Generated_Source\PSoC4/PRS.c ****         PRS_Init();
 132:Generated_Source\PSoC4/PRS.c ****         PRS_initVar = 1u;
 133:Generated_Source\PSoC4/PRS.c ****     }
 134:Generated_Source\PSoC4/PRS.c **** 
 135:Generated_Source\PSoC4/PRS.c ****     PRS_Enable();
 136:Generated_Source\PSoC4/PRS.c **** }
 137:Generated_Source\PSoC4/PRS.c **** 
 138:Generated_Source\PSoC4/PRS.c **** 
 139:Generated_Source\PSoC4/PRS.c **** /*******************************************************************************
 140:Generated_Source\PSoC4/PRS.c **** * Function Name: PRS_Stop
 141:Generated_Source\PSoC4/PRS.c **** ********************************************************************************
 142:Generated_Source\PSoC4/PRS.c **** *
 143:Generated_Source\PSoC4/PRS.c **** * Summary:
 144:Generated_Source\PSoC4/PRS.c **** *  Stops PRS computation.
 145:Generated_Source\PSoC4/PRS.c **** *
 146:Generated_Source\PSoC4/PRS.c **** * Parameters:
 147:Generated_Source\PSoC4/PRS.c **** *  void
 148:Generated_Source\PSoC4/PRS.c **** *
 149:Generated_Source\PSoC4/PRS.c **** * Return:
 150:Generated_Source\PSoC4/PRS.c **** *  void
 151:Generated_Source\PSoC4/PRS.c **** *
 152:Generated_Source\PSoC4/PRS.c **** *******************************************************************************/
 153:Generated_Source\PSoC4/PRS.c **** void PRS_Stop(void) 
 154:Generated_Source\PSoC4/PRS.c **** {
  58              		.loc 1 154 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 155:Generated_Source\PSoC4/PRS.c ****     PRS_CONTROL_REG &= ((uint8)~PRS_CTRL_ENABLE);
  63              		.loc 1 155 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1378     		ldrb	r3, [r2]
  66 0004 0121     		movs	r1, #1
  67 0006 8B43     		bics	r3, r1
  68 0008 1370     		strb	r3, [r2]
 156:Generated_Source\PSoC4/PRS.c **** }
  69              		.loc 1 156 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 5


  73              		.align	2
  74              	.L5:
  75 000c 75000F40 		.word	1074724981
  76              		.cfi_endproc
  77              	.LFE4:
  78              		.size	PRS_Stop, .-PRS_Stop
  79              		.section	.text.PRS_Step,"ax",%progbits
  80              		.align	2
  81              		.global	PRS_Step
  82              		.code	16
  83              		.thumb_func
  84              		.type	PRS_Step, %function
  85              	PRS_Step:
  86              	.LFB5:
 157:Generated_Source\PSoC4/PRS.c **** 
 158:Generated_Source\PSoC4/PRS.c **** 
 159:Generated_Source\PSoC4/PRS.c **** #if (PRS_RUN_MODE == PRS__APISINGLESTEP)
 160:Generated_Source\PSoC4/PRS.c ****     /*******************************************************************************
 161:Generated_Source\PSoC4/PRS.c ****     * FUNCTION NAME: PRS_Step
 162:Generated_Source\PSoC4/PRS.c ****     ********************************************************************************
 163:Generated_Source\PSoC4/PRS.c ****     *
 164:Generated_Source\PSoC4/PRS.c ****     * Summary:
 165:Generated_Source\PSoC4/PRS.c ****     *  Increments the PRS by one when API single step mode is used.
 166:Generated_Source\PSoC4/PRS.c ****     *
 167:Generated_Source\PSoC4/PRS.c ****     * Parameters:
 168:Generated_Source\PSoC4/PRS.c ****     *  void
 169:Generated_Source\PSoC4/PRS.c ****     *
 170:Generated_Source\PSoC4/PRS.c ****     * Return:
 171:Generated_Source\PSoC4/PRS.c ****     *  void
 172:Generated_Source\PSoC4/PRS.c ****     *
 173:Generated_Source\PSoC4/PRS.c ****     *******************************************************************************/
 174:Generated_Source\PSoC4/PRS.c ****     void PRS_Step(void) 
 175:Generated_Source\PSoC4/PRS.c ****     {
  87              		.loc 1 175 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
 176:Generated_Source\PSoC4/PRS.c ****         #if (PRS_TIME_MULTIPLEXING_ENABLE)
 177:Generated_Source\PSoC4/PRS.c ****             /* Makes 4 pulse, 4x for Time Mult */
 178:Generated_Source\PSoC4/PRS.c ****             PRS_EXECUTE_STEP;
 179:Generated_Source\PSoC4/PRS.c ****             PRS_EXECUTE_STEP;
 180:Generated_Source\PSoC4/PRS.c ****             PRS_EXECUTE_STEP;
 181:Generated_Source\PSoC4/PRS.c ****             PRS_EXECUTE_STEP;
 182:Generated_Source\PSoC4/PRS.c **** 
 183:Generated_Source\PSoC4/PRS.c ****         #else
 184:Generated_Source\PSoC4/PRS.c ****             /* One pulse without Time mult required */
 185:Generated_Source\PSoC4/PRS.c ****             PRS_EXECUTE_STEP;
  92              		.loc 1 185 0
  93 0000 054A     		ldr	r2, .L8
  94 0002 1178     		ldrb	r1, [r2]
  95 0004 0223     		movs	r3, #2
  96 0006 0B43     		orrs	r3, r1
  97 0008 DBB2     		uxtb	r3, r3
  98 000a 1370     		strb	r3, [r2]
  99 000c 1378     		ldrb	r3, [r2]
 100 000e 0221     		movs	r1, #2
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 6


 101 0010 8B43     		bics	r3, r1
 102 0012 1370     		strb	r3, [r2]
 186:Generated_Source\PSoC4/PRS.c **** 
 187:Generated_Source\PSoC4/PRS.c ****         #endif  /* End PRS_TIME_MULTIPLEXING_ENABLE */
 188:Generated_Source\PSoC4/PRS.c ****     }
 103              		.loc 1 188 0
 104              		@ sp needed
 105 0014 7047     		bx	lr
 106              	.L9:
 107 0016 C046     		.align	2
 108              	.L8:
 109 0018 75000F40 		.word	1074724981
 110              		.cfi_endproc
 111              	.LFE5:
 112              		.size	PRS_Step, .-PRS_Step
 113              		.section	.text.PRS_Read,"ax",%progbits
 114              		.align	2
 115              		.global	PRS_Read
 116              		.code	16
 117              		.thumb_func
 118              		.type	PRS_Read, %function
 119              	PRS_Read:
 120              	.LFB6:
 189:Generated_Source\PSoC4/PRS.c **** #endif  /* End (PRS_RUN_MODE == PRS__APISINGLESTEP) */
 190:Generated_Source\PSoC4/PRS.c **** 
 191:Generated_Source\PSoC4/PRS.c **** 
 192:Generated_Source\PSoC4/PRS.c **** #if (PRS_RUN_MODE == PRS__CLOCKED)
 193:Generated_Source\PSoC4/PRS.c ****     #if (PRS_PRS_SIZE <= 32u) /* 8-32 bits PRS */
 194:Generated_Source\PSoC4/PRS.c ****         /*******************************************************************************
 195:Generated_Source\PSoC4/PRS.c ****         * FUNCTION NAME: PRS_ResetSeedInit
 196:Generated_Source\PSoC4/PRS.c ****         ********************************************************************************
 197:Generated_Source\PSoC4/PRS.c ****         *
 198:Generated_Source\PSoC4/PRS.c ****         * Summary:
 199:Generated_Source\PSoC4/PRS.c ****         *  Increments the PRS by one when API single step mode is used.
 200:Generated_Source\PSoC4/PRS.c ****         *
 201:Generated_Source\PSoC4/PRS.c ****         * Parameters:
 202:Generated_Source\PSoC4/PRS.c ****         *  void
 203:Generated_Source\PSoC4/PRS.c ****         *
 204:Generated_Source\PSoC4/PRS.c ****         * Return:
 205:Generated_Source\PSoC4/PRS.c ****         *  void
 206:Generated_Source\PSoC4/PRS.c ****         *
 207:Generated_Source\PSoC4/PRS.c ****         *******************************************************************************/
 208:Generated_Source\PSoC4/PRS.c ****         void PRS_ResetSeedInit(uint16 seed)
 209:Generated_Source\PSoC4/PRS.c ****                                             
 210:Generated_Source\PSoC4/PRS.c ****         {
 211:Generated_Source\PSoC4/PRS.c ****             uint8 enableInterrupts;
 212:Generated_Source\PSoC4/PRS.c **** 
 213:Generated_Source\PSoC4/PRS.c ****             /* Mask the Seed to cut unused bits */
 214:Generated_Source\PSoC4/PRS.c ****             seed &= PRS_MASK;
 215:Generated_Source\PSoC4/PRS.c **** 
 216:Generated_Source\PSoC4/PRS.c ****             /* Change AuxControl reg, need to be safety */
 217:Generated_Source\PSoC4/PRS.c ****             enableInterrupts = CyEnterCriticalSection();
 218:Generated_Source\PSoC4/PRS.c **** 
 219:Generated_Source\PSoC4/PRS.c ****             #if (PRS_TIME_MULTIPLEXING_ENABLE)
 220:Generated_Source\PSoC4/PRS.c ****                 /* Set FIFOs to single register */
 221:Generated_Source\PSoC4/PRS.c ****                 PRS_AUX_CONTROL_A_REG |= PRS_AUXCTRL_FIFO_SINGLE_REG;
 222:Generated_Source\PSoC4/PRS.c **** 
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 7


 223:Generated_Source\PSoC4/PRS.c ****                 #if(PRS_PRS_SIZE > 16u)       /* 17-32 bits PRS */
 224:Generated_Source\PSoC4/PRS.c ****                     PRS_AUX_CONTROL_B_REG |= PRS_AUXCTRL_FIFO_SINGLE_REG;
 225:Generated_Source\PSoC4/PRS.c ****                 #endif  /* End (PRS_PRS_SIZE <= 8u) */
 226:Generated_Source\PSoC4/PRS.c **** 
 227:Generated_Source\PSoC4/PRS.c ****                 /* AuxControl reg settings are done */
 228:Generated_Source\PSoC4/PRS.c ****                 CyExitCriticalSection(enableInterrupts);
 229:Generated_Source\PSoC4/PRS.c **** 
 230:Generated_Source\PSoC4/PRS.c ****                 /* Write Seed COPY */
 231:Generated_Source\PSoC4/PRS.c ****                 #if (PRS_PRS_SIZE <= 16u)          /* 16 bits PRS */
 232:Generated_Source\PSoC4/PRS.c ****                     PRS_SEED_COPY_A__A1_REG = HI8(seed);
 233:Generated_Source\PSoC4/PRS.c ****                     PRS_SEED_COPY_A__A0_REG = LO8(seed);
 234:Generated_Source\PSoC4/PRS.c **** 
 235:Generated_Source\PSoC4/PRS.c ****                 #elif (PRS_PRS_SIZE <= 24u)        /* 24 bits PRS */
 236:Generated_Source\PSoC4/PRS.c ****                     PRS_SEED_COPY_B__A1_REG = LO8(HI16(seed));
 237:Generated_Source\PSoC4/PRS.c ****                     PRS_SEED_COPY_B__A0_REG = HI8(seed);
 238:Generated_Source\PSoC4/PRS.c ****                     PRS_SEED_COPY_A__A0_REG = LO8(seed);
 239:Generated_Source\PSoC4/PRS.c **** 
 240:Generated_Source\PSoC4/PRS.c ****                 #else                                           /* 32 bits PRS */
 241:Generated_Source\PSoC4/PRS.c ****                     PRS_SEED_COPY_B__A1_REG = HI8(HI16(seed));
 242:Generated_Source\PSoC4/PRS.c ****                     PRS_SEED_COPY_A__A1_REG = LO8(HI16(seed));
 243:Generated_Source\PSoC4/PRS.c ****                     PRS_SEED_COPY_B__A0_REG = HI8(seed);
 244:Generated_Source\PSoC4/PRS.c ****                     PRS_SEED_COPY_A__A0_REG = LO8(seed);
 245:Generated_Source\PSoC4/PRS.c ****                 #endif  /* End (PRS_PRS_SIZE <= 32u) */
 246:Generated_Source\PSoC4/PRS.c **** 
 247:Generated_Source\PSoC4/PRS.c ****             #else
 248:Generated_Source\PSoC4/PRS.c ****                 /* Set FIFOs to single register */
 249:Generated_Source\PSoC4/PRS.c ****                 #if (PRS_PRS_SIZE <= 8u)      /* 8 bits PRS */
 250:Generated_Source\PSoC4/PRS.c ****                     PRS_AUX_CONTROL_A_REG |= PRS_AUXCTRL_FIFO_SINGLE_REG;
 251:Generated_Source\PSoC4/PRS.c **** 
 252:Generated_Source\PSoC4/PRS.c ****                 #elif (PRS_PRS_SIZE <= 16u)      /* 16 bits PRS */
 253:Generated_Source\PSoC4/PRS.c ****                     PRS_AUX_CONTROL_A_REG  |= PRS_AUXCTRL_FIFO_SINGLE_REG;
 254:Generated_Source\PSoC4/PRS.c ****                     PRS_AUX_CONTROL_B_REG  |= PRS_AUXCTRL_FIFO_SINGLE_REG;
 255:Generated_Source\PSoC4/PRS.c **** 
 256:Generated_Source\PSoC4/PRS.c ****                 #elif (PRS_PRS_SIZE <= 24u)      /* 24-39 bits PRS */
 257:Generated_Source\PSoC4/PRS.c ****                     PRS_AUX_CONTROL_A_REG  |= PRS_AUXCTRL_FIFO_SINGLE_REG;
 258:Generated_Source\PSoC4/PRS.c ****                     PRS_AUX_CONTROL_B_REG  |= PRS_AUXCTRL_FIFO_SINGLE_REG;
 259:Generated_Source\PSoC4/PRS.c ****                     PRS_AUX_CONTROL_C_REG  |= PRS_AUXCTRL_FIFO_SINGLE_REG;
 260:Generated_Source\PSoC4/PRS.c **** 
 261:Generated_Source\PSoC4/PRS.c ****                 #elif (PRS_PRS_SIZE <= 32u)      /* 40-55 bits PRS */
 262:Generated_Source\PSoC4/PRS.c ****                     PRS_AUX_CONTROL_A_REG  |= PRS_AUXCTRL_FIFO_SINGLE_REG;
 263:Generated_Source\PSoC4/PRS.c ****                     PRS_AUX_CONTROL_B_REG  |= PRS_AUXCTRL_FIFO_SINGLE_REG;
 264:Generated_Source\PSoC4/PRS.c ****                     PRS_AUX_CONTROL_C_REG  |= PRS_AUXCTRL_FIFO_SINGLE_REG;
 265:Generated_Source\PSoC4/PRS.c ****                     PRS_AUX_CONTROL_D_REG  |= PRS_AUXCTRL_FIFO_SINGLE_REG;
 266:Generated_Source\PSoC4/PRS.c **** 
 267:Generated_Source\PSoC4/PRS.c ****                 #endif  /* End (PRS_PRS_SIZE <= 8u) */
 268:Generated_Source\PSoC4/PRS.c **** 
 269:Generated_Source\PSoC4/PRS.c ****                 /* AuxControl reg setting are done */
 270:Generated_Source\PSoC4/PRS.c ****                 CyExitCriticalSection(enableInterrupts);
 271:Generated_Source\PSoC4/PRS.c **** 
 272:Generated_Source\PSoC4/PRS.c ****                 /* Write Seed COPY */
 273:Generated_Source\PSoC4/PRS.c ****                 CY_SET_REG16(PRS_SEED_COPY_PTR, seed);
 274:Generated_Source\PSoC4/PRS.c **** 
 275:Generated_Source\PSoC4/PRS.c ****             #endif  /* End (PRS_TIME_MULTIPLEXING_ENABLE) */
 276:Generated_Source\PSoC4/PRS.c ****         }
 277:Generated_Source\PSoC4/PRS.c **** 
 278:Generated_Source\PSoC4/PRS.c ****     #else
 279:Generated_Source\PSoC4/PRS.c **** 
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 8


 280:Generated_Source\PSoC4/PRS.c ****         /*******************************************************************************
 281:Generated_Source\PSoC4/PRS.c ****         * FUNCTION NAME: PRS_ResetSeedInitUpper
 282:Generated_Source\PSoC4/PRS.c ****         ********************************************************************************
 283:Generated_Source\PSoC4/PRS.c ****         *
 284:Generated_Source\PSoC4/PRS.c ****         * Summary:
 285:Generated_Source\PSoC4/PRS.c ****         *  Increments the PRS by one when API single step mode is used.
 286:Generated_Source\PSoC4/PRS.c ****         *
 287:Generated_Source\PSoC4/PRS.c ****         * Parameters:
 288:Generated_Source\PSoC4/PRS.c ****         *  void
 289:Generated_Source\PSoC4/PRS.c ****         *
 290:Generated_Source\PSoC4/PRS.c ****         * Return:
 291:Generated_Source\PSoC4/PRS.c ****         *  void
 292:Generated_Source\PSoC4/PRS.c ****         *
 293:Generated_Source\PSoC4/PRS.c ****         *******************************************************************************/
 294:Generated_Source\PSoC4/PRS.c ****         void PRS_ResetSeedInitUpper(uint32 seed) 
 295:Generated_Source\PSoC4/PRS.c ****         {
 296:Generated_Source\PSoC4/PRS.c **** 			uint8 enableInterrupts;
 297:Generated_Source\PSoC4/PRS.c **** 
 298:Generated_Source\PSoC4/PRS.c **** 			/* Mask the Seed Upper half to cut unused bits */
 299:Generated_Source\PSoC4/PRS.c ****             seed &= PRS_MASK;
 300:Generated_Source\PSoC4/PRS.c **** 
 301:Generated_Source\PSoC4/PRS.c **** 			/* Change AuxControl reg, need to be safety */
 302:Generated_Source\PSoC4/PRS.c ****             enableInterrupts = CyEnterCriticalSection();
 303:Generated_Source\PSoC4/PRS.c **** 
 304:Generated_Source\PSoC4/PRS.c ****             /* Set FIFOs to single register */
 305:Generated_Source\PSoC4/PRS.c ****             PRS_AUX_CONTROL_A_REG |= PRS_AUXCTRL_FIFO_SINGLE_REG;
 306:Generated_Source\PSoC4/PRS.c ****             PRS_AUX_CONTROL_B_REG |= PRS_AUXCTRL_FIFO_SINGLE_REG;
 307:Generated_Source\PSoC4/PRS.c ****             PRS_AUX_CONTROL_C_REG |= PRS_AUXCTRL_FIFO_SINGLE_REG;
 308:Generated_Source\PSoC4/PRS.c **** 
 309:Generated_Source\PSoC4/PRS.c **** 			#if (PRS_PRS_SIZE > 48u)               /* 49-64 bits PRS */
 310:Generated_Source\PSoC4/PRS.c ****                 PRS_AUX_CONTROL_D_REG |= PRS_AUXCTRL_FIFO_SINGLE_REG;
 311:Generated_Source\PSoC4/PRS.c ****             #endif  /* End (PRS_PRS_SIZE <= 8u) */
 312:Generated_Source\PSoC4/PRS.c **** 
 313:Generated_Source\PSoC4/PRS.c ****             /* AuxControl reg settings are done */
 314:Generated_Source\PSoC4/PRS.c ****             CyExitCriticalSection(enableInterrupts);
 315:Generated_Source\PSoC4/PRS.c **** 
 316:Generated_Source\PSoC4/PRS.c ****             /* Write Seed Upper COPY */
 317:Generated_Source\PSoC4/PRS.c ****             #if (PRS_PRS_SIZE <= 40u)          /* 40 bits PRS */
 318:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_UPPER_COPY_C__A1_REG = LO8(seed);
 319:Generated_Source\PSoC4/PRS.c **** 
 320:Generated_Source\PSoC4/PRS.c ****             #elif (PRS_PRS_SIZE <= 48u)        /* 48 bits PRS */
 321:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_UPPER_COPY_C__A1_REG = HI8(seed);
 322:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_UPPER_COPY_B__A1_REG = LO8(seed);
 323:Generated_Source\PSoC4/PRS.c **** 
 324:Generated_Source\PSoC4/PRS.c ****             #elif (PRS_PRS_SIZE <= 56u)        /* 56 bits PRS */
 325:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_UPPER_COPY_D__A1_REG = LO8(HI16(seed));
 326:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_UPPER_COPY_C__A1_REG = HI8(seed);
 327:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_UPPER_COPY_B__A1_REG = HI8(seed);
 328:Generated_Source\PSoC4/PRS.c **** 
 329:Generated_Source\PSoC4/PRS.c ****             #else                                           /* 64 bits PRS */
 330:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_UPPER_COPY_D__A1_REG = HI8(HI16(seed));
 331:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_UPPER_COPY_C__A1_REG = LO8(HI16(seed));
 332:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_UPPER_COPY_B__A1_REG = HI8(seed);
 333:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_UPPER_COPY_A__A1_REG = LO8(seed);
 334:Generated_Source\PSoC4/PRS.c **** 
 335:Generated_Source\PSoC4/PRS.c ****             #endif  /* End (PRS_PRS_SIZE <= 32u) */
 336:Generated_Source\PSoC4/PRS.c ****         }
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 9


 337:Generated_Source\PSoC4/PRS.c **** 
 338:Generated_Source\PSoC4/PRS.c **** 
 339:Generated_Source\PSoC4/PRS.c ****         /*******************************************************************************
 340:Generated_Source\PSoC4/PRS.c ****         * FUNCTION NAME: PRS_ResetSeedInitLower
 341:Generated_Source\PSoC4/PRS.c ****         ********************************************************************************
 342:Generated_Source\PSoC4/PRS.c ****         *
 343:Generated_Source\PSoC4/PRS.c ****         * Summary:
 344:Generated_Source\PSoC4/PRS.c ****         *  Increments the PRS by one when API single step mode is used.
 345:Generated_Source\PSoC4/PRS.c ****         *
 346:Generated_Source\PSoC4/PRS.c ****         * Parameters:
 347:Generated_Source\PSoC4/PRS.c ****         *  void
 348:Generated_Source\PSoC4/PRS.c ****         *
 349:Generated_Source\PSoC4/PRS.c ****         * Return:
 350:Generated_Source\PSoC4/PRS.c ****         *  void
 351:Generated_Source\PSoC4/PRS.c ****         *
 352:Generated_Source\PSoC4/PRS.c ****         *******************************************************************************/
 353:Generated_Source\PSoC4/PRS.c ****         void PRS_ResetSeedInitLower(uint32 seed) 
 354:Generated_Source\PSoC4/PRS.c ****         {
 355:Generated_Source\PSoC4/PRS.c ****             /* Write Seed Lower COPY */
 356:Generated_Source\PSoC4/PRS.c ****             #if (PRS_PRS_SIZE <= 40u)          /* 40 bits PRS */
 357:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_LOWER_COPY_B__A1_REG = HI8(HI16(seed));
 358:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_LOWER_COPY_C__A0_REG = LO8(HI16(seed));
 359:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_LOWER_COPY_B__A0_REG = HI8(seed);
 360:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_LOWER_COPY_A__A0_REG = LO8(seed);
 361:Generated_Source\PSoC4/PRS.c **** 
 362:Generated_Source\PSoC4/PRS.c ****             #elif (PRS_PRS_SIZE <= 48u)        /* 48 bits PRS */
 363:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_LOWER_COPY_A__A1_REG = HI8(HI16(seed));
 364:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_LOWER_COPY_C__A0_REG = LO8(HI16(seed));
 365:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_LOWER_COPY_B__A0_REG = HI8(seed);
 366:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_LOWER_COPY_A__A0_REG = LO8(seed);
 367:Generated_Source\PSoC4/PRS.c **** 
 368:Generated_Source\PSoC4/PRS.c ****             #else                                           /* 64 bits PRS */
 369:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_LOWER_COPY_D__A0_REG = HI8(HI16(seed));
 370:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_LOWER_COPY_C__A0_REG = LO8(HI16(seed));
 371:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_LOWER_COPY_B__A0_REG = HI8(seed);
 372:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_LOWER_COPY_A__A0_REG = LO8(seed);
 373:Generated_Source\PSoC4/PRS.c **** 
 374:Generated_Source\PSoC4/PRS.c ****             #endif  /* End (PRS_PRS_SIZE <= 32u) */
 375:Generated_Source\PSoC4/PRS.c ****         }
 376:Generated_Source\PSoC4/PRS.c **** 
 377:Generated_Source\PSoC4/PRS.c ****     #endif  /* End (PRS_PRS_SIZE <= 32u) */
 378:Generated_Source\PSoC4/PRS.c **** 
 379:Generated_Source\PSoC4/PRS.c **** #endif  /* End (PRS_RUN_MODE == PRS__CLOCKED) */
 380:Generated_Source\PSoC4/PRS.c **** 
 381:Generated_Source\PSoC4/PRS.c **** 
 382:Generated_Source\PSoC4/PRS.c **** #if(PRS_PRS_SIZE <= 32u) /* 8-32 bits PRS */
 383:Generated_Source\PSoC4/PRS.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/PRS.c ****     * Function Name: PRS_Read
 385:Generated_Source\PSoC4/PRS.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/PRS.c ****     *
 387:Generated_Source\PSoC4/PRS.c ****     * Summary:
 388:Generated_Source\PSoC4/PRS.c ****     *  Reads PRS value.
 389:Generated_Source\PSoC4/PRS.c ****     *
 390:Generated_Source\PSoC4/PRS.c ****     * Parameters:
 391:Generated_Source\PSoC4/PRS.c ****     *  void
 392:Generated_Source\PSoC4/PRS.c ****     *
 393:Generated_Source\PSoC4/PRS.c ****     * Return:
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 10


 394:Generated_Source\PSoC4/PRS.c ****     *  Returns PRS value.
 395:Generated_Source\PSoC4/PRS.c ****     *
 396:Generated_Source\PSoC4/PRS.c ****     * Side Effects:
 397:Generated_Source\PSoC4/PRS.c ****     *  The seed value is cut according to mask = 2^(Resolution) - 1.
 398:Generated_Source\PSoC4/PRS.c ****     *  For example if PRS Resolution is 14 bits the mask value is:
 399:Generated_Source\PSoC4/PRS.c ****     *  mask = 2^(14) - 1 = 0x3FFFu.
 400:Generated_Source\PSoC4/PRS.c ****     *  The seed value = 0xFFFFu is cut:
 401:Generated_Source\PSoC4/PRS.c ****     *  seed & mask = 0xFFFFu & 0x3FFFu = 0x3FFFu.
 402:Generated_Source\PSoC4/PRS.c ****     *
 403:Generated_Source\PSoC4/PRS.c ****     *******************************************************************************/
 404:Generated_Source\PSoC4/PRS.c ****     uint16 PRS_Read(void) 
 405:Generated_Source\PSoC4/PRS.c ****     {
 121              		.loc 1 405 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 406:Generated_Source\PSoC4/PRS.c ****         /* Read PRS */
 407:Generated_Source\PSoC4/PRS.c ****         #if (PRS_TIME_MULTIPLEXING_ENABLE)
 408:Generated_Source\PSoC4/PRS.c **** 
 409:Generated_Source\PSoC4/PRS.c ****             uint16 seed;
 410:Generated_Source\PSoC4/PRS.c **** 
 411:Generated_Source\PSoC4/PRS.c ****             #if (PRS_PRS_SIZE <= 16u)          /* 16 bits PRS */
 412:Generated_Source\PSoC4/PRS.c ****                 seed = ((uint16) PRS_SEED_A__A1_REG) << 8u;
 413:Generated_Source\PSoC4/PRS.c ****                 seed |= PRS_SEED_A__A0_REG;
 414:Generated_Source\PSoC4/PRS.c **** 
 415:Generated_Source\PSoC4/PRS.c ****             #elif (PRS_PRS_SIZE <= 24u)        /* 24 bits PRS */
 416:Generated_Source\PSoC4/PRS.c ****                 seed = ((uint32) (PRS_SEED_B__A1_REG)) << 16u;
 417:Generated_Source\PSoC4/PRS.c ****                 seed |= ((uint32) (PRS_SEED_B__A0_REG)) << 8u;
 418:Generated_Source\PSoC4/PRS.c ****                 seed |= PRS_SEED_A__A0_REG;
 419:Generated_Source\PSoC4/PRS.c **** 
 420:Generated_Source\PSoC4/PRS.c ****             #else                                           /* 32 bits PRS */
 421:Generated_Source\PSoC4/PRS.c ****                 seed = ((uint32) PRS_SEED_B__A1_REG) << 24u;
 422:Generated_Source\PSoC4/PRS.c ****                 seed |= ((uint32) PRS_SEED_A__A1_REG) << 16u;
 423:Generated_Source\PSoC4/PRS.c ****                 seed |= ((uint32) PRS_SEED_B__A0_REG) << 8u;
 424:Generated_Source\PSoC4/PRS.c ****                 seed |= PRS_SEED_A__A0_REG;
 425:Generated_Source\PSoC4/PRS.c **** 
 426:Generated_Source\PSoC4/PRS.c ****             #endif  /* End (PRS_PRS_SIZE <= 8u) */
 427:Generated_Source\PSoC4/PRS.c **** 
 428:Generated_Source\PSoC4/PRS.c ****             return (seed  & PRS_MASK);
 429:Generated_Source\PSoC4/PRS.c **** 
 430:Generated_Source\PSoC4/PRS.c ****         #else
 431:Generated_Source\PSoC4/PRS.c **** 
 432:Generated_Source\PSoC4/PRS.c ****             return (CY_GET_REG16(PRS_SEED_PTR) & PRS_MASK);
 126              		.loc 1 432 0
 127 0000 014B     		ldr	r3, .L11
 128 0002 1888     		ldrh	r0, [r3]
 129 0004 80B2     		uxth	r0, r0
 433:Generated_Source\PSoC4/PRS.c **** 
 434:Generated_Source\PSoC4/PRS.c ****         #endif  /* End (PRS_TIME_MULTIPLEXING_ENABLE) */
 435:Generated_Source\PSoC4/PRS.c ****     }
 130              		.loc 1 435 0
 131              		@ sp needed
 132 0006 7047     		bx	lr
 133              	.L12:
 134              		.align	2
 135              	.L11:
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 11


 136 0008 08100F40 		.word	1074728968
 137              		.cfi_endproc
 138              	.LFE6:
 139              		.size	PRS_Read, .-PRS_Read
 140              		.section	.text.PRS_WriteSeed,"ax",%progbits
 141              		.align	2
 142              		.global	PRS_WriteSeed
 143              		.code	16
 144              		.thumb_func
 145              		.type	PRS_WriteSeed, %function
 146              	PRS_WriteSeed:
 147              	.LFB7:
 436:Generated_Source\PSoC4/PRS.c **** 
 437:Generated_Source\PSoC4/PRS.c **** 
 438:Generated_Source\PSoC4/PRS.c ****     /*******************************************************************************
 439:Generated_Source\PSoC4/PRS.c ****     * Function Name: PRS_WriteSeed
 440:Generated_Source\PSoC4/PRS.c ****     ********************************************************************************
 441:Generated_Source\PSoC4/PRS.c ****     *
 442:Generated_Source\PSoC4/PRS.c ****     * Summary:
 443:Generated_Source\PSoC4/PRS.c ****     *  Writes seed value.
 444:Generated_Source\PSoC4/PRS.c ****     *
 445:Generated_Source\PSoC4/PRS.c ****     * Parameters:
 446:Generated_Source\PSoC4/PRS.c ****     *  seed:  Seed value.
 447:Generated_Source\PSoC4/PRS.c ****     *
 448:Generated_Source\PSoC4/PRS.c ****     * Return:
 449:Generated_Source\PSoC4/PRS.c ****     *  void
 450:Generated_Source\PSoC4/PRS.c ****     *
 451:Generated_Source\PSoC4/PRS.c ****     * Side Effects:
 452:Generated_Source\PSoC4/PRS.c ****     *  The seed value is cut according to mask = 2^(Resolution) - 1.
 453:Generated_Source\PSoC4/PRS.c ****     *  For example if PRS Resolution is 14 bits the mask value is:
 454:Generated_Source\PSoC4/PRS.c ****     *  mask = 2^(14) - 1 = 0x3FFFu.
 455:Generated_Source\PSoC4/PRS.c ****     *  The seed value = 0xFFFFu is cut:
 456:Generated_Source\PSoC4/PRS.c ****     *  seed & mask = 0xFFFFu & 0x3FFFu = 0x3FFFu.
 457:Generated_Source\PSoC4/PRS.c ****     *
 458:Generated_Source\PSoC4/PRS.c ****     *******************************************************************************/
 459:Generated_Source\PSoC4/PRS.c ****     void PRS_WriteSeed(uint16 seed) 
 460:Generated_Source\PSoC4/PRS.c ****     {
 148              		.loc 1 460 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153              	.LVL0:
 461:Generated_Source\PSoC4/PRS.c ****         /* Masks the Seed to cut unused bits */
 462:Generated_Source\PSoC4/PRS.c ****         seed &= PRS_MASK;
 463:Generated_Source\PSoC4/PRS.c **** 
 464:Generated_Source\PSoC4/PRS.c ****         /* Writes Seed */
 465:Generated_Source\PSoC4/PRS.c ****         #if (PRS_TIME_MULTIPLEXING_ENABLE)
 466:Generated_Source\PSoC4/PRS.c **** 
 467:Generated_Source\PSoC4/PRS.c ****             #if (PRS_PRS_SIZE <= 16u)          /* 16 bits PRS */
 468:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_A__A1_REG = HI8(seed);
 469:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_A__A0_REG = LO8(seed);
 470:Generated_Source\PSoC4/PRS.c **** 
 471:Generated_Source\PSoC4/PRS.c ****             #elif (PRS_PRS_SIZE <= 24u)        /* 24 bits PRS */
 472:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_B__A1_REG = LO8(HI16(seed));
 473:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_B__A0_REG = HI8(seed);
 474:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_A__A0_REG = LO8(seed);
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 12


 475:Generated_Source\PSoC4/PRS.c **** 
 476:Generated_Source\PSoC4/PRS.c ****             #else                                           /* 32 bits PRS */
 477:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_B__A1_REG = HI8(HI16(seed));
 478:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_A__A1_REG = LO8(HI16(seed));
 479:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_B__A0_REG = HI8(seed);
 480:Generated_Source\PSoC4/PRS.c ****                 PRS_SEED_A__A0_REG = LO8(seed);
 481:Generated_Source\PSoC4/PRS.c ****             #endif  /* End (PRS_PRS_SIZE <= 32u) */
 482:Generated_Source\PSoC4/PRS.c **** 
 483:Generated_Source\PSoC4/PRS.c ****             /* Resets triggers */
 484:Generated_Source\PSoC4/PRS.c ****             #if (PRS_WAKEUP_BEHAVIOUR == PRS__RESUMEWORK)
 485:Generated_Source\PSoC4/PRS.c ****                 if((PRS_sleepState & PRS_NORMAL_SEQUENCE) != 0u)
 486:Generated_Source\PSoC4/PRS.c ****                 {
 487:Generated_Source\PSoC4/PRS.c ****                     PRS_EXECUTE_DFF_RESET;
 488:Generated_Source\PSoC4/PRS.c ****                 }
 489:Generated_Source\PSoC4/PRS.c ****             #else
 490:Generated_Source\PSoC4/PRS.c ****                 PRS_EXECUTE_DFF_RESET;
 491:Generated_Source\PSoC4/PRS.c ****             #endif  /* (PRS_WAKEUP_BEHAVIOUR == PRS__RESUMEWORK) */
 492:Generated_Source\PSoC4/PRS.c **** 
 493:Generated_Source\PSoC4/PRS.c ****         #else
 494:Generated_Source\PSoC4/PRS.c **** 
 495:Generated_Source\PSoC4/PRS.c ****             CY_SET_REG16(PRS_SEED_PTR, seed);
 154              		.loc 1 495 0
 155 0000 014B     		ldr	r3, .L14
 156 0002 1880     		strh	r0, [r3]
 496:Generated_Source\PSoC4/PRS.c **** 
 497:Generated_Source\PSoC4/PRS.c ****         #endif  /* End (PRS_TIME_MULTIPLEXING_ENABLE) */
 498:Generated_Source\PSoC4/PRS.c ****     }
 157              		.loc 1 498 0
 158              		@ sp needed
 159 0004 7047     		bx	lr
 160              	.L15:
 161 0006 C046     		.align	2
 162              	.L14:
 163 0008 08100F40 		.word	1074728968
 164              		.cfi_endproc
 165              	.LFE7:
 166              		.size	PRS_WriteSeed, .-PRS_WriteSeed
 167              		.section	.text.PRS_ReadPolynomial,"ax",%progbits
 168              		.align	2
 169              		.global	PRS_ReadPolynomial
 170              		.code	16
 171              		.thumb_func
 172              		.type	PRS_ReadPolynomial, %function
 173              	PRS_ReadPolynomial:
 174              	.LFB8:
 499:Generated_Source\PSoC4/PRS.c **** 
 500:Generated_Source\PSoC4/PRS.c **** 
 501:Generated_Source\PSoC4/PRS.c ****     /*******************************************************************************
 502:Generated_Source\PSoC4/PRS.c ****     * Function Name: PRS_ReadPolynomial
 503:Generated_Source\PSoC4/PRS.c ****     ********************************************************************************
 504:Generated_Source\PSoC4/PRS.c ****     *
 505:Generated_Source\PSoC4/PRS.c ****     * Summary:
 506:Generated_Source\PSoC4/PRS.c ****     *  Reads PRS polynomial value.
 507:Generated_Source\PSoC4/PRS.c ****     *
 508:Generated_Source\PSoC4/PRS.c ****     * Parameters:
 509:Generated_Source\PSoC4/PRS.c ****     *  void
 510:Generated_Source\PSoC4/PRS.c ****     *
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 13


 511:Generated_Source\PSoC4/PRS.c ****     * Return:
 512:Generated_Source\PSoC4/PRS.c ****     *  Returns PRS polynomial value.
 513:Generated_Source\PSoC4/PRS.c ****     *
 514:Generated_Source\PSoC4/PRS.c ****     *******************************************************************************/
 515:Generated_Source\PSoC4/PRS.c ****     uint16 PRS_ReadPolynomial(void)
 516:Generated_Source\PSoC4/PRS.c ****                                 
 517:Generated_Source\PSoC4/PRS.c ****     {
 175              		.loc 1 517 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 518:Generated_Source\PSoC4/PRS.c ****         /* Reads polynomial */
 519:Generated_Source\PSoC4/PRS.c ****         #if (PRS_TIME_MULTIPLEXING_ENABLE)
 520:Generated_Source\PSoC4/PRS.c **** 
 521:Generated_Source\PSoC4/PRS.c ****             uint16 polynomial;
 522:Generated_Source\PSoC4/PRS.c **** 
 523:Generated_Source\PSoC4/PRS.c ****             #if (PRS_PRS_SIZE <= 16u)          /* 16 bits PRS */
 524:Generated_Source\PSoC4/PRS.c ****                 polynomial = ((uint16) PRS_POLYNOM_A__D1_REG) << 8u;
 525:Generated_Source\PSoC4/PRS.c ****                 polynomial |= (PRS_POLYNOM_A__D0_REG);
 526:Generated_Source\PSoC4/PRS.c **** 
 527:Generated_Source\PSoC4/PRS.c ****             #elif (PRS_PRS_SIZE <= 24u)        /* 24 bits PRS */
 528:Generated_Source\PSoC4/PRS.c ****                 polynomial = ((uint32) PRS_POLYNOM_B__D1_REG) << 16u;
 529:Generated_Source\PSoC4/PRS.c ****                 polynomial |= ((uint32) PRS_POLYNOM_B__D0_REG) << 8u;
 530:Generated_Source\PSoC4/PRS.c ****                 polynomial |= PRS_POLYNOM_A__D0_REG;
 531:Generated_Source\PSoC4/PRS.c **** 
 532:Generated_Source\PSoC4/PRS.c ****             #else                                           /* 32 bits PRS */
 533:Generated_Source\PSoC4/PRS.c ****                 polynomial = ((uint32) PRS_POLYNOM_B__D1_REG) << 24u;
 534:Generated_Source\PSoC4/PRS.c ****                 polynomial |= ((uint32) PRS_POLYNOM_A__D1_REG) << 16u;
 535:Generated_Source\PSoC4/PRS.c ****                 polynomial |= ((uint32) PRS_POLYNOM_B__D0_REG) << 8u;
 536:Generated_Source\PSoC4/PRS.c ****                 polynomial |= PRS_POLYNOM_A__D0_REG;
 537:Generated_Source\PSoC4/PRS.c **** 
 538:Generated_Source\PSoC4/PRS.c ****             #endif  /* End (PRS_PRS_SIZE <= 32u) */
 539:Generated_Source\PSoC4/PRS.c **** 
 540:Generated_Source\PSoC4/PRS.c ****             return polynomial;
 541:Generated_Source\PSoC4/PRS.c **** 
 542:Generated_Source\PSoC4/PRS.c ****         #else
 543:Generated_Source\PSoC4/PRS.c **** 
 544:Generated_Source\PSoC4/PRS.c ****             return CY_GET_REG16(PRS_POLYNOM_PTR);
 180              		.loc 1 544 0
 181 0000 014B     		ldr	r3, .L17
 182 0002 1888     		ldrh	r0, [r3]
 183 0004 80B2     		uxth	r0, r0
 545:Generated_Source\PSoC4/PRS.c **** 
 546:Generated_Source\PSoC4/PRS.c ****         #endif  /* End (PRS_TIME_MULTIPLEXING_ENABLE) */
 547:Generated_Source\PSoC4/PRS.c ****     }
 184              		.loc 1 547 0
 185              		@ sp needed
 186 0006 7047     		bx	lr
 187              	.L18:
 188              		.align	2
 189              	.L17:
 190 0008 48100F40 		.word	1074729032
 191              		.cfi_endproc
 192              	.LFE8:
 193              		.size	PRS_ReadPolynomial, .-PRS_ReadPolynomial
 194              		.section	.text.PRS_WritePolynomial,"ax",%progbits
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 14


 195              		.align	2
 196              		.global	PRS_WritePolynomial
 197              		.code	16
 198              		.thumb_func
 199              		.type	PRS_WritePolynomial, %function
 200              	PRS_WritePolynomial:
 201              	.LFB9:
 548:Generated_Source\PSoC4/PRS.c **** 
 549:Generated_Source\PSoC4/PRS.c **** 
 550:Generated_Source\PSoC4/PRS.c ****     /*******************************************************************************
 551:Generated_Source\PSoC4/PRS.c ****     * Function Name: PRS_WritePolynomial
 552:Generated_Source\PSoC4/PRS.c ****     ********************************************************************************
 553:Generated_Source\PSoC4/PRS.c ****     *
 554:Generated_Source\PSoC4/PRS.c ****     * Summary:
 555:Generated_Source\PSoC4/PRS.c ****     *  Writes PRS polynomial value.
 556:Generated_Source\PSoC4/PRS.c ****     *
 557:Generated_Source\PSoC4/PRS.c ****     * Parameters:
 558:Generated_Source\PSoC4/PRS.c ****     *  polynomial:  PRS polynomial.
 559:Generated_Source\PSoC4/PRS.c ****     *
 560:Generated_Source\PSoC4/PRS.c ****     * Return:
 561:Generated_Source\PSoC4/PRS.c ****     *  void
 562:Generated_Source\PSoC4/PRS.c ****     *
 563:Generated_Source\PSoC4/PRS.c ****     * Side Effects:
 564:Generated_Source\PSoC4/PRS.c ****     *  The polynomial value is cut according to mask = 2^(Resolution) - 1.
 565:Generated_Source\PSoC4/PRS.c ****     *  For example if PRS Resolution is 14 bits the mask value is:
 566:Generated_Source\PSoC4/PRS.c ****     *  mask = 2^(14) - 1 = 0x3FFFu.
 567:Generated_Source\PSoC4/PRS.c ****     *  The polynomial value = 0xFFFFu is cut:
 568:Generated_Source\PSoC4/PRS.c ****     *  polynomial & mask = 0xFFFFu & 0x3FFFu = 0x3FFFu.
 569:Generated_Source\PSoC4/PRS.c ****     *
 570:Generated_Source\PSoC4/PRS.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/PRS.c ****     void PRS_WritePolynomial(uint16 polynomial)
 572:Generated_Source\PSoC4/PRS.c ****                                           
 573:Generated_Source\PSoC4/PRS.c ****     {
 202              		.loc 1 573 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207              	.LVL1:
 574:Generated_Source\PSoC4/PRS.c ****         /* Mask polynomial to cut unused bits */
 575:Generated_Source\PSoC4/PRS.c ****         polynomial &= PRS_MASK;
 576:Generated_Source\PSoC4/PRS.c **** 
 577:Generated_Source\PSoC4/PRS.c ****         /* Write polynomial */
 578:Generated_Source\PSoC4/PRS.c ****         #if (PRS_TIME_MULTIPLEXING_ENABLE)
 579:Generated_Source\PSoC4/PRS.c **** 
 580:Generated_Source\PSoC4/PRS.c ****             #if (PRS_PRS_SIZE <= 16u)          /* 16 bits PRS */
 581:Generated_Source\PSoC4/PRS.c **** 
 582:Generated_Source\PSoC4/PRS.c ****                 PRS_POLYNOM_A__D1_REG = HI8(polynomial);
 583:Generated_Source\PSoC4/PRS.c ****                 PRS_POLYNOM_A__D0_REG = LO8(polynomial);
 584:Generated_Source\PSoC4/PRS.c **** 
 585:Generated_Source\PSoC4/PRS.c ****             #elif (PRS_PRS_SIZE <= 24u)        /* 24 bits PRS */
 586:Generated_Source\PSoC4/PRS.c ****                 PRS_POLYNOM_B__D1_REG = LO8(HI16(polynomial));
 587:Generated_Source\PSoC4/PRS.c ****                 PRS_POLYNOM_B__D0_REG = HI8(polynomial);
 588:Generated_Source\PSoC4/PRS.c ****                 PRS_POLYNOM_A__D0_REG = LO8(polynomial);
 589:Generated_Source\PSoC4/PRS.c **** 
 590:Generated_Source\PSoC4/PRS.c ****             #else                                           /* 32 bits PRS */
 591:Generated_Source\PSoC4/PRS.c ****                 PRS_POLYNOM_B__D1_REG = HI8(HI16(polynomial));
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 15


 592:Generated_Source\PSoC4/PRS.c ****                 PRS_POLYNOM_A__D1_REG = LO8(HI16(polynomial));
 593:Generated_Source\PSoC4/PRS.c ****                 PRS_POLYNOM_B__D0_REG = HI8(polynomial);
 594:Generated_Source\PSoC4/PRS.c ****                 PRS_POLYNOM_A__D0_REG = LO8(polynomial);
 595:Generated_Source\PSoC4/PRS.c **** 
 596:Generated_Source\PSoC4/PRS.c ****             #endif  /* End (PRS_PRS_SIZE <= 32u) */
 597:Generated_Source\PSoC4/PRS.c **** 
 598:Generated_Source\PSoC4/PRS.c ****             /* Resets triggers */
 599:Generated_Source\PSoC4/PRS.c ****             #if (PRS_WAKEUP_BEHAVIOUR == PRS__RESUMEWORK)
 600:Generated_Source\PSoC4/PRS.c ****                 if((PRS_sleepState & PRS_NORMAL_SEQUENCE) != 0u)
 601:Generated_Source\PSoC4/PRS.c ****                 {
 602:Generated_Source\PSoC4/PRS.c ****                     PRS_EXECUTE_DFF_RESET;
 603:Generated_Source\PSoC4/PRS.c ****                 }
 604:Generated_Source\PSoC4/PRS.c ****             #else
 605:Generated_Source\PSoC4/PRS.c ****                 PRS_EXECUTE_DFF_RESET;
 606:Generated_Source\PSoC4/PRS.c ****             #endif  /* (PRS_WAKEUP_BEHAVIOUR == PRS__RESUMEWORK) */
 607:Generated_Source\PSoC4/PRS.c **** 
 608:Generated_Source\PSoC4/PRS.c ****         #else
 609:Generated_Source\PSoC4/PRS.c **** 
 610:Generated_Source\PSoC4/PRS.c ****             CY_SET_REG16(PRS_POLYNOM_PTR, polynomial);
 208              		.loc 1 610 0
 209 0000 014B     		ldr	r3, .L20
 210 0002 1880     		strh	r0, [r3]
 611:Generated_Source\PSoC4/PRS.c **** 
 612:Generated_Source\PSoC4/PRS.c ****         #endif  /* End (PRS_TIME_MULTIPLEXING_ENABLE) */
 613:Generated_Source\PSoC4/PRS.c ****     }
 211              		.loc 1 613 0
 212              		@ sp needed
 213 0004 7047     		bx	lr
 214              	.L21:
 215 0006 C046     		.align	2
 216              	.L20:
 217 0008 48100F40 		.word	1074729032
 218              		.cfi_endproc
 219              	.LFE9:
 220              		.size	PRS_WritePolynomial, .-PRS_WritePolynomial
 221              		.section	.text.PRS_Init,"ax",%progbits
 222              		.align	2
 223              		.global	PRS_Init
 224              		.code	16
 225              		.thumb_func
 226              		.type	PRS_Init, %function
 227              	PRS_Init:
 228              	.LFB1:
  61:Generated_Source\PSoC4/PRS.c ****     /* Writes seed value and ponynom value provided for customizer */
 229              		.loc 1 61 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233 0000 10B5     		push	{r4, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
  64:Generated_Source\PSoC4/PRS.c ****         PRS_WriteSeed(PRS_DEFAULT_SEED);
 237              		.loc 1 64 0
 238 0002 B420     		movs	r0, #180
 239 0004 0002     		lsls	r0, r0, #8
 240 0006 FFF7FEFF 		bl	PRS_WritePolynomial
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 16


 241              	.LVL2:
  65:Generated_Source\PSoC4/PRS.c ****         #if (PRS_RUN_MODE == PRS__CLOCKED)
 242              		.loc 1 65 0
 243 000a 0348     		ldr	r0, .L23
 244 000c FFF7FEFF 		bl	PRS_WriteSeed
 245              	.LVL3:
  69:Generated_Source\PSoC4/PRS.c ****     #else
 246              		.loc 1 69 0
 247 0010 FFF7FEFF 		bl	PRS_Enable
 248              	.LVL4:
  81:Generated_Source\PSoC4/PRS.c **** 
 249              		.loc 1 81 0
 250              		@ sp needed
 251 0014 10BD     		pop	{r4, pc}
 252              	.L24:
 253 0016 C046     		.align	2
 254              	.L23:
 255 0018 FFFF0000 		.word	65535
 256              		.cfi_endproc
 257              	.LFE1:
 258              		.size	PRS_Init, .-PRS_Init
 259              		.section	.text.PRS_Start,"ax",%progbits
 260              		.align	2
 261              		.global	PRS_Start
 262              		.code	16
 263              		.thumb_func
 264              		.type	PRS_Start, %function
 265              	PRS_Start:
 266              	.LFB3:
 127:Generated_Source\PSoC4/PRS.c ****     /* Writes seed value and ponynom value provided from customizer */
 267              		.loc 1 127 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271 0000 10B5     		push	{r4, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
 129:Generated_Source\PSoC4/PRS.c ****     {
 275              		.loc 1 129 0
 276 0002 064B     		ldr	r3, .L27
 277 0004 1B78     		ldrb	r3, [r3]
 278 0006 002B     		cmp	r3, #0
 279 0008 04D1     		bne	.L26
 131:Generated_Source\PSoC4/PRS.c ****         PRS_initVar = 1u;
 280              		.loc 1 131 0
 281 000a FFF7FEFF 		bl	PRS_Init
 282              	.LVL5:
 132:Generated_Source\PSoC4/PRS.c ****     }
 283              		.loc 1 132 0
 284 000e 0122     		movs	r2, #1
 285 0010 024B     		ldr	r3, .L27
 286 0012 1A70     		strb	r2, [r3]
 287              	.L26:
 135:Generated_Source\PSoC4/PRS.c **** }
 288              		.loc 1 135 0
 289 0014 FFF7FEFF 		bl	PRS_Enable
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 17


 290              	.LVL6:
 136:Generated_Source\PSoC4/PRS.c **** 
 291              		.loc 1 136 0
 292              		@ sp needed
 293 0018 10BD     		pop	{r4, pc}
 294              	.L28:
 295 001a C046     		.align	2
 296              	.L27:
 297 001c 00000000 		.word	.LANCHOR0
 298              		.cfi_endproc
 299              	.LFE3:
 300              		.size	PRS_Start, .-PRS_Start
 301              		.global	PRS_backup
 302              		.global	PRS_initVar
 303              		.data
 304              		.align	2
 305              		.type	PRS_backup, %object
 306              		.size	PRS_backup, 4
 307              	PRS_backup:
 308 0000 00       		.byte	0
 309 0001 00       		.space	1
 310 0002 FFFF     		.short	-1
 311              		.bss
 312              		.set	.LANCHOR0,. + 0
 313              		.type	PRS_initVar, %object
 314              		.size	PRS_initVar, 1
 315              	PRS_initVar:
 316 0000 00       		.space	1
 317              		.text
 318              	.Letext0:
 319              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 320              		.file 3 "Generated_Source\\PSoC4\\PRS.h"
 321              		.section	.debug_info,"",%progbits
 322              	.Ldebug_info0:
 323 0000 2C020000 		.4byte	0x22c
 324 0004 0400     		.2byte	0x4
 325 0006 00000000 		.4byte	.Ldebug_abbrev0
 326 000a 04       		.byte	0x4
 327 000b 01       		.uleb128 0x1
 328 000c 4F010000 		.4byte	.LASF33
 329 0010 0C       		.byte	0xc
 330 0011 63020000 		.4byte	.LASF34
 331 0015 C1000000 		.4byte	.LASF35
 332 0019 00000000 		.4byte	.Ldebug_ranges0+0
 333 001d 00000000 		.4byte	0
 334 0021 00000000 		.4byte	.Ldebug_line0
 335 0025 02       		.uleb128 0x2
 336 0026 01       		.byte	0x1
 337 0027 06       		.byte	0x6
 338 0028 80020000 		.4byte	.LASF0
 339 002c 02       		.uleb128 0x2
 340 002d 01       		.byte	0x1
 341 002e 08       		.byte	0x8
 342 002f 53000000 		.4byte	.LASF1
 343 0033 02       		.uleb128 0x2
 344 0034 02       		.byte	0x2
 345 0035 05       		.byte	0x5
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 18


 346 0036 12020000 		.4byte	.LASF2
 347 003a 02       		.uleb128 0x2
 348 003b 02       		.byte	0x2
 349 003c 07       		.byte	0x7
 350 003d 18000000 		.4byte	.LASF3
 351 0041 02       		.uleb128 0x2
 352 0042 04       		.byte	0x4
 353 0043 05       		.byte	0x5
 354 0044 30020000 		.4byte	.LASF4
 355 0048 02       		.uleb128 0x2
 356 0049 04       		.byte	0x4
 357 004a 07       		.byte	0x7
 358 004b 66000000 		.4byte	.LASF5
 359 004f 02       		.uleb128 0x2
 360 0050 08       		.byte	0x8
 361 0051 05       		.byte	0x5
 362 0052 F1010000 		.4byte	.LASF6
 363 0056 02       		.uleb128 0x2
 364 0057 08       		.byte	0x8
 365 0058 07       		.byte	0x7
 366 0059 2C010000 		.4byte	.LASF7
 367 005d 03       		.uleb128 0x3
 368 005e 04       		.byte	0x4
 369 005f 05       		.byte	0x5
 370 0060 696E7400 		.ascii	"int\000"
 371 0064 02       		.uleb128 0x2
 372 0065 04       		.byte	0x4
 373 0066 07       		.byte	0x7
 374 0067 2B000000 		.4byte	.LASF8
 375 006b 04       		.uleb128 0x4
 376 006c 78000000 		.4byte	.LASF9
 377 0070 02       		.byte	0x2
 378 0071 B901     		.2byte	0x1b9
 379 0073 2C000000 		.4byte	0x2c
 380 0077 04       		.uleb128 0x4
 381 0078 B5000000 		.4byte	.LASF10
 382 007c 02       		.byte	0x2
 383 007d BA01     		.2byte	0x1ba
 384 007f 3A000000 		.4byte	0x3a
 385 0083 02       		.uleb128 0x2
 386 0084 04       		.byte	0x4
 387 0085 04       		.byte	0x4
 388 0086 4D000000 		.4byte	.LASF11
 389 008a 02       		.uleb128 0x2
 390 008b 08       		.byte	0x8
 391 008c 04       		.byte	0x4
 392 008d 9A000000 		.4byte	.LASF12
 393 0091 02       		.uleb128 0x2
 394 0092 01       		.byte	0x1
 395 0093 08       		.byte	0x8
 396 0094 0D020000 		.4byte	.LASF13
 397 0098 04       		.uleb128 0x4
 398 0099 61000000 		.4byte	.LASF14
 399 009d 02       		.byte	0x2
 400 009e 6302     		.2byte	0x263
 401 00a0 A4000000 		.4byte	0xa4
 402 00a4 05       		.uleb128 0x5
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 19


 403 00a5 6B000000 		.4byte	0x6b
 404 00a9 04       		.uleb128 0x4
 405 00aa 00000000 		.4byte	.LASF15
 406 00ae 02       		.byte	0x2
 407 00af 6402     		.2byte	0x264
 408 00b1 B5000000 		.4byte	0xb5
 409 00b5 05       		.uleb128 0x5
 410 00b6 77000000 		.4byte	0x77
 411 00ba 02       		.uleb128 0x2
 412 00bb 08       		.byte	0x8
 413 00bc 04       		.byte	0x4
 414 00bd 57020000 		.4byte	.LASF16
 415 00c1 02       		.uleb128 0x2
 416 00c2 04       		.byte	0x4
 417 00c3 07       		.byte	0x7
 418 00c4 DD010000 		.4byte	.LASF17
 419 00c8 06       		.uleb128 0x6
 420 00c9 04       		.byte	0x4
 421 00ca 03       		.byte	0x3
 422 00cb 31       		.byte	0x31
 423 00cc E9000000 		.4byte	0xe9
 424 00d0 07       		.uleb128 0x7
 425 00d1 39020000 		.4byte	.LASF18
 426 00d5 03       		.byte	0x3
 427 00d6 33       		.byte	0x33
 428 00d7 6B000000 		.4byte	0x6b
 429 00db 00       		.byte	0
 430 00dc 07       		.uleb128 0x7
 431 00dd BC000000 		.4byte	.LASF19
 432 00e1 03       		.byte	0x3
 433 00e2 3D       		.byte	0x3d
 434 00e3 77000000 		.4byte	0x77
 435 00e7 02       		.byte	0x2
 436 00e8 00       		.byte	0
 437 00e9 08       		.uleb128 0x8
 438 00ea 45020000 		.4byte	.LASF20
 439 00ee 03       		.byte	0x3
 440 00ef 47       		.byte	0x47
 441 00f0 C8000000 		.4byte	0xc8
 442 00f4 09       		.uleb128 0x9
 443 00f5 E6010000 		.4byte	.LASF21
 444 00f9 01       		.byte	0x1
 445 00fa 62       		.byte	0x62
 446 00fb 00000000 		.4byte	.LFB2
 447 00ff 14000000 		.4byte	.LFE2-.LFB2
 448 0103 01       		.uleb128 0x1
 449 0104 9C       		.byte	0x9c
 450 0105 09       		.uleb128 0x9
 451 0106 7E000000 		.4byte	.LASF22
 452 010a 01       		.byte	0x1
 453 010b 99       		.byte	0x99
 454 010c 00000000 		.4byte	.LFB4
 455 0110 10000000 		.4byte	.LFE4-.LFB4
 456 0114 01       		.uleb128 0x1
 457 0115 9C       		.byte	0x9c
 458 0116 09       		.uleb128 0x9
 459 0117 0F000000 		.4byte	.LASF23
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 20


 460 011b 01       		.byte	0x1
 461 011c AE       		.byte	0xae
 462 011d 00000000 		.4byte	.LFB5
 463 0121 1C000000 		.4byte	.LFE5-.LFB5
 464 0125 01       		.uleb128 0x1
 465 0126 9C       		.byte	0x9c
 466 0127 0A       		.uleb128 0xa
 467 0128 AC000000 		.4byte	.LASF24
 468 012c 01       		.byte	0x1
 469 012d 9401     		.2byte	0x194
 470 012f 77000000 		.4byte	0x77
 471 0133 00000000 		.4byte	.LFB6
 472 0137 0C000000 		.4byte	.LFE6-.LFB6
 473 013b 01       		.uleb128 0x1
 474 013c 9C       		.byte	0x9c
 475 013d 0B       		.uleb128 0xb
 476 013e FF010000 		.4byte	.LASF26
 477 0142 01       		.byte	0x1
 478 0143 CB01     		.2byte	0x1cb
 479 0145 00000000 		.4byte	.LFB7
 480 0149 0C000000 		.4byte	.LFE7-.LFB7
 481 014d 01       		.uleb128 0x1
 482 014e 9C       		.byte	0x9c
 483 014f 62010000 		.4byte	0x162
 484 0153 0C       		.uleb128 0xc
 485 0154 BC000000 		.4byte	.LASF19
 486 0158 01       		.byte	0x1
 487 0159 CB01     		.2byte	0x1cb
 488 015b 77000000 		.4byte	0x77
 489 015f 01       		.uleb128 0x1
 490 0160 50       		.byte	0x50
 491 0161 00       		.byte	0
 492 0162 0A       		.uleb128 0xa
 493 0163 87000000 		.4byte	.LASF25
 494 0167 01       		.byte	0x1
 495 0168 0302     		.2byte	0x203
 496 016a 77000000 		.4byte	0x77
 497 016e 00000000 		.4byte	.LFB8
 498 0172 0C000000 		.4byte	.LFE8-.LFB8
 499 0176 01       		.uleb128 0x1
 500 0177 9C       		.byte	0x9c
 501 0178 0B       		.uleb128 0xb
 502 0179 1C020000 		.4byte	.LASF27
 503 017d 01       		.byte	0x1
 504 017e 3B02     		.2byte	0x23b
 505 0180 00000000 		.4byte	.LFB9
 506 0184 0C000000 		.4byte	.LFE9-.LFB9
 507 0188 01       		.uleb128 0x1
 508 0189 9C       		.byte	0x9c
 509 018a 9D010000 		.4byte	0x19d
 510 018e 0C       		.uleb128 0xc
 511 018f A1000000 		.4byte	.LASF28
 512 0193 01       		.byte	0x1
 513 0194 3B02     		.2byte	0x23b
 514 0196 77000000 		.4byte	0x77
 515 019a 01       		.uleb128 0x1
 516 019b 50       		.byte	0x50
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 21


 517 019c 00       		.byte	0
 518 019d 0D       		.uleb128 0xd
 519 019e 06000000 		.4byte	.LASF29
 520 01a2 01       		.byte	0x1
 521 01a3 3C       		.byte	0x3c
 522 01a4 00000000 		.4byte	.LFB1
 523 01a8 1C000000 		.4byte	.LFE1-.LFB1
 524 01ac 01       		.uleb128 0x1
 525 01ad 9C       		.byte	0x9c
 526 01ae E5010000 		.4byte	0x1e5
 527 01b2 0E       		.uleb128 0xe
 528 01b3 0A000000 		.4byte	.LVL2
 529 01b7 78010000 		.4byte	0x178
 530 01bb C7010000 		.4byte	0x1c7
 531 01bf 0F       		.uleb128 0xf
 532 01c0 01       		.uleb128 0x1
 533 01c1 50       		.byte	0x50
 534 01c2 03       		.uleb128 0x3
 535 01c3 0B       		.byte	0xb
 536 01c4 00B4     		.2byte	0xb400
 537 01c6 00       		.byte	0
 538 01c7 0E       		.uleb128 0xe
 539 01c8 10000000 		.4byte	.LVL3
 540 01cc 3D010000 		.4byte	0x13d
 541 01d0 DB010000 		.4byte	0x1db
 542 01d4 0F       		.uleb128 0xf
 543 01d5 01       		.uleb128 0x1
 544 01d6 50       		.byte	0x50
 545 01d7 02       		.uleb128 0x2
 546 01d8 09       		.byte	0x9
 547 01d9 FF       		.byte	0xff
 548 01da 00       		.byte	0
 549 01db 10       		.uleb128 0x10
 550 01dc 14000000 		.4byte	.LVL4
 551 01e0 F4000000 		.4byte	0xf4
 552 01e4 00       		.byte	0
 553 01e5 0D       		.uleb128 0xd
 554 01e6 43000000 		.4byte	.LASF30
 555 01ea 01       		.byte	0x1
 556 01eb 7E       		.byte	0x7e
 557 01ec 00000000 		.4byte	.LFB3
 558 01f0 20000000 		.4byte	.LFE3-.LFB3
 559 01f4 01       		.uleb128 0x1
 560 01f5 9C       		.byte	0x9c
 561 01f6 0D020000 		.4byte	0x20d
 562 01fa 10       		.uleb128 0x10
 563 01fb 0E000000 		.4byte	.LVL5
 564 01ff 9D010000 		.4byte	0x19d
 565 0203 10       		.uleb128 0x10
 566 0204 18000000 		.4byte	.LVL6
 567 0208 F4000000 		.4byte	0xf4
 568 020c 00       		.byte	0
 569 020d 11       		.uleb128 0x11
 570 020e 43010000 		.4byte	.LASF31
 571 0212 01       		.byte	0x1
 572 0213 14       		.byte	0x14
 573 0214 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 22


 574 0218 05       		.uleb128 0x5
 575 0219 03       		.byte	0x3
 576 021a 00000000 		.4byte	PRS_initVar
 577 021e 11       		.uleb128 0x11
 578 021f 38000000 		.4byte	.LASF32
 579 0223 01       		.byte	0x1
 580 0224 16       		.byte	0x16
 581 0225 E9000000 		.4byte	0xe9
 582 0229 05       		.uleb128 0x5
 583 022a 03       		.byte	0x3
 584 022b 00000000 		.4byte	PRS_backup
 585 022f 00       		.byte	0
 586              		.section	.debug_abbrev,"",%progbits
 587              	.Ldebug_abbrev0:
 588 0000 01       		.uleb128 0x1
 589 0001 11       		.uleb128 0x11
 590 0002 01       		.byte	0x1
 591 0003 25       		.uleb128 0x25
 592 0004 0E       		.uleb128 0xe
 593 0005 13       		.uleb128 0x13
 594 0006 0B       		.uleb128 0xb
 595 0007 03       		.uleb128 0x3
 596 0008 0E       		.uleb128 0xe
 597 0009 1B       		.uleb128 0x1b
 598 000a 0E       		.uleb128 0xe
 599 000b 55       		.uleb128 0x55
 600 000c 17       		.uleb128 0x17
 601 000d 11       		.uleb128 0x11
 602 000e 01       		.uleb128 0x1
 603 000f 10       		.uleb128 0x10
 604 0010 17       		.uleb128 0x17
 605 0011 00       		.byte	0
 606 0012 00       		.byte	0
 607 0013 02       		.uleb128 0x2
 608 0014 24       		.uleb128 0x24
 609 0015 00       		.byte	0
 610 0016 0B       		.uleb128 0xb
 611 0017 0B       		.uleb128 0xb
 612 0018 3E       		.uleb128 0x3e
 613 0019 0B       		.uleb128 0xb
 614 001a 03       		.uleb128 0x3
 615 001b 0E       		.uleb128 0xe
 616 001c 00       		.byte	0
 617 001d 00       		.byte	0
 618 001e 03       		.uleb128 0x3
 619 001f 24       		.uleb128 0x24
 620 0020 00       		.byte	0
 621 0021 0B       		.uleb128 0xb
 622 0022 0B       		.uleb128 0xb
 623 0023 3E       		.uleb128 0x3e
 624 0024 0B       		.uleb128 0xb
 625 0025 03       		.uleb128 0x3
 626 0026 08       		.uleb128 0x8
 627 0027 00       		.byte	0
 628 0028 00       		.byte	0
 629 0029 04       		.uleb128 0x4
 630 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 23


 631 002b 00       		.byte	0
 632 002c 03       		.uleb128 0x3
 633 002d 0E       		.uleb128 0xe
 634 002e 3A       		.uleb128 0x3a
 635 002f 0B       		.uleb128 0xb
 636 0030 3B       		.uleb128 0x3b
 637 0031 05       		.uleb128 0x5
 638 0032 49       		.uleb128 0x49
 639 0033 13       		.uleb128 0x13
 640 0034 00       		.byte	0
 641 0035 00       		.byte	0
 642 0036 05       		.uleb128 0x5
 643 0037 35       		.uleb128 0x35
 644 0038 00       		.byte	0
 645 0039 49       		.uleb128 0x49
 646 003a 13       		.uleb128 0x13
 647 003b 00       		.byte	0
 648 003c 00       		.byte	0
 649 003d 06       		.uleb128 0x6
 650 003e 13       		.uleb128 0x13
 651 003f 01       		.byte	0x1
 652 0040 0B       		.uleb128 0xb
 653 0041 0B       		.uleb128 0xb
 654 0042 3A       		.uleb128 0x3a
 655 0043 0B       		.uleb128 0xb
 656 0044 3B       		.uleb128 0x3b
 657 0045 0B       		.uleb128 0xb
 658 0046 01       		.uleb128 0x1
 659 0047 13       		.uleb128 0x13
 660 0048 00       		.byte	0
 661 0049 00       		.byte	0
 662 004a 07       		.uleb128 0x7
 663 004b 0D       		.uleb128 0xd
 664 004c 00       		.byte	0
 665 004d 03       		.uleb128 0x3
 666 004e 0E       		.uleb128 0xe
 667 004f 3A       		.uleb128 0x3a
 668 0050 0B       		.uleb128 0xb
 669 0051 3B       		.uleb128 0x3b
 670 0052 0B       		.uleb128 0xb
 671 0053 49       		.uleb128 0x49
 672 0054 13       		.uleb128 0x13
 673 0055 38       		.uleb128 0x38
 674 0056 0B       		.uleb128 0xb
 675 0057 00       		.byte	0
 676 0058 00       		.byte	0
 677 0059 08       		.uleb128 0x8
 678 005a 16       		.uleb128 0x16
 679 005b 00       		.byte	0
 680 005c 03       		.uleb128 0x3
 681 005d 0E       		.uleb128 0xe
 682 005e 3A       		.uleb128 0x3a
 683 005f 0B       		.uleb128 0xb
 684 0060 3B       		.uleb128 0x3b
 685 0061 0B       		.uleb128 0xb
 686 0062 49       		.uleb128 0x49
 687 0063 13       		.uleb128 0x13
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 24


 688 0064 00       		.byte	0
 689 0065 00       		.byte	0
 690 0066 09       		.uleb128 0x9
 691 0067 2E       		.uleb128 0x2e
 692 0068 00       		.byte	0
 693 0069 3F       		.uleb128 0x3f
 694 006a 19       		.uleb128 0x19
 695 006b 03       		.uleb128 0x3
 696 006c 0E       		.uleb128 0xe
 697 006d 3A       		.uleb128 0x3a
 698 006e 0B       		.uleb128 0xb
 699 006f 3B       		.uleb128 0x3b
 700 0070 0B       		.uleb128 0xb
 701 0071 27       		.uleb128 0x27
 702 0072 19       		.uleb128 0x19
 703 0073 11       		.uleb128 0x11
 704 0074 01       		.uleb128 0x1
 705 0075 12       		.uleb128 0x12
 706 0076 06       		.uleb128 0x6
 707 0077 40       		.uleb128 0x40
 708 0078 18       		.uleb128 0x18
 709 0079 9742     		.uleb128 0x2117
 710 007b 19       		.uleb128 0x19
 711 007c 00       		.byte	0
 712 007d 00       		.byte	0
 713 007e 0A       		.uleb128 0xa
 714 007f 2E       		.uleb128 0x2e
 715 0080 00       		.byte	0
 716 0081 3F       		.uleb128 0x3f
 717 0082 19       		.uleb128 0x19
 718 0083 03       		.uleb128 0x3
 719 0084 0E       		.uleb128 0xe
 720 0085 3A       		.uleb128 0x3a
 721 0086 0B       		.uleb128 0xb
 722 0087 3B       		.uleb128 0x3b
 723 0088 05       		.uleb128 0x5
 724 0089 27       		.uleb128 0x27
 725 008a 19       		.uleb128 0x19
 726 008b 49       		.uleb128 0x49
 727 008c 13       		.uleb128 0x13
 728 008d 11       		.uleb128 0x11
 729 008e 01       		.uleb128 0x1
 730 008f 12       		.uleb128 0x12
 731 0090 06       		.uleb128 0x6
 732 0091 40       		.uleb128 0x40
 733 0092 18       		.uleb128 0x18
 734 0093 9742     		.uleb128 0x2117
 735 0095 19       		.uleb128 0x19
 736 0096 00       		.byte	0
 737 0097 00       		.byte	0
 738 0098 0B       		.uleb128 0xb
 739 0099 2E       		.uleb128 0x2e
 740 009a 01       		.byte	0x1
 741 009b 3F       		.uleb128 0x3f
 742 009c 19       		.uleb128 0x19
 743 009d 03       		.uleb128 0x3
 744 009e 0E       		.uleb128 0xe
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 25


 745 009f 3A       		.uleb128 0x3a
 746 00a0 0B       		.uleb128 0xb
 747 00a1 3B       		.uleb128 0x3b
 748 00a2 05       		.uleb128 0x5
 749 00a3 27       		.uleb128 0x27
 750 00a4 19       		.uleb128 0x19
 751 00a5 11       		.uleb128 0x11
 752 00a6 01       		.uleb128 0x1
 753 00a7 12       		.uleb128 0x12
 754 00a8 06       		.uleb128 0x6
 755 00a9 40       		.uleb128 0x40
 756 00aa 18       		.uleb128 0x18
 757 00ab 9742     		.uleb128 0x2117
 758 00ad 19       		.uleb128 0x19
 759 00ae 01       		.uleb128 0x1
 760 00af 13       		.uleb128 0x13
 761 00b0 00       		.byte	0
 762 00b1 00       		.byte	0
 763 00b2 0C       		.uleb128 0xc
 764 00b3 05       		.uleb128 0x5
 765 00b4 00       		.byte	0
 766 00b5 03       		.uleb128 0x3
 767 00b6 0E       		.uleb128 0xe
 768 00b7 3A       		.uleb128 0x3a
 769 00b8 0B       		.uleb128 0xb
 770 00b9 3B       		.uleb128 0x3b
 771 00ba 05       		.uleb128 0x5
 772 00bb 49       		.uleb128 0x49
 773 00bc 13       		.uleb128 0x13
 774 00bd 02       		.uleb128 0x2
 775 00be 18       		.uleb128 0x18
 776 00bf 00       		.byte	0
 777 00c0 00       		.byte	0
 778 00c1 0D       		.uleb128 0xd
 779 00c2 2E       		.uleb128 0x2e
 780 00c3 01       		.byte	0x1
 781 00c4 3F       		.uleb128 0x3f
 782 00c5 19       		.uleb128 0x19
 783 00c6 03       		.uleb128 0x3
 784 00c7 0E       		.uleb128 0xe
 785 00c8 3A       		.uleb128 0x3a
 786 00c9 0B       		.uleb128 0xb
 787 00ca 3B       		.uleb128 0x3b
 788 00cb 0B       		.uleb128 0xb
 789 00cc 27       		.uleb128 0x27
 790 00cd 19       		.uleb128 0x19
 791 00ce 11       		.uleb128 0x11
 792 00cf 01       		.uleb128 0x1
 793 00d0 12       		.uleb128 0x12
 794 00d1 06       		.uleb128 0x6
 795 00d2 40       		.uleb128 0x40
 796 00d3 18       		.uleb128 0x18
 797 00d4 9742     		.uleb128 0x2117
 798 00d6 19       		.uleb128 0x19
 799 00d7 01       		.uleb128 0x1
 800 00d8 13       		.uleb128 0x13
 801 00d9 00       		.byte	0
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 26


 802 00da 00       		.byte	0
 803 00db 0E       		.uleb128 0xe
 804 00dc 898201   		.uleb128 0x4109
 805 00df 01       		.byte	0x1
 806 00e0 11       		.uleb128 0x11
 807 00e1 01       		.uleb128 0x1
 808 00e2 31       		.uleb128 0x31
 809 00e3 13       		.uleb128 0x13
 810 00e4 01       		.uleb128 0x1
 811 00e5 13       		.uleb128 0x13
 812 00e6 00       		.byte	0
 813 00e7 00       		.byte	0
 814 00e8 0F       		.uleb128 0xf
 815 00e9 8A8201   		.uleb128 0x410a
 816 00ec 00       		.byte	0
 817 00ed 02       		.uleb128 0x2
 818 00ee 18       		.uleb128 0x18
 819 00ef 9142     		.uleb128 0x2111
 820 00f1 18       		.uleb128 0x18
 821 00f2 00       		.byte	0
 822 00f3 00       		.byte	0
 823 00f4 10       		.uleb128 0x10
 824 00f5 898201   		.uleb128 0x4109
 825 00f8 00       		.byte	0
 826 00f9 11       		.uleb128 0x11
 827 00fa 01       		.uleb128 0x1
 828 00fb 31       		.uleb128 0x31
 829 00fc 13       		.uleb128 0x13
 830 00fd 00       		.byte	0
 831 00fe 00       		.byte	0
 832 00ff 11       		.uleb128 0x11
 833 0100 34       		.uleb128 0x34
 834 0101 00       		.byte	0
 835 0102 03       		.uleb128 0x3
 836 0103 0E       		.uleb128 0xe
 837 0104 3A       		.uleb128 0x3a
 838 0105 0B       		.uleb128 0xb
 839 0106 3B       		.uleb128 0x3b
 840 0107 0B       		.uleb128 0xb
 841 0108 49       		.uleb128 0x49
 842 0109 13       		.uleb128 0x13
 843 010a 3F       		.uleb128 0x3f
 844 010b 19       		.uleb128 0x19
 845 010c 02       		.uleb128 0x2
 846 010d 18       		.uleb128 0x18
 847 010e 00       		.byte	0
 848 010f 00       		.byte	0
 849 0110 00       		.byte	0
 850              		.section	.debug_aranges,"",%progbits
 851 0000 5C000000 		.4byte	0x5c
 852 0004 0200     		.2byte	0x2
 853 0006 00000000 		.4byte	.Ldebug_info0
 854 000a 04       		.byte	0x4
 855 000b 00       		.byte	0
 856 000c 0000     		.2byte	0
 857 000e 0000     		.2byte	0
 858 0010 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 27


 859 0014 14000000 		.4byte	.LFE2-.LFB2
 860 0018 00000000 		.4byte	.LFB4
 861 001c 10000000 		.4byte	.LFE4-.LFB4
 862 0020 00000000 		.4byte	.LFB5
 863 0024 1C000000 		.4byte	.LFE5-.LFB5
 864 0028 00000000 		.4byte	.LFB6
 865 002c 0C000000 		.4byte	.LFE6-.LFB6
 866 0030 00000000 		.4byte	.LFB7
 867 0034 0C000000 		.4byte	.LFE7-.LFB7
 868 0038 00000000 		.4byte	.LFB8
 869 003c 0C000000 		.4byte	.LFE8-.LFB8
 870 0040 00000000 		.4byte	.LFB9
 871 0044 0C000000 		.4byte	.LFE9-.LFB9
 872 0048 00000000 		.4byte	.LFB1
 873 004c 1C000000 		.4byte	.LFE1-.LFB1
 874 0050 00000000 		.4byte	.LFB3
 875 0054 20000000 		.4byte	.LFE3-.LFB3
 876 0058 00000000 		.4byte	0
 877 005c 00000000 		.4byte	0
 878              		.section	.debug_ranges,"",%progbits
 879              	.Ldebug_ranges0:
 880 0000 00000000 		.4byte	.LFB2
 881 0004 14000000 		.4byte	.LFE2
 882 0008 00000000 		.4byte	.LFB4
 883 000c 10000000 		.4byte	.LFE4
 884 0010 00000000 		.4byte	.LFB5
 885 0014 1C000000 		.4byte	.LFE5
 886 0018 00000000 		.4byte	.LFB6
 887 001c 0C000000 		.4byte	.LFE6
 888 0020 00000000 		.4byte	.LFB7
 889 0024 0C000000 		.4byte	.LFE7
 890 0028 00000000 		.4byte	.LFB8
 891 002c 0C000000 		.4byte	.LFE8
 892 0030 00000000 		.4byte	.LFB9
 893 0034 0C000000 		.4byte	.LFE9
 894 0038 00000000 		.4byte	.LFB1
 895 003c 1C000000 		.4byte	.LFE1
 896 0040 00000000 		.4byte	.LFB3
 897 0044 20000000 		.4byte	.LFE3
 898 0048 00000000 		.4byte	0
 899 004c 00000000 		.4byte	0
 900              		.section	.debug_line,"",%progbits
 901              	.Ldebug_line0:
 902 0000 01010000 		.section	.debug_str,"MS",%progbits,1
 902      02004900 
 902      00000201 
 902      FB0E0D00 
 902      01010101 
 903              	.LASF15:
 904 0000 72656731 		.ascii	"reg16\000"
 904      3600
 905              	.LASF29:
 906 0006 5052535F 		.ascii	"PRS_Init\000"
 906      496E6974 
 906      00
 907              	.LASF23:
 908 000f 5052535F 		.ascii	"PRS_Step\000"
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 28


 908      53746570 
 908      00
 909              	.LASF3:
 910 0018 73686F72 		.ascii	"short unsigned int\000"
 910      7420756E 
 910      7369676E 
 910      65642069 
 910      6E7400
 911              	.LASF8:
 912 002b 756E7369 		.ascii	"unsigned int\000"
 912      676E6564 
 912      20696E74 
 912      00
 913              	.LASF32:
 914 0038 5052535F 		.ascii	"PRS_backup\000"
 914      6261636B 
 914      757000
 915              	.LASF30:
 916 0043 5052535F 		.ascii	"PRS_Start\000"
 916      53746172 
 916      7400
 917              	.LASF11:
 918 004d 666C6F61 		.ascii	"float\000"
 918      7400
 919              	.LASF1:
 920 0053 756E7369 		.ascii	"unsigned char\000"
 920      676E6564 
 920      20636861 
 920      7200
 921              	.LASF14:
 922 0061 72656738 		.ascii	"reg8\000"
 922      00
 923              	.LASF5:
 924 0066 6C6F6E67 		.ascii	"long unsigned int\000"
 924      20756E73 
 924      69676E65 
 924      6420696E 
 924      7400
 925              	.LASF9:
 926 0078 75696E74 		.ascii	"uint8\000"
 926      3800
 927              	.LASF22:
 928 007e 5052535F 		.ascii	"PRS_Stop\000"
 928      53746F70 
 928      00
 929              	.LASF25:
 930 0087 5052535F 		.ascii	"PRS_ReadPolynomial\000"
 930      52656164 
 930      506F6C79 
 930      6E6F6D69 
 930      616C00
 931              	.LASF12:
 932 009a 646F7562 		.ascii	"double\000"
 932      6C6500
 933              	.LASF28:
 934 00a1 706F6C79 		.ascii	"polynomial\000"
 934      6E6F6D69 
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 29


 934      616C00
 935              	.LASF24:
 936 00ac 5052535F 		.ascii	"PRS_Read\000"
 936      52656164 
 936      00
 937              	.LASF10:
 938 00b5 75696E74 		.ascii	"uint16\000"
 938      313600
 939              	.LASF19:
 940 00bc 73656564 		.ascii	"seed\000"
 940      00
 941              	.LASF35:
 942 00c1 433A5C55 		.ascii	"C:\\Users\\corne\\Dropbox\\prive\\projects\\Wireles"
 942      73657273 
 942      5C636F72 
 942      6E655C44 
 942      726F7062 
 943 00ee 735F7365 		.ascii	"s_sensornode\\Software\\Wireless_sensornode\\Firmwa"
 943      6E736F72 
 943      6E6F6465 
 943      5C536F66 
 943      74776172 
 944 011e 72655F56 		.ascii	"re_V0.1.cydsn\000"
 944      302E312E 
 944      63796473 
 944      6E00
 945              	.LASF7:
 946 012c 6C6F6E67 		.ascii	"long long unsigned int\000"
 946      206C6F6E 
 946      6720756E 
 946      7369676E 
 946      65642069 
 947              	.LASF31:
 948 0143 5052535F 		.ascii	"PRS_initVar\000"
 948      696E6974 
 948      56617200 
 949              	.LASF33:
 950 014f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 950      43313120 
 950      352E342E 
 950      31203230 
 950      31363036 
 951 0182 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 951      20726576 
 951      6973696F 
 951      6E203233 
 951      37373135 
 952 01b5 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 952      66756E63 
 952      74696F6E 
 952      2D736563 
 952      74696F6E 
 953              	.LASF17:
 954 01dd 73697A65 		.ascii	"sizetype\000"
 954      74797065 
 954      00
 955              	.LASF21:
ARM GAS  C:\Users\corne\AppData\Local\Temp\ccJFv04i.s 			page 30


 956 01e6 5052535F 		.ascii	"PRS_Enable\000"
 956      456E6162 
 956      6C6500
 957              	.LASF6:
 958 01f1 6C6F6E67 		.ascii	"long long int\000"
 958      206C6F6E 
 958      6720696E 
 958      7400
 959              	.LASF26:
 960 01ff 5052535F 		.ascii	"PRS_WriteSeed\000"
 960      57726974 
 960      65536565 
 960      6400
 961              	.LASF13:
 962 020d 63686172 		.ascii	"char\000"
 962      00
 963              	.LASF2:
 964 0212 73686F72 		.ascii	"short int\000"
 964      7420696E 
 964      7400
 965              	.LASF27:
 966 021c 5052535F 		.ascii	"PRS_WritePolynomial\000"
 966      57726974 
 966      65506F6C 
 966      796E6F6D 
 966      69616C00 
 967              	.LASF4:
 968 0230 6C6F6E67 		.ascii	"long int\000"
 968      20696E74 
 968      00
 969              	.LASF18:
 970 0239 656E6162 		.ascii	"enableState\000"
 970      6C655374 
 970      61746500 
 971              	.LASF20:
 972 0245 5052535F 		.ascii	"PRS_BACKUP_STRUCT\000"
 972      4241434B 
 972      55505F53 
 972      54525543 
 972      5400
 973              	.LASF16:
 974 0257 6C6F6E67 		.ascii	"long double\000"
 974      20646F75 
 974      626C6500 
 975              	.LASF34:
 976 0263 47656E65 		.ascii	"Generated_Source\\PSoC4\\PRS.c\000"
 976      72617465 
 976      645F536F 
 976      75726365 
 976      5C50536F 
 977              	.LASF0:
 978 0280 7369676E 		.ascii	"signed char\000"
 978      65642063 
 978      68617200 
 979              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
